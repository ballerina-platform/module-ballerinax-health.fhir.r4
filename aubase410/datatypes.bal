// Copyright (c) ${licenseYear}, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r4;

@r4:DataTypeDefinition {
    name: "AUAustralianCompanyNumber",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        },    
        "AuAustraliancompanynumberUse": {
            name: "AuAustraliancompanynumberUse",
            dataType: AuAustraliancompanynumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuAustraliancompanynumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
    AuAustraliancompanynumberUse AuAustraliancompanynumberUse?;
|};

public enum AuAustraliancompanynumberUse {
    CODE_AUAUSTRALIANCOMPANYNUMBERUSE_SECONDARY = "secondary",
    CODE_AUAUSTRALIANCOMPANYNUMBERUSE_TEMP = "temp",
    CODE_AUAUSTRALIANCOMPANYNUMBERUSE_USUAL = "usual",
    CODE_AUAUSTRALIANCOMPANYNUMBERUSE_OLD = "old",
    CODE_AUAUSTRALIANCOMPANYNUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUBaseDosage",
    baseType: (),
    elements: {
    
        "maxDosePerLifetime": {
            name: "maxDosePerLifetime",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Upper limit on medication per lifetime of the patient.",
            path: "Dosage.maxDosePerLifetime"
        },    
        "additionalInstruction": {
            name: "additionalInstruction",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Supplemental instructions to the patient on how to take the medication (e.g. 'with meals' or'take half to one hour before food') or warnings for the patient about the medication (e.g. 'may cause drowsiness' or 'avoid exposure of skin to direct sunlight or sunlamps').",
            path: "Dosage.additionalInstruction"
        },    
        "rateRatio": {
            name: "rateRatio",
            dataType: r4:Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "Amount of medication per unit of time.",
            path: "Dosage.doseAndRate.rate[x]"
        },    
        "method": {
            name: "method",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Technique for administering medication.",
            path: "Dosage.method"
        },    
        "timing": {
            name: "timing",
            dataType: r4:Timing,
            min: 0,
            max: 1,
            isArray: false,
            description: "When medication should be administered.",
            path: "Dosage.timing"
        },    
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Dosage.modifierExtension"
        },    
        "doseAndRate": {
            name: "doseAndRate",
            dataType: r4:ElementDoseAndRate,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The amount of medication administered.",
            path: "Dosage.doseAndRate"
        },    
        "sequence": {
            name: "sequence",
            dataType: r4:integer,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates the order in which the dosage instructions should be applied or interpreted.",
            path: "Dosage.sequence"
        },    
        "site": {
            name: "site",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Body site to administer to.",
            path: "Dosage.site"
        },    
        "route": {
            name: "route",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "How drug should enter body.",
            path: "Dosage.route"
        },    
        "doseRange": {
            name: "doseRange",
            dataType: r4:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "Amount of medication per dose.",
            path: "Dosage.doseAndRate.dose[x]"
        },    
        "asNeededBoolean": {
            name: "asNeededBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).",
            path: "Dosage.asNeeded[x]"
        },    
        "maxDosePerPeriod": {
            name: "maxDosePerPeriod",
            dataType: r4:Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "Upper limit on medication per unit of time.",
            path: "Dosage.maxDosePerPeriod"
        },    
        "maxDosePerAdministration": {
            name: "maxDosePerAdministration",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Upper limit on medication per administration.",
            path: "Dosage.maxDosePerAdministration"
        },    
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Free text dosage instructions e.g. SIG.",
            path: "Dosage.text"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The kind of dose or rate specified, for example, ordered or calculated.",
            path: "Dosage.doseAndRate.type"
        },    
        "patientInstruction": {
            name: "patientInstruction",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Instructions in terms that are understood by the patient or consumer.",
            path: "Dosage.patientInstruction"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuDosage record {|
    *r4:Dosage;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Quantity maxDosePerLifetime?;
    r4:CodeableConcept[] additionalInstruction?;
    r4:Ratio rateRatio?;
    r4:CodeableConcept method?;
    r4:Timing timing?;
    r4:Extension[] modifierExtension?;
    r4:ElementDoseAndRate[] doseAndRate?;
    r4:integer sequence?;
    r4:CodeableConcept site?;
    r4:CodeableConcept route?;
    r4:Range doseRange?;
    boolean asNeededBoolean?;
    r4:Ratio maxDosePerPeriod?;
    r4:Quantity maxDosePerAdministration?;
    string text?;
    r4:CodeableConcept 'type?;
    string patientInstruction?;
|};


@r4:DataTypeDefinition {
    name: "AUNATASiteNumber",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "AuNatasitenumberUse": {
            name: "AuNatasitenumberUse",
            dataType: AuNatasitenumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuNatasitenumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    AuNatasitenumberUse AuNatasitenumberUse?;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuNatasitenumberUse {
    CODE_AUNATASITENUMBERUSE_SECONDARY = "secondary",
    CODE_AUNATASITENUMBERUSE_TEMP = "temp",
    CODE_AUNATASITENUMBERUSE_USUAL = "usual",
    CODE_AUNATASITENUMBERUSE_OLD = "old",
    CODE_AUNATASITENUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AhpraRegistrationDetails",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra notation type value.",
            path: "Extension.extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra notation descriptive details value.",
            path: "Extension.extension.extension.value[x]"
        },    
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra notation last edit date value.",
            path: "Extension.extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AhpraregistrationDetails record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept?;
    string valueString?;
    r4:date valueDate?;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AUETPPrescriptionIdentifier",
    baseType: (),
    elements: {
    
        "reference": {
            name: "reference",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
            path: "Identifier.assigner.reference"
        },    
        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
            path: "Identifier.assigner.identifier"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "display": {
            name: "display",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Plain text narrative that identifies the resource in addition to the resource reference.",
            path: "Identifier.assigner.display"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent. The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. 'Patient' is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
            path: "Identifier.assigner.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        },    
        "AuEtpprescriptionidentifierUse": {
            name: "AuEtpprescriptionidentifierUse",
            dataType: AuEtpprescriptionidentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuEtpprescriptionidentifier record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string reference?;
    r4:Identifier identifier?;
    r4:Period period?;
    r4:uri system;
    string display;
    r4:Reference assigner;
    r4:CodeableConcept 'type;
    string value;
    AuEtpprescriptionidentifierUse AuEtpprescriptionidentifierUse?;
|};

public enum AuEtpprescriptionidentifierUse {
    CODE_AUETPPRESCRIPTIONIDENTIFIERUSE_SECONDARY = "secondary",
    CODE_AUETPPRESCRIPTIONIDENTIFIERUSE_TEMP = "temp",
    CODE_AUETPPRESCRIPTIONIDENTIFIERUSE_USUAL = "usual",
    CODE_AUETPPRESCRIPTIONIDENTIFIERUSE_OLD = "old",
    CODE_AUETPPRESCRIPTIONIDENTIFIERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUCSPRegistrationNumber",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "AuCspregistrationnumberUse": {
            name: "AuCspregistrationnumberUse",
            dataType: AuCspregistrationnumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuCspregistrationnumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    AuCspregistrationnumberUse AuCspregistrationnumberUse?;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuCspregistrationnumberUse {
    CODE_AUCSPREGISTRATIONNUMBERUSE_SECONDARY = "secondary",
    CODE_AUCSPREGISTRATIONNUMBERUSE_TEMP = "temp",
    CODE_AUCSPREGISTRATIONNUMBERUSE_USUAL = "usual",
    CODE_AUCSPREGISTRATIONNUMBERUSE_OLD = "old",
    CODE_AUCSPREGISTRATIONNUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUHPIO",
    baseType: (),
    elements: {
    
        "AuHpioUse": {
            name: "AuHpioUse",
            dataType: AuHpioUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuHpio record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    AuHpioUse AuHpioUse?;
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuHpioUse {
    CODE_AUHPIOUSE_SECONDARY = "secondary",
    CODE_AUHPIOUSE_TEMP = "temp",
    CODE_AUHPIOUSE_USUAL = "usual",
    CODE_AUHPIOUSE_OLD = "old",
    CODE_AUHPIOUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUHealthCareCardNumber",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "AuHealthcarecardnumberUse": {
            name: "AuHealthcarecardnumberUse",
            dataType: AuHealthcarecardnumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuHealthcarecardnumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    AuHealthcarecardnumberUse AuHealthcarecardnumberUse?;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuHealthcarecardnumberUse {
    CODE_AUHEALTHCARECARDNUMBERUSE_SECONDARY = "secondary",
    CODE_AUHEALTHCARECARDNUMBERUSE_TEMP = "temp",
    CODE_AUHEALTHCARECARDNUMBERUSE_USUAL = "usual",
    CODE_AUHEALTHCARECARDNUMBERUSE_OLD = "old",
    CODE_AUHEALTHCARECARDNUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUHPII",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "AuHpiiUse": {
            name: "AuHpiiUse",
            dataType: AuHpiiUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuHpii record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    AuHpiiUse AuHpiiUse?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuHpiiUse {
    CODE_AUHPIIUSE_SECONDARY = "secondary",
    CODE_AUHPIIUSE_TEMP = "temp",
    CODE_AUHPIIUSE_USUAL = "usual",
    CODE_AUHPIIUSE_OLD = "old",
    CODE_AUHPIIUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "MedicationType",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MedicationType record {|
    *r4:CodingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AuthorRelatedPerson",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuthorRelatedPerson record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AUAustralianRegisteredBodyNumber",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "AuAustralianregistredbodynumberUse": {
            name: "AuAustralianregistredbodynumberUse",
            dataType: AuAustralianregistredbodynumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuAustralianregistredbodynumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    AuAustralianregistredbodynumberUse AuAustralianregistredbodynumberUse?;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuAustralianregistredbodynumberUse {
    CODE_AUAUSTRALIANREGISTREDBODYNUMBERUSE_SECONDARY = "secondary",
    CODE_AUAUSTRALIANREGISTREDBODYNUMBERUSE_TEMP = "temp",
    CODE_AUAUSTRALIANREGISTREDBODYNUMBERUSE_USUAL = "usual",
    CODE_AUAUSTRALIANREGISTREDBODYNUMBERUSE_OLD = "old",
    CODE_AUAUSTRALIANREGISTREDBODYNUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUIHI",
    baseType: (),
    elements: {
    
        "AuIhiUse": {
            name: "AuIhiUse",
            dataType: AuIhiUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuIhi record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    AuIhiUse AuIhiUse?;
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuIhiUse {
    CODE_AUIHIUSE_SECONDARY = "secondary",
    CODE_AUIHIUSE_TEMP = "temp",
    CODE_AUIHIUSE_USUAL = "usual",
    CODE_AUIHIUSE_OLD = "old",
    CODE_AUIHIUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "ContactPurpose",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ContactPurpose record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "MedicationGenericName",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MedicationGenericName record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AddressIdentifier",
    baseType: (),
    elements: {
    
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AddressIdentifier record {|
    *r4:IdentifierExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Identifier valueIdentifier;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AustralianIndigenousStatus",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "NHDD based indigenous status code.",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IndigenousStatus record {|
    *r4:CodingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AUEmployeeNumber",
    baseType: (),
    elements: {
    
        "reference": {
            name: "reference",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
            path: "Identifier.assigner.reference"
        },    
        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
            path: "Identifier.assigner.identifier"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "display": {
            name: "display",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Plain text narrative that identifies the resource in addition to the resource reference.",
            path: "Identifier.assigner.display"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "AuEmployeenumberUse": {
            name: "AuEmployeenumberUse",
            dataType: AuEmployeenumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "'type": {
            name: "'type",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent. The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. 'Patient' is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
            path: "Identifier.assigner.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuEmployeenumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string reference?;
    r4:Identifier identifier?;
    r4:Period period?;
    r4:uri system;
    string display;
    r4:Reference assigner;
    AuEmployeenumberUse AuEmployeenumberUse?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuEmployeenumberUse {
    CODE_AUEMPLOYEENUMBERUSE_SECONDARY = "secondary",
    CODE_AUEMPLOYEENUMBERUSE_TEMP = "temp",
    CODE_AUEMPLOYEENUMBERUSE_USUAL = "usual",
    CODE_AUEMPLOYEENUMBERUSE_OLD = "old",
    CODE_AUEMPLOYEENUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "Ethnicity",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type Ethnicity record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AUDeliveryPointIdentifier",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        },    
        "AuDeliverypointidentifierUse": {
            name: "AuDeliverypointidentifierUse",
            dataType: AuDeliverypointidentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuDeliverypointidentifier record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
    AuDeliverypointidentifierUse AuDeliverypointidentifierUse?;
|};

public enum AuDeliverypointidentifierUse {
    CODE_AUDELIVERYPOINTIDENTIFIERUSE_SECONDARY = "secondary",
    CODE_AUDELIVERYPOINTIDENTIFIERUSE_TEMP = "temp",
    CODE_AUDELIVERYPOINTIDENTIFIERUSE_USUAL = "usual",
    CODE_AUDELIVERYPOINTIDENTIFIERUSE_OLD = "old",
    CODE_AUDELIVERYPOINTIDENTIFIERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUGNAFIdentifier",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        },    
        "AuGnafidentifierUse": {
            name: "AuGnafidentifierUse",
            dataType: AuGnafidentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuGnafidentifier record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
    AuGnafidentifierUse AuGnafidentifierUse?;
|};

public enum AuGnafidentifierUse {
    CODE_AUGNAFIDENTIFIERUSE_SECONDARY = "secondary",
    CODE_AUGNAFIDENTIFIERUSE_TEMP = "temp",
    CODE_AUGNAFIDENTIFIERUSE_USUAL = "usual",
    CODE_AUGNAFIDENTIFIERUSE_OLD = "old",
    CODE_AUGNAFIDENTIFIERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AULocalDispenseIdentifier",
    baseType: (),
    elements: {
    
        "reference": {
            name: "reference",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
            path: "Identifier.assigner.reference"
        },    
        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
            path: "Identifier.assigner.identifier"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "AuLocaldispenseidentifierUse": {
            name: "AuLocaldispenseidentifierUse",
            dataType: AuLocaldispenseidentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "display": {
            name: "display",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Plain text narrative that identifies the resource in addition to the resource reference.",
            path: "Identifier.assigner.display"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent. The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. 'Patient' is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
            path: "Identifier.assigner.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuLocaldispenseidentifier record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string reference?;
    r4:Identifier identifier?;
    r4:Period period?;
    r4:uri system;
    AuLocaldispenseidentifierUse AuLocaldispenseidentifierUse?;
    string display;
    r4:Reference assigner;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuLocaldispenseidentifierUse {
    CODE_AULOCALDISPENSEIDENTIFIERUSE_SECONDARY = "secondary",
    CODE_AULOCALDISPENSEIDENTIFIERUSE_TEMP = "temp",
    CODE_AULOCALDISPENSEIDENTIFIERUSE_USUAL = "usual",
    CODE_AULOCALDISPENSEIDENTIFIERUSE_OLD = "old",
    CODE_AULOCALDISPENSEIDENTIFIERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "HL7V2ReceivingApplication",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuReceivingapplication record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString?;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "InformationRecipient",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type InformationRecipient record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AssociatedHealthcareService",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AssociatedHealthcareservice record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AUCwlthSeniorsHealthCardNumber",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "AuCwlthseniorshealthcardnumberUse": {
            name: "AuCwlthseniorshealthcardnumberUse",
            dataType: AuCwlthseniorshealthcardnumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuCwlthseniorshealthcardnumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    AuCwlthseniorshealthcardnumberUse AuCwlthseniorshealthcardnumberUse?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuCwlthseniorshealthcardnumberUse {
    CODE_AUCWLTHSENIORSHEALTHCARDNUMBERUSE_SECONDARY = "secondary",
    CODE_AUCWLTHSENIORSHEALTHCARDNUMBERUSE_TEMP = "temp",
    CODE_AUCWLTHSENIORSHEALTHCARDNUMBERUSE_USUAL = "usual",
    CODE_AUCWLTHSENIORSHEALTHCARDNUMBERUSE_OLD = "old",
    CODE_AUCWLTHSENIORSHEALTHCARDNUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AULocalReportIdentifier",
    baseType: (),
    elements: {
    
        "reference": {
            name: "reference",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
            path: "Identifier.assigner.reference"
        },    
        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
            path: "Identifier.assigner.identifier"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "AuLocalreportidentifierUse": {
            name: "AuLocalreportidentifierUse",
            dataType: AuLocalreportidentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "display": {
            name: "display",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Plain text narrative that identifies the resource in addition to the resource reference.",
            path: "Identifier.assigner.display"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent. The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. 'Patient' is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
            path: "Identifier.assigner.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuLocalreportidentifier record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string reference?;
    r4:Identifier identifier?;
    r4:Period period?;
    r4:uri system;
    AuLocalreportidentifierUse AuLocalreportidentifierUse?;
    string display;
    r4:Reference assigner;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuLocalreportidentifierUse {
    CODE_AULOCALREPORTIDENTIFIERUSE_SECONDARY = "secondary",
    CODE_AULOCALREPORTIDENTIFIERUSE_TEMP = "temp",
    CODE_AULOCALREPORTIDENTIFIERUSE_USUAL = "usual",
    CODE_AULOCALREPORTIDENTIFIERUSE_OLD = "old",
    CODE_AULOCALREPORTIDENTIFIERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUAustralianBusinessNumber",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "AuAustralianbusinessnumberUse": {
            name: "AuAustralianbusinessnumberUse",
            dataType: AuAustralianbusinessnumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuAustralianbusinessnumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    AuAustralianbusinessnumberUse AuAustralianbusinessnumberUse?;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuAustralianbusinessnumberUse {
    CODE_AUAUSTRALIANBUSINESSNUMBERUSE_SECONDARY = "secondary",
    CODE_AUAUSTRALIANBUSINESSNUMBERUSE_TEMP = "temp",
    CODE_AUAUSTRALIANBUSINESSNUMBERUSE_USUAL = "usual",
    CODE_AUAUSTRALIANBUSINESSNUMBERUSE_OLD = "old",
    CODE_AUAUSTRALIANBUSINESSNUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AULocalOrderIdentifier",
    baseType: (),
    elements: {
    
        "reference": {
            name: "reference",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
            path: "Identifier.assigner.reference"
        },    
        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
            path: "Identifier.assigner.identifier"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "AuLocalorderidentifierUse": {
            name: "AuLocalorderidentifierUse",
            dataType: AuLocalorderidentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "display": {
            name: "display",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Plain text narrative that identifies the resource in addition to the resource reference.",
            path: "Identifier.assigner.display"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent. The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. 'Patient' is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
            path: "Identifier.assigner.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuLocalorderidentifier record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string reference?;
    r4:Identifier identifier?;
    r4:Period period?;
    AuLocalorderidentifierUse AuLocalorderidentifierUse?;
    r4:uri system;
    string display;
    r4:Reference assigner;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuLocalorderidentifierUse {
    CODE_AULOCALORDERIDENTIFIERUSE_SECONDARY = "secondary",
    CODE_AULOCALORDERIDENTIFIERUSE_TEMP = "temp",
    CODE_AULOCALORDERIDENTIFIERUSE_USUAL = "usual",
    CODE_AULOCALORDERIDENTIFIERUSE_OLD = "old",
    CODE_AULOCALORDERIDENTIFIERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "IHIVerifiedDate",
    baseType: (),
    elements: {
    
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "The date that the IHI was verified with HI Services.",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IhiVerifiedDate record {|
    *r4:DateTimeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:dateTime valueDateTime;
    string url;
|};


@r4:DataTypeDefinition {
    name: "DispenseNumber",
    baseType: (),
    elements: {
    
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DispenseNumber record {|
    *r4:IntegerExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:integer valueInteger;
    string url;
|};


@r4:DataTypeDefinition {
    name: "EncounterDescription",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type EncounterDescription record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AUPharmacyApprovalNumber",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "AuPharmacyapprovalnumberUse": {
            name: "AuPharmacyapprovalnumberUse",
            dataType: AuPharmacyapprovalnumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuPharmacyapprovalnumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    AuPharmacyapprovalnumberUse AuPharmacyapprovalnumberUse?;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuPharmacyapprovalnumberUse {
    CODE_AUPHARMACYAPPROVALNUMBERUSE_SECONDARY = "secondary",
    CODE_AUPHARMACYAPPROVALNUMBERUSE_TEMP = "temp",
    CODE_AUPHARMACYAPPROVALNUMBERUSE_USUAL = "usual",
    CODE_AUPHARMACYAPPROVALNUMBERUSE_OLD = "old",
    CODE_AUPHARMACYAPPROVALNUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUMedicareCardNumber",
    baseType: (),
    elements: {
    
        "AuMedicarecardnumberUse": {
            name: "AuMedicarecardnumberUse",
            dataType: AuMedicarecardnumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "end": {
            name: "end",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "The expiry date for the Medicare card. While this is typically only month and year, the day date part may be included when the card is a temporary Medicare card.",
            path: "Identifier.period.end"
        },    
        "'start": {
            name: "'start",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "The start of the period. The boundary is inclusive.",
            path: "Identifier.period.start"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuMedicarecardnumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    AuMedicarecardnumberUse AuMedicarecardnumberUse?;
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    r4:dateTime end?;
    r4:dateTime 'start?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuMedicarecardnumberUse {
    CODE_AUMEDICARECARDNUMBERUSE_SECONDARY = "secondary",
    CODE_AUMEDICARECARDNUMBERUSE_TEMP = "temp",
    CODE_AUMEDICARECARDNUMBERUSE_USUAL = "usual",
    CODE_AUMEDICARECARDNUMBERUSE_OLD = "old",
    CODE_AUMEDICARECARDNUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "EncryptionCertificatePEMx509",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Base64 encoded string containing PEM (RFC 7468) formatted X509 certificate.",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type EncryptionCertificatePemX record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AUPAIOIdentifier",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "AuPaioidentifierUse": {
            name: "AuPaioidentifierUse",
            dataType: AuPaioidentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuPaioidentifier record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    AuPaioidentifierUse AuPaioidentifierUse?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuPaioidentifierUse {
    CODE_AUPAIOIDENTIFIERUSE_SECONDARY = "secondary",
    CODE_AUPAIOIDENTIFIERUSE_TEMP = "temp",
    CODE_AUPAIOIDENTIFIERUSE_USUAL = "usual",
    CODE_AUPAIOIDENTIFIERUSE_OLD = "old",
    CODE_AUPAIOIDENTIFIERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUMedicalRecordNumber",
    baseType: (),
    elements: {
    
        "reference": {
            name: "reference",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
            path: "Identifier.assigner.reference"
        },    
        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
            path: "Identifier.assigner.identifier"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "AuMedicalrecordnumberUse": {
            name: "AuMedicalrecordnumberUse",
            dataType: AuMedicalrecordnumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "display": {
            name: "display",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Plain text narrative that identifies the resource in addition to the resource reference.",
            path: "Identifier.assigner.display"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent. The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. 'Patient' is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
            path: "Identifier.assigner.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuMedicalrecordnumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string reference?;
    r4:Identifier identifier?;
    r4:Period period?;
    r4:uri system;
    AuMedicalrecordnumberUse AuMedicalrecordnumberUse?;
    string display;
    r4:Reference assigner;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuMedicalrecordnumberUse {
    CODE_AUMEDICALRECORDNUMBERUSE_SECONDARY = "secondary",
    CODE_AUMEDICALRECORDNUMBERUSE_TEMP = "temp",
    CODE_AUMEDICALRECORDNUMBERUSE_USUAL = "usual",
    CODE_AUMEDICALRECORDNUMBERUSE_OLD = "old",
    CODE_AUMEDICALRECORDNUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "IHIStatus",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "IHI number status associated with an IHI identifier.",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IhiStatus record {|
    *r4:CodingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AUPensionerConcessionCardNumber",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "AuPensionerconcessioncardnumberUse": {
            name: "AuPensionerconcessioncardnumberUse",
            dataType: AuPensionerconcessioncardnumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuPensionerconcessioncardnumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    AuPensionerconcessioncardnumberUse AuPensionerconcessioncardnumberUse?;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuPensionerconcessioncardnumberUse {
    CODE_AUPENSIONERCONCESSIONCARDNUMBERUSE_SECONDARY = "secondary",
    CODE_AUPENSIONERCONCESSIONCARDNUMBERUSE_TEMP = "temp",
    CODE_AUPENSIONERCONCESSIONCARDNUMBERUSE_USUAL = "usual",
    CODE_AUPENSIONERCONCESSIONCARDNUMBERUSE_OLD = "old",
    CODE_AUPENSIONERCONCESSIONCARDNUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "VaccineSerialNumber",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type VaccineSerialNumber record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AUInsuranceMemberNumber",
    baseType: (),
    elements: {
    
        "reference": {
            name: "reference",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
            path: "Identifier.assigner.reference"
        },    
        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
            path: "Identifier.assigner.identifier"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "AuInsurancemembernumberUse": {
            name: "AuInsurancemembernumberUse",
            dataType: AuInsurancemembernumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "display": {
            name: "display",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Plain text narrative that identifies the resource in addition to the resource reference.",
            path: "Identifier.assigner.display"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent. The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. 'Patient' is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
            path: "Identifier.assigner.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuInsurancemembernumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string reference?;
    r4:Identifier identifier?;
    r4:Period period?;
    r4:uri system;
    AuInsurancemembernumberUse AuInsurancemembernumberUse?;
    string display;
    r4:Reference assigner;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuInsurancemembernumberUse {
    CODE_AUINSURANCEMEMBERNUMBERUSE_SECONDARY = "secondary",
    CODE_AUINSURANCEMEMBERNUMBERUSE_TEMP = "temp",
    CODE_AUINSURANCEMEMBERNUMBERUSE_USUAL = "usual",
    CODE_AUINSURANCEMEMBERNUMBERUSE_OLD = "old",
    CODE_AUINSURANCEMEMBERNUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUCareAgencyEmployeeIdentifier",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "AuCareagencyemployeeidentifierUse": {
            name: "AuCareagencyemployeeidentifierUse",
            dataType: AuCareagencyemployeeidentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuCareagencyemployeeidentifier record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    AuCareagencyemployeeidentifierUse AuCareagencyemployeeidentifierUse?;
    r4:uri system;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuCareagencyemployeeidentifierUse {
    CODE_AUCAREAGENCYEMPLOYEEIDENTIFIERUSE_SECONDARY = "secondary",
    CODE_AUCAREAGENCYEMPLOYEEIDENTIFIERUSE_TEMP = "temp",
    CODE_AUCAREAGENCYEMPLOYEEIDENTIFIERUSE_USUAL = "usual",
    CODE_AUCAREAGENCYEMPLOYEEIDENTIFIERUSE_OLD = "old",
    CODE_AUCAREAGENCYEMPLOYEEIDENTIFIERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUMedicareProviderNumber",
    baseType: (),
    elements: {
    
        "AuMedicareprovidernumberUse": {
            name: "AuMedicareprovidernumberUse",
            dataType: AuMedicareprovidernumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuMedicareprovidernumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    AuMedicareprovidernumberUse AuMedicareprovidernumberUse?;
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuMedicareprovidernumberUse {
    CODE_AUMEDICAREPROVIDERNUMBERUSE_SECONDARY = "secondary",
    CODE_AUMEDICAREPROVIDERNUMBERUSE_TEMP = "temp",
    CODE_AUMEDICAREPROVIDERNUMBERUSE_USUAL = "usual",
    CODE_AUMEDICAREPROVIDERNUMBERUSE_OLD = "old",
    CODE_AUMEDICAREPROVIDERNUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "IHIRecordStatus",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IhiRecordStatus record {|
    *r4:CodingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    string url;
|};


@r4:DataTypeDefinition {
    name: "MedicationLongTerm",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MedicationLongTerm record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AustralianTimeZone",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuTimezone record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "HL7V2ReceivingFacility",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuReceivingfacility record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString?;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "HL7V2AssigningAuthority",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuAssigningauthority record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString?;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "NoFixedAddress",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type NoFixedAddress record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AUDVANumber",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "AuDvanumberUse": {
            name: "AuDvanumberUse",
            dataType: AuDvanumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Entitlement type associated with a DVA issued Veteran Card.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuDvanumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    AuDvanumberUse AuDvanumberUse?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuDvanumberUse {
    CODE_AUDVANUMBERUSE_SECONDARY = "secondary",
    CODE_AUDVANUMBERUSE_TEMP = "temp",
    CODE_AUDVANUMBERUSE_USUAL = "usual",
    CODE_AUDVANUMBERUSE_OLD = "old",
    CODE_AUDVANUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AULocationSpecificPracticeNumber",
    baseType: (),
    elements: {
    
        "AuLocationspecificpracticenumberUse": {
            name: "AuLocationspecificpracticenumberUse",
            dataType: AuLocationspecificpracticenumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuLocationspecificpracticenumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    AuLocationspecificpracticenumberUse AuLocationspecificpracticenumberUse?;
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuLocationspecificpracticenumberUse {
    CODE_AULOCATIONSPECIFICPRACTICENUMBERUSE_SECONDARY = "secondary",
    CODE_AULOCATIONSPECIFICPRACTICENUMBERUSE_TEMP = "temp",
    CODE_AULOCATIONSPECIFICPRACTICENUMBERUSE_USUAL = "usual",
    CODE_AULOCATIONSPECIFICPRACTICENUMBERUSE_OLD = "old",
    CODE_AULOCATIONSPECIFICPRACTICENUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUNationalProviderIdentifierAtOrganisation",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "AuNationalprovideridentifieratorganisationUse": {
            name: "AuNationalprovideridentifieratorganisationUse",
            dataType: AuNationalprovideridentifieratorganisationUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuNationalprovideridentifieratorganisation record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    AuNationalprovideridentifieratorganisationUse AuNationalprovideridentifieratorganisationUse?;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuNationalprovideridentifieratorganisationUse {
    CODE_AUNATIONALPROVIDERIDENTIFIERATORGANISATIONUSE_SECONDARY = "secondary",
    CODE_AUNATIONALPROVIDERIDENTIFIERATORGANISATIONUSE_TEMP = "temp",
    CODE_AUNATIONALPROVIDERIDENTIFIERATORGANISATIONUSE_USUAL = "usual",
    CODE_AUNATIONALPROVIDERIDENTIFIERATORGANISATIONUSE_OLD = "old",
    CODE_AUNATIONALPROVIDERIDENTIFIERATORGANISATIONUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "GroundsForConcurrentSupplyOfMedication",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type SubsidisedConcurrentSupply record {|
    *r4:CodingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    string url;
|};


@r4:DataTypeDefinition {
    name: "DateAccuracyIndicator",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Coding of the accuracy of a date.",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DateAccuracyIndicator record {|
    *r4:CodingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    string url;
|};


@r4:DataTypeDefinition {
    name: "MedicationStrength",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MedicationStrength record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AUPAIDIdentifier",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        },    
        "AuPaididentifierUse": {
            name: "AuPaididentifierUse",
            dataType: AuPaididentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuPaididentifier record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
    AuPaididentifierUse AuPaididentifierUse?;
|};

public enum AuPaididentifierUse {
    CODE_AUPAIDIDENTIFIERUSE_SECONDARY = "secondary",
    CODE_AUPAIDIDENTIFIERUSE_TEMP = "temp",
    CODE_AUPAIDIDENTIFIERUSE_USUAL = "usual",
    CODE_AUPAIDIDENTIFIERUSE_OLD = "old",
    CODE_AUPAIDIDENTIFIERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUNATAAccreditationNumber",
    baseType: (),
    elements: {
    
        "AuNataaccreditationnumberUse": {
            name: "AuNataaccreditationnumberUse",
            dataType: AuNataaccreditationnumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuNataaccreditationnumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    AuNataaccreditationnumberUse AuNataaccreditationnumberUse?;
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuNataaccreditationnumberUse {
    CODE_AUNATAACCREDITATIONNUMBERUSE_SECONDARY = "secondary",
    CODE_AUNATAACCREDITATIONNUMBERUSE_TEMP = "temp",
    CODE_AUNATAACCREDITATIONNUMBERUSE_USUAL = "usual",
    CODE_AUNATAACCREDITATIONNUMBERUSE_OLD = "old",
    CODE_AUNATAACCREDITATIONNUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUAhpraRegistrationNumber",
    baseType: (),
    elements: {
    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "AuAhpraregistrationnumberUse": {
            name: "AuAhpraregistrationnumberUse",
            dataType: AuAhpraregistrationnumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuAhpraregistrationnumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    AuAhpraregistrationnumberUse AuAhpraregistrationnumberUse?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuAhpraregistrationnumberUse {
    CODE_AUAHPRAREGISTRATIONNUMBERUSE_SECONDARY = "secondary",
    CODE_AUAHPRAREGISTRATIONNUMBERUSE_TEMP = "temp",
    CODE_AUAHPRAREGISTRATIONNUMBERUSE_USUAL = "usual",
    CODE_AUAHPRAREGISTRATIONNUMBERUSE_OLD = "old",
    CODE_AUAHPRAREGISTRATIONNUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AhpraProfessionDetails",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice cautions type value.",
            path: "Extension.extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice cautions description value.",
            path: "Extension.extension.extension.value[x]"
        },    
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice cautions last edited date value.",
            path: "Extension.extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AhpraprofessionDetails record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept?;
    string valueString?;
    r4:date valueDate?;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ResultCopiesTo",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ResultCopiesTo record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AustralianAddress",
    baseType: (),
    elements: {
    
        "country": {
            name: "country",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Fixed value if present otherwise assumed to be Australia in this context.",
            path: "Address.country"
        },    
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
            path: "Address.extension.value[x]"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period when address was/is in use.",
            path: "Address.period"
        },    
        "city": {
            name: "city",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The name of the city, town, suburb, village or other community or delivery center.",
            path: "Address.city"
        },    
        "AuAddressUse": {
            name: "AuAddressUse",
            dataType: AuAddressUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this address.",
            path: "Address.use"
        },    
        "line": {
            name: "line",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "This component contains the house number, apartment number, street name, street direction, P.O. Box number, delivery hints, and similar address information.",
            path: "Address.line"
        },    
        "district": {
            name: "district",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The name of the administrative area (county).",
            path: "Address.district"
        },    
        "postalCode": {
            name: "postalCode",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A postal code designating a region defined by the postal service.",
            path: "Address.postalCode"
        },    
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts.",
            path: "Address.text"
        },    
        "state": {
            name: "state",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes).",
            path: "Address.state"
        },    
        "AuAddressType": {
            name: "AuAddressType",
            dataType: AuAddressType,
            min: 0,
            max: 1,
            isArray: false,
            description: "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.",
            path: "Address.type"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Address.extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuAddress record {|
    *r4:Address;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string country?;
    r4:Identifier valueIdentifier;
    r4:Period period?;
    string city?;
    AuAddressUse AuAddressUse?;
    string[] line?;
    string district?;
    string postalCode?;
    string text?;
    string state?;
    AuAddressType AuAddressType?;
    string url;
|};

public enum AuAddressUse {
    CODE_AUADDRESSUSE_TEMP = "temp",
    CODE_AUADDRESSUSE_WORK = "work",
    CODE_AUADDRESSUSE_OLD = "old",
    CODE_AUADDRESSUSE_HOME = "home",
    CODE_AUADDRESSUSE_BILLING = "billing"
};

public enum AuAddressType {
    CODE_AUADDRESSTYPE_POSTAL = "postal",
    CODE_AUADDRESSTYPE_PHYSICAL = "physical",
    CODE_AUADDRESSTYPE_BOTH = "both"
};


@r4:DataTypeDefinition {
    name: "MedicationBrandName",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MedicationBrandName record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AULocalPrescriptionIdentifier",
    baseType: (),
    elements: {
    
        "reference": {
            name: "reference",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
            path: "Identifier.assigner.reference"
        },    
        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
            path: "Identifier.assigner.identifier"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "AuLocalprescriptionidentifierUse": {
            name: "AuLocalprescriptionidentifierUse",
            dataType: AuLocalprescriptionidentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "display": {
            name: "display",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Plain text narrative that identifies the resource in addition to the resource reference.",
            path: "Identifier.assigner.display"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent. The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. 'Patient' is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
            path: "Identifier.assigner.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuLocalprescriptionidentifier record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string reference?;
    r4:Identifier identifier?;
    r4:Period period?;
    AuLocalprescriptionidentifierUse AuLocalprescriptionidentifierUse?;
    r4:uri system;
    string display;
    r4:Reference assigner;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuLocalprescriptionidentifierUse {
    CODE_AULOCALPRESCRIPTIONIDENTIFIERUSE_SECONDARY = "secondary",
    CODE_AULOCALPRESCRIPTIONIDENTIFIERUSE_TEMP = "temp",
    CODE_AULOCALPRESCRIPTIONIDENTIFIERUSE_USUAL = "usual",
    CODE_AULOCALPRESCRIPTIONIDENTIFIERUSE_OLD = "old",
    CODE_AULOCALPRESCRIPTIONIDENTIFIERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUPBSPrescriberNumber",
    baseType: (),
    elements: {
    
        "AuPbsprescribernumberUse": {
            name: "AuPbsprescribernumberUse",
            dataType: AuPbsprescribernumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuPbsprescribernumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    AuPbsprescribernumberUse AuPbsprescribernumberUse?;
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuPbsprescribernumberUse {
    CODE_AUPBSPRESCRIBERNUMBERUSE_SECONDARY = "secondary",
    CODE_AUPBSPRESCRIBERNUMBERUSE_TEMP = "temp",
    CODE_AUPBSPRESCRIBERNUMBERUSE_USUAL = "usual",
    CODE_AUPBSPRESCRIBERNUMBERUSE_OLD = "old",
    CODE_AUPBSPRESCRIBERNUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "DateOfArrivalAustralia",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Coding of the accuracy of a date.",
            path: "Extension.value[x].extension.value[x]"
        },    
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "value": {
            name: "value",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The actual value",
            path: "Extension.value[x].value"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.value[x].extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DateOfArrival record {|
    *r4:CodingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    r4:date valueDate;
    r4:date value?;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ChangeDescription",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ChangeDescription record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ClosingTheGapRegistration",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ClosingTheGapRegistration record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AUAccessionNumber",
    baseType: (),
    elements: {
    
        "reference": {
            name: "reference",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
            path: "Identifier.assigner.reference"
        },    
        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
            path: "Identifier.assigner.identifier"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "display": {
            name: "display",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Plain text narrative that identifies the resource in addition to the resource reference.",
            path: "Identifier.assigner.display"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "AuAccessionnumberUse": {
            name: "AuAccessionnumberUse",
            dataType: AuAccessionnumberUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "'type": {
            name: "'type",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent. The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. 'Patient' is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
            path: "Identifier.assigner.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuAccessionnumber record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string reference?;
    r4:Identifier identifier?;
    r4:Period period?;
    r4:uri system;
    string display;
    r4:Reference assigner;
    AuAccessionnumberUse AuAccessionnumberUse?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuAccessionnumberUse {
    CODE_AUACCESSIONNUMBERUSE_SECONDARY = "secondary",
    CODE_AUACCESSIONNUMBERUSE_TEMP = "temp",
    CODE_AUACCESSIONNUMBERUSE_USUAL = "usual",
    CODE_AUACCESSIONNUMBERUSE_OLD = "old",
    CODE_AUACCESSIONNUMBERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "AUResidentialAgedCareServiceIdentifier",
    baseType: (),
    elements: {
    
        "AuResidentialagedcareserviceidentifierUse": {
            name: "AuResidentialagedcareserviceidentifierUse",
            dataType: AuResidentialagedcareserviceidentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "Identifier.use"
        },    
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "Identifier.period"
        },    
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "Identifier.system"
        },    
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "Identifier.assigner"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Identifier.type"
        },    
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "Identifier.value"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuResidentialagedcareserviceidentifier record {|
    *r4:Identifier;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    AuResidentialagedcareserviceidentifierUse AuResidentialagedcareserviceidentifierUse?;
    r4:Period period?;
    r4:uri system;
    r4:Reference assigner?;
    r4:CodeableConcept 'type;
    string value;
|};

public enum AuResidentialagedcareserviceidentifierUse {
    CODE_AURESIDENTIALAGEDCARESERVICEIDENTIFIERUSE_SECONDARY = "secondary",
    CODE_AURESIDENTIALAGEDCARESERVICEIDENTIFIERUSE_TEMP = "temp",
    CODE_AURESIDENTIALAGEDCARESERVICEIDENTIFIERUSE_USUAL = "usual",
    CODE_AURESIDENTIALAGEDCARESERVICEIDENTIFIERUSE_OLD = "old",
    CODE_AURESIDENTIALAGEDCARESERVICEIDENTIFIERUSE_OFFICIAL = "official"
};


@r4:DataTypeDefinition {
    name: "IdentifierRoutability",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueUnsignedInt": {
            name: "valueUnsignedInt",
            dataType: r4:unsignedInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IdentifierRoutability record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    r4:uri valueUri;
    r4:unsignedInt valueUnsignedInt;
    string url;
|};


