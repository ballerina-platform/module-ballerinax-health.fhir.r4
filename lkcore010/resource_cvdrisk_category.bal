// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r4;

public const string PROFILE_BASE_CVDRISKCATEGORY = "http://openhie.org/fhir/sri-lanka/StructureDefinition/cvd-risk-category";
public const RESOURCE_NAME_CVDRISKCATEGORY = "RiskAssessment";

# FHIR CVDRiskCategory resource record.
#
# + resourceType - The type of the resource describes
# + note - Additional comments about the risk assessment.
# + parent - A reference to a resource that this risk assessment is part of, such as a Procedure.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - The type of the risk assessment performed.
# + subject - The patient or group the risk assessment applies to.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + reasonReference - Resources supporting the reason the risk assessment was performed.
# + language - The base language in which the resource is written.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + reasonCode - The reason the risk assessment was performed.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + basedOn - A reference to the request that is fulfilled by this risk assessment.
# + identifier - Business identifier assigned to the risk assessment.
# + mitigation - A description of the steps that might be taken to reduce the identified risk(s).
# + performer - The provider or software application that performed the assessment.
# + method - The algorithm, process or mechanism used to evaluate the risk.
# + encounter - The encounter where the assessment was performed.
# + basis - Indicates the source data considered as part of the assessment (for example, FamilyHistory, Observations, Procedures, Conditions, etc.).
# + condition - For assessments or prognosis specific to a particular condition, indicates the condition being assessed.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + prediction - Describes the expected outcome for the subject.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + occurrenceDateTime - The date (and possibly time) the risk assessment was performed.
# + status - The status of the RiskAssessment, using the same statuses as an Observation.
@r4:ResourceDefinition {
    resourceType: "RiskAssessment",
    baseType: r4:DomainResource,
    profile: "http://openhie.org/fhir/sri-lanka/StructureDefinition/cvd-risk-category",
    elements: {
        "note" : {
            name: "note",
            dataType: r4:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskAssessment.note"
        },
        "parent" : {
            name: "parent",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskAssessment.parent"
        },
        "extension" : {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskAssessment.extension"
        },
        "code" : {
            name: "code",
            dataType: CVDRiskCategoryCode,
            min: 1,
            max: 1,
            isArray: false,
            path: "RiskAssessment.code"
        },
        "subject" : {
            name: "subject",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "RiskAssessment.subject"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskAssessment.modifierExtension"
        },
        "reasonReference" : {
            name: "reasonReference",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskAssessment.reasonReference"
        },
        "language" : {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskAssessment.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskAssessment.id"
        },
        "reasonCode" : {
            name: "reasonCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskAssessment.reasonCode"
        },
        "text" : {
            name: "text",
            dataType: r4:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskAssessment.text"
        },
        "basedOn" : {
            name: "basedOn",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskAssessment.basedOn"
        },
        "identifier" : {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskAssessment.identifier"
        },
        "mitigation" : {
            name: "mitigation",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskAssessment.mitigation"
        },
        "performer" : {
            name: "performer",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "RiskAssessment.performer"
        },
        "method" : {
            name: "method",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskAssessment.method"
        },
        "encounter" : {
            name: "encounter",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "RiskAssessment.encounter"
        },
        "basis" : {
            name: "basis",
            dataType: r4:Reference,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskAssessment.basis"
        },
        "condition" : {
            name: "condition",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskAssessment.condition"
        },
        "contained" : {
            name: "contained",
            dataType: r4:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskAssessment.contained"
        },
        "meta" : {
            name: "meta",
            dataType: r4:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskAssessment.meta"
        },
        "prediction" : {
            name: "prediction",
            dataType: CVDRiskCategoryPrediction,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskAssessment.prediction"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskAssessment.implicitRules"
        },
        "occurrenceDateTime" : {
            name: "occurrenceDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            path: "RiskAssessment.occurrence[x]"
        },
        "status" : {
            name: "status",
            dataType: CVDRiskCategoryStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "RiskAssessment.status",
            valueSet: "http://hl7.org/fhir/ValueSet/observation-status|4.0.1"
        }
    },
    serializers: {
        'xml: r4:fhirResourceXMLSerializer,
        'json: r4:fhirResourceJsonSerializer
    }
}
public type CVDRiskCategory record {|
    *r4:DomainResource;

    RESOURCE_NAME_CVDRISKCATEGORY resourceType = RESOURCE_NAME_CVDRISKCATEGORY;

    r4:Annotation[] note?;
    r4:Reference parent?;
    r4:Extension[] extension?;
    CVDRiskCategoryCode code;
    r4:Reference subject;
    r4:Extension[] modifierExtension?;
    r4:Reference[] reasonReference?;
    r4:code language?;
    string id?;
    r4:CodeableConcept[] reasonCode?;
    r4:Narrative text?;
    r4:Reference basedOn?;
    r4:Identifier[] identifier?;
    string mitigation?;
    r4:Reference performer;
    r4:CodeableConcept method?;
    r4:Reference encounter;
    @constraint:Array {
       minLength: 1
    }
    r4:Reference[] basis;
    r4:Reference condition?;
    r4:Resource[] contained?;
    r4:Meta meta?;
    @constraint:Array {
       minLength: 1
    }
    CVDRiskCategoryPrediction[] prediction;
    r4:uri implicitRules?;
    r4:dateTime occurrenceDateTime;
    CVDRiskCategoryStatus status;
    r4:Element ...;
|};

# FHIR CVDRiskCategoryCodeCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "CVDRiskCategoryCodeCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "RiskAssessment.code.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "RiskAssessment.code.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CVDRiskCategoryCodeCoding record {|
    *r4:Coding;

    r4:uri system = "http://snomed.info/sct";
    r4:code code = "441829007";
|};

# CVDRiskCategoryStatus enum
public enum CVDRiskCategoryStatus {
   CODE_STATUS_AMENDED = "amended",
   CODE_STATUS_FINAL = "final",
   CODE_STATUS_REGISTERED = "registered",
   CODE_STATUS_PRELIMINARY = "preliminary"
}

# FHIR CVDRiskCategoryCode datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "CVDRiskCategoryCode",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: CVDRiskCategoryCodeCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "RiskAssessment.code.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CVDRiskCategoryCode record {|
    *r4:CodeableConcept;

    @constraint:Array {
       minLength: 1
    }
    CVDRiskCategoryCodeCoding[] coding;
|};

# FHIR CVDRiskCategoryPrediction datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + qualitativeRisk - Indicates how likely the outcome is (in the specified timeframe), expressed as a qualitative value (e.g. low, medium, or high).
# + relativeRisk - Indicates the risk for this particular subject (with their specific characteristics) divided by the risk of the population in general. (Numbers greater than 1 = higher risk than the population, numbers less than 1 = lower risk.).
# + probabilityRange - Indicates how likely the outcome is (in the specified timeframe).
# + whenRange - Indicates the period of time or age range of the subject to which the specified probability applies.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + probabilityDecimal - Indicates how likely the outcome is (in the specified timeframe).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + rationale - Additional information explaining the basis for the prediction.
# + outcome - One of the potential outcomes for the patient (e.g. remission, death, a particular condition).
@r4:DataTypeDefinition {
    name: "CVDRiskCategoryPrediction",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RiskAssessment.prediction.extension"
        },
        "qualitativeRisk": {
            name: "qualitativeRisk",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Indicates how likely the outcome is (in the specified timeframe), expressed as a qualitative value (e.g. low, medium, or high).",
            path: "RiskAssessment.prediction.qualitativeRisk"
        },
        "relativeRisk": {
            name: "relativeRisk",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates the risk for this particular subject (with their specific characteristics) divided by the risk of the population in general. (Numbers greater than 1 = higher risk than the population, numbers less than 1 = lower risk.).",
            path: "RiskAssessment.prediction.relativeRisk"
        },
        "probabilityRange": {
            name: "probabilityRange",
            dataType: r4:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates how likely the outcome is (in the specified timeframe).",
            path: "RiskAssessment.prediction.probability[x]"
        },
        "whenRange": {
            name: "whenRange",
            dataType: r4:Range,
            min: 1,
            max: 1,
            isArray: false,
            description: "Indicates the period of time or age range of the subject to which the specified probability applies.",
            path: "RiskAssessment.prediction.when[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RiskAssessment.prediction.modifierExtension"
        },
        "probabilityDecimal": {
            name: "probabilityDecimal",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates how likely the outcome is (in the specified timeframe).",
            path: "RiskAssessment.prediction.probability[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RiskAssessment.prediction.id"
        },
        "rationale": {
            name: "rationale",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional information explaining the basis for the prediction.",
            path: "RiskAssessment.prediction.rationale"
        },
        "outcome": {
            name: "outcome",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "One of the potential outcomes for the patient (e.g. remission, death, a particular condition).",
            path: "RiskAssessment.prediction.outcome"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CVDRiskCategoryPrediction record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:CodeableConcept qualitativeRisk;
    decimal relativeRisk?;
    r4:Range probabilityRange?;
    r4:Range whenRange;
    r4:Extension[] modifierExtension?;
    decimal probabilityDecimal?;
    string id?;
    string rationale?;
    r4:CodeableConcept outcome;
|};

