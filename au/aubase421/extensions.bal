// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r4;

public type IdentifierRoutabilityExtensions (IdentifierRoutabilityRoutabilityFlag|IdentifierRoutabilityRoutabilityAsserter|IdentifierRoutabilityRoutabilityPreference);

public type DateOfArrivalExtensions (DateOfArrivalDateAccuracyIndicator);

public type EthnicityExtensions (Ethnicity);

public type AuReceivingapplicationExtensions (AuReceivingapplicationUniversalId|AuReceivingapplicationNamespaceId|AuReceivingapplicationUniversalIdType);

public type AhpraprofessionDetailsExtensions (AhpraprofessionDetailsAhpraReprimand|AhpraprofessionDetailsAhpraConditionType|AhpraprofessionDetailsAhpraCondition|AhpraprofessionDetailsAhpraUndertakingDetail|AhpraprofessionDetailsAhpraUndertakingEditDate|AhpraprofessionDetailsAhpraCaution|AhpraprofessionDetailsAhpraConditionDetail|AhpraprofessionDetailsAhpraUndertakingType|AhpraprofessionDetailsAhpraCautionDetail|AhpraprofessionDetailsAhpraReprimandDetail|AhpraprofessionDetailsAhpraReprimandEditDate|AhpraprofessionDetailsAhpraProfession|AhpraprofessionDetailsAhpraReprimandType|AhpraprofessionDetailsAhpraCautionEditDate|AhpraprofessionDetailsAhpraConditionEditDate|AhpraprofessionDetailsAhpraUndertaking|AhpraprofessionDetailsAhpraCautionType);

public type AhpraregistrationDetailsExtensions (AhpraregistrationDetailsAhpraEndorsementEditDate|AhpraregistrationDetailsAhpraDivision|AhpraregistrationDetailsAhpraRegistrationSubtype|AhpraregistrationDetailsAhpraNotation|AhpraregistrationDetailsAhpraNotationEditDate|AhpraregistrationDetailsAhpraFieldofSpecialtyPractice|AhpraregistrationDetailsAhpraRegistrationType|AhpraregistrationDetailsAhpraEndorsementDetail|AhpraregistrationDetailsAhpraNotationType|AhpraregistrationDetailsAhpraEndorsement|AhpraregistrationDetailsAhpraRegistrationRecordNumber|AhpraregistrationDetailsAhpraRegistrationStatus|AhpraregistrationDetailsAhpraNotationDetail|AhpraregistrationDetailsAhpraSpecialty|AhpraregistrationDetailsAhpraEndorsementSubtype|AhpraregistrationDetailsAhpraEndorsementType|AhpraregistrationDetailsAhpraProfession);

public type AuReceivingfacilityExtensions (AuReceivingfacilityNamespaceId|AuReceivingfacilityUniversalIdType|AuReceivingfacilityUniversalId);

public type AuAssigningauthorityExtensions (AuAssigningauthorityNamespaceId|AuAssigningauthorityUniversalIdType|AuAssigningauthorityUniversalId);

public type DateAccuracyIndicatorExtensions (DateOfArrivalDateAccuracyIndicator);

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraCaution",
    baseType: (),
    elements: {
        "ahpraCautionEditDate": {
            name: "ahpraCautionEditDate",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Practitioner testing and work practice cautions last edited date details.",
            path: "ahpraCaution.ahpraCautionEditDate"
        },

        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice cautions type value.",
            path: "ahpraCaution.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "ahpraCaution.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraCaution.extension"
        },

        "ahpraCautionDetail": {
            name: "ahpraCautionDetail",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Practitioner testing and work practice cautions description details.",
            path: "ahpraCaution.ahpraCautionDetail"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice cautions description value.",
            path: "ahpraCaution.value[x]"
        },

        "ahpraCautionType": {
            name: "ahpraCautionType",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Practitioner testing and work practice cautions type details.",
            path: "ahpraCaution.ahpraCautionType"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraCaution.id"
        },

        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice cautions last edited date value.",
            path: "ahpraCaution.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraCaution.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraCaution record {|
    *r4:Base64BinaryExtension;

    r4:Extension[] ahpraCautionEditDate?;
    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    r4:Extension[] ahpraCautionDetail?;
    string valueString?;
    r4:Extension[] ahpraCautionType?;
    string id?;
    r4:date valueDate?;
    "ahpraCautionEditDate" url = "ahpraCautionEditDate";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraCautionDetail",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraCautionDetail.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice cautions description value.",
            path: "ahpraCautionDetail.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraCautionDetail.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraCautionDetail.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraCautionDetail record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    string id?;
    "ahpraCautionDetail" url = "ahpraCautionDetail";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraCautionEditDate",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraCautionEditDate.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraCautionEditDate.id"
        },

        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice cautions last edited date value.",
            path: "ahpraCautionEditDate.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraCautionEditDate.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraCautionEditDate record {|
    *r4:DateExtension;

    r4:Extension[] extension?;
    string id?;
    r4:date valueDate?;
    "ahpraCautionEditDate" url = "ahpraCautionEditDate";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraCautionType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice cautions type value.",
            path: "ahpraCautionType.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraCautionType.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraCautionType.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraCautionType.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraCautionType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "ahpraCautionType" url = "ahpraCautionType";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraCondition",
    baseType: (),
    elements: {
        "ahpraConditionEditDate": {
            name: "ahpraConditionEditDate",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Practitioner testing and work practice condition last edited date details.",
            path: "ahpraCondition.ahpraConditionEditDate"
        },

        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice condition type value. e.g.Health, Practice, Registration, Other.",
            path: "ahpraCondition.value[x]"
        },

        "ahpraConditionDetail": {
            name: "ahpraConditionDetail",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Practitioner testing and work practice conditions description details.",
            path: "ahpraCondition.ahpraConditionDetail"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "ahpraCondition.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraCondition.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice conditions description value.",
            path: "ahpraCondition.value[x]"
        },

        "ahpraConditionType": {
            name: "ahpraConditionType",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Practitioner testing and work practice condition type details.",
            path: "ahpraCondition.ahpraConditionType"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraCondition.id"
        },

        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice condition last edited date value.",
            path: "ahpraCondition.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraCondition.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraCondition record {|
    *r4:Base64BinaryExtension;

    r4:Extension[] ahpraConditionEditDate?;
    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] ahpraConditionDetail?;
    r4:Extension[] extension?;
    string valueString?;
    r4:Extension[] ahpraConditionType?;
    string id?;
    r4:date valueDate?;
    "ahpraConditionEditDate" url = "ahpraConditionEditDate";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraConditionDetail",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraConditionDetail.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice conditions description value.",
            path: "ahpraConditionDetail.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraConditionDetail.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraConditionDetail.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraConditionDetail record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    string id?;
    "ahpraConditionDetail" url = "ahpraConditionDetail";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraConditionEditDate",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraConditionEditDate.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraConditionEditDate.id"
        },

        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice condition last edited date value.",
            path: "ahpraConditionEditDate.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraConditionEditDate.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraConditionEditDate record {|
    *r4:DateExtension;

    r4:Extension[] extension?;
    string id?;
    r4:date valueDate?;
    "ahpraConditionEditDate" url = "ahpraConditionEditDate";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraConditionType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice condition type value. e.g.Health, Practice, Registration, Other.",
            path: "ahpraConditionType.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraConditionType.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraConditionType.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraConditionType.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraConditionType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "ahpraConditionType" url = "ahpraConditionType";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraProfession",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra registered profession type coded value.",
            path: "ahpraProfession.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraProfession.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraProfession.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraProfession.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraProfession record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "ahpraProfession" url = "ahpraProfession";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraReprimand",
    baseType: (),
    elements: {
        "ahpraReprimandEditDate": {
            name: "ahpraReprimandEditDate",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Practitioner testing and work practice reprimands last edited date details.",
            path: "ahpraReprimand.ahpraReprimandEditDate"
        },

        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice reprimands type value.",
            path: "ahpraReprimand.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "ahpraReprimand.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraReprimand.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice reprimands description value.",
            path: "ahpraReprimand.value[x]"
        },

        "ahpraReprimandType": {
            name: "ahpraReprimandType",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Practitioner testing and work practice reprimands type details.",
            path: "ahpraReprimand.ahpraReprimandType"
        },

        "ahpraReprimandDetail": {
            name: "ahpraReprimandDetail",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Practitioner testing and work practice reprimands description details.",
            path: "ahpraReprimand.ahpraReprimandDetail"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraReprimand.id"
        },

        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice reprimands last edited date value.",
            path: "ahpraReprimand.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraReprimand.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraReprimand record {|
    *r4:Base64BinaryExtension;

    r4:Extension[] ahpraReprimandEditDate?;
    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string valueString?;
    r4:Extension[] ahpraReprimandType?;
    r4:Extension[] ahpraReprimandDetail?;
    string id?;
    r4:date valueDate?;
    "ahpraReprimandEditDate" url = "ahpraReprimandEditDate";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraReprimandDetail",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraReprimandDetail.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice reprimands description value.",
            path: "ahpraReprimandDetail.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraReprimandDetail.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraReprimandDetail.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraReprimandDetail record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    string id?;
    "ahpraReprimandDetail" url = "ahpraReprimandDetail";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraReprimandEditDate",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraReprimandEditDate.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraReprimandEditDate.id"
        },

        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice reprimands last edited date value.",
            path: "ahpraReprimandEditDate.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraReprimandEditDate.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraReprimandEditDate record {|
    *r4:DateExtension;

    r4:Extension[] extension?;
    string id?;
    r4:date valueDate?;
    "ahpraReprimandEditDate" url = "ahpraReprimandEditDate";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraReprimandType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and work practice reprimands type value.",
            path: "ahpraReprimandType.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraReprimandType.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraReprimandType.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraReprimandType.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraReprimandType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "ahpraReprimandType" url = "ahpraReprimandType";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraUndertaking",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and workplace practice undertakings type value.",
            path: "ahpraUndertaking.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "ahpraUndertaking.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraUndertaking.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and workplace practice undertakings description value.",
            path: "ahpraUndertaking.value[x]"
        },

        "ahpraUndertakingDetail": {
            name: "ahpraUndertakingDetail",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Practitioner testing and workplace practice undertakings description details.",
            path: "ahpraUndertaking.ahpraUndertakingDetail"
        },

        "ahpraUndertakingEditDate": {
            name: "ahpraUndertakingEditDate",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Practitioner testing and workplace practice undertakings last edited date details.",
            path: "ahpraUndertaking.ahpraUndertakingEditDate"
        },

        "ahpraUndertakingType": {
            name: "ahpraUndertakingType",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Practitioner testing and workplace practice undertakings type details.",
            path: "ahpraUndertaking.ahpraUndertakingType"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraUndertaking.id"
        },

        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and workplace practice undertakings last edited date value.",
            path: "ahpraUndertaking.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraUndertaking.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraUndertaking record {|
    *r4:Base64BinaryExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string valueString?;
    r4:Extension[] ahpraUndertakingDetail?;
    r4:Extension[] ahpraUndertakingEditDate?;
    r4:Extension[] ahpraUndertakingType?;
    string id?;
    r4:date valueDate?;
    "ahpraUndertakingEditDate" url = "ahpraUndertakingEditDate";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraUndertakingDetail",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraUndertakingDetail.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and workplace practice undertakings description value.",
            path: "ahpraUndertakingDetail.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraUndertakingDetail.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraUndertakingDetail.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraUndertakingDetail record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    string id?;
    "ahpraUndertakingDetail" url = "ahpraUndertakingDetail";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraUndertakingEditDate",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraUndertakingEditDate.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraUndertakingEditDate.id"
        },

        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and workplace practice undertakings last edited date value.",
            path: "ahpraUndertakingEditDate.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraUndertakingEditDate.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraUndertakingEditDate record {|
    *r4:DateExtension;

    r4:Extension[] extension?;
    string id?;
    r4:date valueDate?;
    "ahpraUndertakingEditDate" url = "ahpraUndertakingEditDate";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetailsAhpraUndertakingType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Practitioner testing and workplace practice undertakings type value.",
            path: "ahpraUndertakingType.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraUndertakingType.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraUndertakingType.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraUndertakingType.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetailsAhpraUndertakingType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "ahpraUndertakingType" url = "ahpraUndertakingType";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraDivision",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra registration division value.",
            path: "ahpraDivision.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraDivision.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraDivision.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraDivision.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraDivision record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "ahpraDivision" url = "ahpraDivision";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraEndorsement",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra registered endorsement subtype value.",
            path: "ahpraEndorsement.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "ahpraEndorsement.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraEndorsement.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra registered endorsement descriptive details value.",
            path: "ahpraEndorsement.value[x]"
        },

        "ahpraEndorsementEditDate": {
            name: "ahpraEndorsementEditDate",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Ahpra registered endorsement last edited date details.",
            path: "ahpraEndorsement.ahpraEndorsementEditDate"
        },

        "ahpraEndorsementDetail": {
            name: "ahpraEndorsementDetail",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Ahpra registered endorsement descriptive details.",
            path: "ahpraEndorsement.ahpraEndorsementDetail"
        },

        "ahpraEndorsementType": {
            name: "ahpraEndorsementType",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Ahpra registered endorsement type details.",
            path: "ahpraEndorsement.ahpraEndorsementType"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraEndorsement.id"
        },

        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra registered endorsement last edited date value.",
            path: "ahpraEndorsement.value[x]"
        },

        "ahpraEndorsementSubtype": {
            name: "ahpraEndorsementSubtype",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Ahpra registered endorsement subtype details.",
            path: "ahpraEndorsement.ahpraEndorsementSubtype"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraEndorsement.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraEndorsement record {|
    *r4:Base64BinaryExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string valueString?;
    r4:Extension[] ahpraEndorsementEditDate?;
    r4:Extension[] ahpraEndorsementDetail?;
    r4:Extension[] ahpraEndorsementType?;
    string id?;
    r4:date valueDate?;
    r4:Extension[] ahpraEndorsementSubtype?;
    "ahpraEndorsementEditDate" url = "ahpraEndorsementEditDate";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraEndorsementDetail",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraEndorsementDetail.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra registered endorsement descriptive details value.",
            path: "ahpraEndorsementDetail.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraEndorsementDetail.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraEndorsementDetail.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraEndorsementDetail record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    string id?;
    "ahpraEndorsementDetail" url = "ahpraEndorsementDetail";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraEndorsementEditDate",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraEndorsementEditDate.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraEndorsementEditDate.id"
        },

        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra registered endorsement last edited date value.",
            path: "ahpraEndorsementEditDate.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraEndorsementEditDate.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraEndorsementEditDate record {|
    *r4:DateExtension;

    r4:Extension[] extension?;
    string id?;
    r4:date valueDate?;
    "ahpraEndorsementEditDate" url = "ahpraEndorsementEditDate";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraEndorsementSubtype",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra registered endorsement subtype value.",
            path: "ahpraEndorsementSubtype.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraEndorsementSubtype.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraEndorsementSubtype.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraEndorsementSubtype.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraEndorsementSubtype record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "ahpraEndorsementSubtype" url = "ahpraEndorsementSubtype";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraEndorsementType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra registered endorsement type value.",
            path: "ahpraEndorsementType.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraEndorsementType.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraEndorsementType.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraEndorsementType.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraEndorsementType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "ahpraEndorsementType" url = "ahpraEndorsementType";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraFieldofSpecialtyPractice",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra registered field of specialty practice value.",
            path: "ahpraFieldofSpecialtyPractice.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraFieldofSpecialtyPractice.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraFieldofSpecialtyPractice.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraFieldofSpecialtyPractice.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraFieldofSpecialtyPractice record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "ahpraFieldofSpecialtyPractice" url = "ahpraFieldofSpecialtyPractice";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraNotation",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra notation type value.",
            path: "ahpraNotation.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "ahpraNotation.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraNotation.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra notation descriptive details value.",
            path: "ahpraNotation.value[x]"
        },

        "ahpraNotationDetail": {
            name: "ahpraNotationDetail",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Ahpra notation descriptive details.",
            path: "ahpraNotation.ahpraNotationDetail"
        },

        "ahpraNotationType": {
            name: "ahpraNotationType",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Ahpra notation type details.",
            path: "ahpraNotation.ahpraNotationType"
        },

        "ahpraNotationEditDate": {
            name: "ahpraNotationEditDate",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Ahpra notation last edit date details.",
            path: "ahpraNotation.ahpraNotationEditDate"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraNotation.id"
        },

        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra notation last edit date value.",
            path: "ahpraNotation.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraNotation.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraNotation record {|
    *r4:Base64BinaryExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string valueString?;
    r4:Extension[] ahpraNotationDetail?;
    r4:Extension[] ahpraNotationType?;
    r4:Extension[] ahpraNotationEditDate?;
    string id?;
    r4:date valueDate?;
    "ahpraNotationEditDate" url = "ahpraNotationEditDate";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraNotationDetail",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraNotationDetail.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra notation descriptive details value.",
            path: "ahpraNotationDetail.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraNotationDetail.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraNotationDetail.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraNotationDetail record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    string id?;
    "ahpraNotationDetail" url = "ahpraNotationDetail";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraNotationEditDate",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraNotationEditDate.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraNotationEditDate.id"
        },

        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra notation last edit date value.",
            path: "ahpraNotationEditDate.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraNotationEditDate.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraNotationEditDate record {|
    *r4:DateExtension;

    r4:Extension[] extension?;
    string id?;
    r4:date valueDate?;
    "ahpraNotationEditDate" url = "ahpraNotationEditDate";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraNotationType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra notation type value.",
            path: "ahpraNotationType.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraNotationType.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraNotationType.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraNotationType.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraNotationType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "ahpraNotationType" url = "ahpraNotationType";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraProfession",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra registered profession type coded value.",
            path: "ahpraProfession.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraProfession.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraProfession.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraProfession.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraProfession record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "ahpraProfession" url = "ahpraProfession";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraRegistrationRecordNumber",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraRegistrationRecordNumber.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra registration number value.",
            path: "ahpraRegistrationRecordNumber.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraRegistrationRecordNumber.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraRegistrationRecordNumber.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraRegistrationRecordNumber record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    string id?;
    "ahpraRegistrationRecordNumber" url = "ahpraRegistrationRecordNumber";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraRegistrationStatus",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra registration status value.",
            path: "ahpraRegistrationStatus.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraRegistrationStatus.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraRegistrationStatus.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraRegistrationStatus.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraRegistrationStatus record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "ahpraRegistrationStatus" url = "ahpraRegistrationStatus";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraRegistrationSubtype",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra registration subtype value.",
            path: "ahpraRegistrationSubtype.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraRegistrationSubtype.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraRegistrationSubtype.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraRegistrationSubtype.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraRegistrationSubtype record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "ahpraRegistrationSubtype" url = "ahpraRegistrationSubtype";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraRegistrationType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra registration type value.",
            path: "ahpraRegistrationType.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraRegistrationType.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraRegistrationType.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraRegistrationType.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraRegistrationType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "ahpraRegistrationType" url = "ahpraRegistrationType";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetailsAhpraSpecialty",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Ahpra registration specialty value.",
            path: "ahpraSpecialty.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ahpraSpecialty.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ahpraSpecialty.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ahpraSpecialty.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetailsAhpraSpecialty record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "ahpraSpecialty" url = "ahpraSpecialty";
|};

@r4:DataTypeDefinition {
    name: "AuAssigningauthorityNamespaceId",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "namespace-id.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "namespace-id.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "namespace-id.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "namespace-id.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuAssigningauthorityNamespaceId record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    string id?;
    "namespace-id" url = "namespace-id";
|};

@r4:DataTypeDefinition {
    name: "AuAssigningauthorityUniversalId",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "universal-id.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "universal-id.value[x]"
        },

        "universal-id-type": {
            name: "universal_id_type",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Provides scheme to use to interpret the universal-id value .e.g. GUID, ISO etc. see HL7 V2 Table 0301 - Universal ID type.",
            path: "universal-id.universal-id-type"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "universal-id.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "universal-id.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuAssigningauthorityUniversalId record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    r4:Extension[] universal_id_type?;
    string id?;
    "universal-id" url = "universal-id";
|};

@r4:DataTypeDefinition {
    name: "AuAssigningauthorityUniversalIdType",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "universal-id-type.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "universal-id-type.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "universal-id-type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "universal-id-type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuAssigningauthorityUniversalIdType record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    string id?;
    "universal-id-type" url = "universal-id-type";
|};

@r4:DataTypeDefinition {
    name: "AuReceivingapplicationNamespaceId",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "namespace-id.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "namespace-id.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "namespace-id.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "namespace-id.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuReceivingapplicationNamespaceId record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    string id?;
    "namespace-id" url = "namespace-id";
|};

@r4:DataTypeDefinition {
    name: "AuReceivingapplicationUniversalId",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "universal-id.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "universal-id.value[x]"
        },

        "universal-id-type": {
            name: "universal_id_type",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Provides scheme to use to interpret the universal-id value .e.g. GUID, ISO etc. see HL7 V2 Table 0301 - Universal ID type.",
            path: "universal-id.universal-id-type"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "universal-id.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "universal-id.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuReceivingapplicationUniversalId record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    r4:Extension[] universal_id_type?;
    string id?;
    "universal-id" url = "universal-id";
|};

@r4:DataTypeDefinition {
    name: "AuReceivingapplicationUniversalIdType",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "universal-id-type.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "universal-id-type.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "universal-id-type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "universal-id-type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuReceivingapplicationUniversalIdType record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    string id?;
    "universal-id-type" url = "universal-id-type";
|};

@r4:DataTypeDefinition {
    name: "AuReceivingfacilityNamespaceId",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "namespace-id.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "namespace-id.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "namespace-id.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "namespace-id.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuReceivingfacilityNamespaceId record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    string id?;
    "namespace-id" url = "namespace-id";
|};

@r4:DataTypeDefinition {
    name: "AuReceivingfacilityUniversalId",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "universal-id.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "universal-id.value[x]"
        },

        "universal-id-type": {
            name: "universal_id_type",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Provides scheme to use to interpret the universal-id value .e.g. GUID, ISO etc. see HL7 V2 Table 0301 - Universal ID type.",
            path: "universal-id.universal-id-type"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "universal-id.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "universal-id.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuReceivingfacilityUniversalId record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    r4:Extension[] universal_id_type?;
    string id?;
    "universal-id" url = "universal-id";
|};

@r4:DataTypeDefinition {
    name: "AuReceivingfacilityUniversalIdType",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "universal-id-type.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "universal-id-type.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "universal-id-type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "universal-id-type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuReceivingfacilityUniversalIdType record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    string id?;
    "universal-id-type" url = "universal-id-type";
|};

@r4:DataTypeDefinition {
    name: "DateOfArrivalDateAccuracyIndicator",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Coding of the accuracy of a date.",
            path: "date-accuracy-indicator.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "date-accuracy-indicator.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "date-accuracy-indicator.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "date-accuracy-indicator.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DateOfArrivalDateAccuracyIndicator record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    r4:Extension[] extension?;
    string id?;
    "date-accuracy-indicator" url = "date-accuracy-indicator";
|};

@r4:DataTypeDefinition {
    name: "AddressIdentifier",
    baseType: (),
    elements: {
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AddressIdentifier record {|
    *r4:IdentifierExtension;

    r4:Identifier valueIdentifier;
    "http://hl7.org.au/fhir/StructureDefinition/address-identifier" url = "http://hl7.org.au/fhir/StructureDefinition/address-identifier";
|};

@r4:DataTypeDefinition {
    name: "AhpraprofessionDetails",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraprofessionDetails record {|
    *r4:ExtensionExtension;

    "http://hl7.org.au/fhir/StructureDefinition/ahpraprofession-details" url = "http://hl7.org.au/fhir/StructureDefinition/ahpraprofession-details";
|};

@r4:DataTypeDefinition {
    name: "AhpraregistrationDetails",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AhpraregistrationDetails record {|
    *r4:ExtensionExtension;

    "http://hl7.org.au/fhir/StructureDefinition/ahpraregistration-details" url = "http://hl7.org.au/fhir/StructureDefinition/ahpraregistration-details";
|};

@r4:DataTypeDefinition {
    name: "AssociatedHealthcareservice",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AssociatedHealthcareservice record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org.au/fhir/StructureDefinition/associated-healthcareservice" url = "http://hl7.org.au/fhir/StructureDefinition/associated-healthcareservice";
|};

@r4:DataTypeDefinition {
    name: "AuAssigningauthority",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuAssigningauthority record {|
    *r4:ExtensionExtension;

    "http://hl7.org.au/fhir/StructureDefinition/au-assigningauthority" url = "http://hl7.org.au/fhir/StructureDefinition/au-assigningauthority";
|};

@r4:DataTypeDefinition {
    name: "AuReceivingapplication",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuReceivingapplication record {|
    *r4:ExtensionExtension;

    "http://hl7.org.au/fhir/StructureDefinition/au-receivingapplication" url = "http://hl7.org.au/fhir/StructureDefinition/au-receivingapplication";
|};

@r4:DataTypeDefinition {
    name: "AuReceivingfacility",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuReceivingfacility record {|
    *r4:ExtensionExtension;

    "http://hl7.org.au/fhir/StructureDefinition/au-receivingfacility" url = "http://hl7.org.au/fhir/StructureDefinition/au-receivingfacility";
|};

@r4:DataTypeDefinition {
    name: "AuTimezone",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuTimezone record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org.au/fhir/StructureDefinition/au-timezone" url = "http://hl7.org.au/fhir/StructureDefinition/au-timezone";
|};

@r4:DataTypeDefinition {
    name: "AuthorRelatedPerson",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuthorRelatedPerson record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org.au/fhir/StructureDefinition/author-related-person" url = "http://hl7.org.au/fhir/StructureDefinition/author-related-person";
|};

@r4:DataTypeDefinition {
    name: "ChangeDescription",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ChangeDescription record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org.au/fhir/StructureDefinition/change-description" url = "http://hl7.org.au/fhir/StructureDefinition/change-description";
|};

@r4:DataTypeDefinition {
    name: "ClosingTheGapRegistration",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ClosingTheGapRegistration record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org.au/fhir/StructureDefinition/closing-the-gap-registration" url = "http://hl7.org.au/fhir/StructureDefinition/closing-the-gap-registration";
|};

@r4:DataTypeDefinition {
    name: "ContactPurpose",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ContactPurpose record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org.au/fhir/StructureDefinition/contact-purpose" url = "http://hl7.org.au/fhir/StructureDefinition/contact-purpose";
|};

@r4:DataTypeDefinition {
    name: "DateAccuracyIndicator",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Coding of the accuracy of a date.",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DateAccuracyIndicator record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org.au/fhir/StructureDefinition/date-accuracy-indicator" url = "http://hl7.org.au/fhir/StructureDefinition/date-accuracy-indicator";
|};

@r4:DataTypeDefinition {
    name: "DateOfArrival",
    baseType: (),
    elements: {
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DateOfArrival record {|
    *r4:DateExtension;

    r4:date valueDate;
    "http://hl7.org.au/fhir/StructureDefinition/date-of-arrival" url = "http://hl7.org.au/fhir/StructureDefinition/date-of-arrival";
|};

@r4:DataTypeDefinition {
    name: "DispenseNumber",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DispenseNumber record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org.au/fhir/StructureDefinition/dispense-number" url = "http://hl7.org.au/fhir/StructureDefinition/dispense-number";
|};

@r4:DataTypeDefinition {
    name: "EncounterDescription",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type EncounterDescription record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org.au/fhir/StructureDefinition/encounter-description" url = "http://hl7.org.au/fhir/StructureDefinition/encounter-description";
|};

@r4:DataTypeDefinition {
    name: "EncryptionCertificatePemX",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Base64 encoded string containing PEM (RFC 7468) formatted X509 certificate.",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type EncryptionCertificatePemX record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org.au/fhir/StructureDefinition/encryption-certificate-pem-x509" url = "http://hl7.org.au/fhir/StructureDefinition/encryption-certificate-pem-x509";
|};

@r4:DataTypeDefinition {
    name: "Ethnicity",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type Ethnicity record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org.au/fhir/StructureDefinition/ethnicity" url = "http://hl7.org.au/fhir/StructureDefinition/ethnicity";
|};

@r4:DataTypeDefinition {
    name: "IdentifierRoutability",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An Extension",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IdentifierRoutability record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org.au/fhir/StructureDefinition/identifier-routability" url = "http://hl7.org.au/fhir/StructureDefinition/identifier-routability";
|};

@r4:DataTypeDefinition {
    name: "IhiRecordStatus",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IhiRecordStatus record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org.au/fhir/StructureDefinition/ihi-record-status" url = "http://hl7.org.au/fhir/StructureDefinition/ihi-record-status";
|};

@r4:DataTypeDefinition {
    name: "IhiStatus",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "IHI number status associated with an IHI identifier.",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IhiStatus record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org.au/fhir/StructureDefinition/ihi-status" url = "http://hl7.org.au/fhir/StructureDefinition/ihi-status";
|};

@r4:DataTypeDefinition {
    name: "IhiVerifiedDate",
    baseType: (),
    elements: {
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "The date that the IHI was verified with HI Services.",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IhiVerifiedDate record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    "http://hl7.org.au/fhir/StructureDefinition/ihi-verified-date" url = "http://hl7.org.au/fhir/StructureDefinition/ihi-verified-date";
|};

@r4:DataTypeDefinition {
    name: "IndigenousStatus",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "NHDD based indigenous status code.",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndigenousStatus record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org.au/fhir/StructureDefinition/indigenous-status" url = "http://hl7.org.au/fhir/StructureDefinition/indigenous-status";
|};

@r4:DataTypeDefinition {
    name: "InformationRecipient",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type InformationRecipient record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org.au/fhir/StructureDefinition/information-recipient" url = "http://hl7.org.au/fhir/StructureDefinition/information-recipient";
|};

@r4:DataTypeDefinition {
    name: "MedicationBrandName",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationBrandName record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org.au/fhir/StructureDefinition/medication-brand-name" url = "http://hl7.org.au/fhir/StructureDefinition/medication-brand-name";
|};

@r4:DataTypeDefinition {
    name: "MedicationGenericName",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationGenericName record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org.au/fhir/StructureDefinition/medication-generic-name" url = "http://hl7.org.au/fhir/StructureDefinition/medication-generic-name";
|};

@r4:DataTypeDefinition {
    name: "MedicationLongTerm",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationLongTerm record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org.au/fhir/StructureDefinition/medication-long-term" url = "http://hl7.org.au/fhir/StructureDefinition/medication-long-term";
|};

@r4:DataTypeDefinition {
    name: "MedicationStrength",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationStrength record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org.au/fhir/StructureDefinition/medication-strength" url = "http://hl7.org.au/fhir/StructureDefinition/medication-strength";
|};

@r4:DataTypeDefinition {
    name: "MedicationType",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationType record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org.au/fhir/StructureDefinition/medication-type" url = "http://hl7.org.au/fhir/StructureDefinition/medication-type";
|};

@r4:DataTypeDefinition {
    name: "NoFixedAddress",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type NoFixedAddress record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org.au/fhir/StructureDefinition/no-fixed-address" url = "http://hl7.org.au/fhir/StructureDefinition/no-fixed-address";
|};

@r4:DataTypeDefinition {
    name: "ResultCopiesTo",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ResultCopiesTo record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org.au/fhir/StructureDefinition/result-copies-to" url = "http://hl7.org.au/fhir/StructureDefinition/result-copies-to";
|};

@r4:DataTypeDefinition {
    name: "SubsidisedConcurrentSupply",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type SubsidisedConcurrentSupply record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org.au/fhir/StructureDefinition/subsidised-concurrent-supply" url = "http://hl7.org.au/fhir/StructureDefinition/subsidised-concurrent-supply";
|};

@r4:DataTypeDefinition {
    name: "VaccineSerialNumber",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type VaccineSerialNumber record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org.au/fhir/StructureDefinition/vaccine-serial-number" url = "http://hl7.org.au/fhir/StructureDefinition/vaccine-serial-number";
|};

@r4:DataTypeDefinition {
    name: "VeteranStatus",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Veteran / Australian Defence Force (ADF) status code.",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type VeteranStatus record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org.au/fhir/StructureDefinition/veteran-status" url = "http://hl7.org.au/fhir/StructureDefinition/veteran-status";
|};

@r4:DataTypeDefinition {
    name: "IdentifierRoutabilityRoutabilityAsserter",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "routability-asserter.extension"
        },

        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "routability-asserter.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "routability-asserter.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "routability-asserter.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IdentifierRoutabilityRoutabilityAsserter record {|
    *r4:UriExtension;

    r4:Extension[] extension?;
    r4:uri valueUri;
    string id?;
    "routability-asserter" url = "routability-asserter";
|};

@r4:DataTypeDefinition {
    name: "IdentifierRoutabilityRoutabilityFlag",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "routability-flag.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "routability-flag.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "routability-flag.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "routability-flag.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IdentifierRoutabilityRoutabilityFlag record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    r4:Extension[] extension?;
    string id?;
    "routability-flag" url = "routability-flag";
|};

@r4:DataTypeDefinition {
    name: "IdentifierRoutabilityRoutabilityPreference",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "routability-preference.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "routability-preference.id"
        },

        "valueUnsignedInt": {
            name: "valueUnsignedInt",
            dataType: r4:unsignedInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R4/extensibility.html) for a list).",
            path: "routability-preference.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "routability-preference.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IdentifierRoutabilityRoutabilityPreference record {|
    *r4:UnsignedIntExtension;

    r4:Extension[] extension?;
    string id?;
    r4:unsignedInt valueUnsignedInt;
    "routability-preference" url = "routability-preference";
|};

