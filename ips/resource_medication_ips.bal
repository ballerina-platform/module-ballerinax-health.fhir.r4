// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//
// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r4;

public const string PROFILE_BASE_MEDICATIONIPS = "http://hl7.org/fhir/uv/ips/StructureDefinition/Medication-uv-ips";
public const RESOURCE_NAME_MEDICATIONIPS = "Medication";

# FHIR MedicationIPS resource record.
#
# + resourceType - The type of the resource describes
# + identifier - Business identifier for this medication.
# + amount - Specific amount of the drug in the packaged product. For example, when specifying a product that has the same strength (For example, Insulin glargine 100 unit per mL solution for injection), this attribute provides additional clarification of the package amount (For example, 3 mL, 10mL, etc.).
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - Medication that was administered or was to be administered. Several kinds of medication coding could be provided as: 1. The IDMP Pharmaceutical Product Identifier (PhPID), Level 1, [Substance(s)]. Example: Amoxicillin and Clavulanate Potassium; or any other equivalent coded concept; 2. The IDMP Pharmaceutical Product Identifier (PhPID), Level 2 [Substance(s) + Strength + reference strength]. Example: Amoxicillin 875 mg and Clavulanate Potassium 125 mg; or any other equivalent coded concept; 3. The IDMP Pharmaceutical Product Identifier (PhPID), Level 3 [Substance(s) + administrable dose form]. Example: Amoxicillin and Clavulanate Potassium, Oral Tablet; or any other equivalent coded concept; 4. The IDMP Pharmaceutical Product Identifier (PhPID), Level 4 [Substance(s) + strength + reference strength + administrable dose form]. Example: Amoxicillin 875 mg and clavulanate potassium 125 mg, oral tablet; or any other equivalent coded concept 5. The IDMP Medicinal Product Identifier (MPID) or any equivalent Medicinal Product Identifier. IDMP MPID uniquely identifies a Medicinal Product, reflecting (but not replacing) any other authorization numbers allocated by a regulator. MPID implies one (set of) PhPID. The MPID shall use a common segment pattern related to a Medicinal Product, which, when each segment is valued shall define a specific MPID concept. 6. The IDMP Packaged Medicinal Product Identifier (PCID) or any equivalent Packaged Medicinal Product Identifier. Uniquely identifies a Medicinal Product based on its packaging. This implies one MPID can be associated with more than one PCID, if the same Medicinal Product has more than one type of package. 7. Any other kind of code that that identifies, classifies or cluster the administered product (e.g. the medicinal product or the product class) The value sets used for the PhPID, MPID and PCID identifiers are provisional and include only few equivalent concepts used for exemplification purposes, they will be updated with real IDMP identifiers when they will become available.
# + ingredient - Identifies a particular constituent of interest in the product.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + batch - Information that only applies to packages (not products).
# + language - The base language in which the resource is written.
# + manufacturer - Describes the details of the manufacturer of the medication product. This is not intended to represent the distributor of a medication product.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + form - Describes the form of the item. Powder; tablets; capsule. Administrable Pharmaceutical Dose Form. This code represents the form of the medication (e.g. tablet, capsule, liquid) Since the EDQM Standards Terms, together with UCUM, is one of the IDMP terminologies actually available for usage, this code system has been selected as referecne terminology for representing Pharmaceutical Dose forms;Pakages and Route of Administration. It is known that also alternative jurisdictional and international terminologies are known to be used for this concept domain, as NCI or SNOMED CT.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + status - A code to indicate if the medication is in active use.
@r4:ResourceDefinition {
    resourceType: "Medication",
    baseType: r4:DomainResource,
    profile: "http://hl7.org/fhir/uv/ips/StructureDefinition/Medication-uv-ips",
    elements: {
        "identifier" : {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Medication.identifier"
        },
        "amount" : {
            name: "amount",
            dataType: r4:Ratio,
            min: 0,
            max: 1,
            isArray: false,
            path: "Medication.amount"
        },
        "extension" : {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Medication.extension"
        },
        "code" : {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            path: "Medication.code",
            valueSet: "http://hl7.org/fhir/uv/ips/ValueSet/medication-snomed-absent-unknown-uv-ips"
        },
        "ingredient" : {
            name: "ingredient",
            dataType: MedicationIPSIngredient,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Medication.ingredient"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Medication.modifierExtension"
        },
        "batch" : {
            name: "batch",
            dataType: MedicationIPSBatch,
            min: 0,
            max: 1,
            isArray: false,
            path: "Medication.batch"
        },
        "language" : {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Medication.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "manufacturer" : {
            name: "manufacturer",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Medication.manufacturer"
        },
        "contained" : {
            name: "contained",
            dataType: r4:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Medication.contained"
        },
        "form" : {
            name: "form",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Medication.form",
            valueSet: "http://hl7.org/fhir/uv/ips/ValueSet/medicine-doseform"
        },
        "meta" : {
            name: "meta",
            dataType: r4:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "Medication.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Medication.implicitRules"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Medication.id"
        },
        "text" : {
            name: "text",
            dataType: r4:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Medication.text"
        },
        "status" : {
            name: "status",
            dataType: MedicationIPSStatus,
            min: 0,
            max: 1,
            isArray: false,
            path: "Medication.status",
            valueSet: "http://hl7.org/fhir/ValueSet/medication-status|4.0.1"
        }
    },
    serializers: {
        'xml: r4:fhirResourceXMLSerializer,
        'json: r4:fhirResourceJsonSerializer
    }
}
public type MedicationIPS record {|
    *r4:DomainResource;

    RESOURCE_NAME_MEDICATIONIPS resourceType = RESOURCE_NAME_MEDICATIONIPS;

    r4:Identifier[] identifier?;
    r4:Ratio amount?;
    r4:Extension[] extension?;
    CodeableConceptUvIps code;
    MedicationIPSIngredient[] ingredient?;
    r4:Extension[] modifierExtension?;
    MedicationIPSBatch batch?;
    r4:code language?;
    r4:Reference manufacturer?;
    r4:Resource[] contained?;
    CodeableConceptUvIps form?;
    r4:Meta meta?;
    r4:uri implicitRules?;
    string id?;
    r4:Narrative text?;
    MedicationIPSStatus status?;
    r4:Element ...;
|};

# FHIR MedicationIPSBatch datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + lotNumber - The assigned lot number of a batch of the specified product.
# + expirationDate - When this specific batch of product will expire.
@r4:DataTypeDefinition {
    name: "MedicationIPSBatch",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Medication.batch.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Medication.batch.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Medication.batch.id"
        },
        "lotNumber": {
            name: "lotNumber",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The assigned lot number of a batch of the specified product.",
            path: "Medication.batch.lotNumber"
        },
        "expirationDate": {
            name: "expirationDate",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "When this specific batch of product will expire.",
            path: "Medication.batch.expirationDate"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MedicationIPSBatch record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    string lotNumber?;
    r4:dateTime expirationDate?;
|};

# MedicationIPSStatus enum
public enum MedicationIPSStatus {
   CODE_STATUS_INACTIVE = "inactive",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error"
}

# FHIR MedicationIPSIngredient datatype record.
#
# + itemReference - The actual ingredient - either a substance (simple ingredient) or another medication of a medication.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + strength - A relationship of two Quantity values - expressed as a numerator and a denominator.
# + itemCodeableConcept - The actual ingredient - either a substance (simple ingredient) or another medication of a medication.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + isActive - Indication of whether this ingredient affects the therapeutic action of the drug.
@r4:DataTypeDefinition {
    name: "MedicationIPSIngredient",
    baseType: (),
    elements: {
        "itemReference": {
            name: "itemReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The actual ingredient - either a substance (simple ingredient) or another medication of a medication.",
            path: "Medication.ingredient.item[x]"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Medication.ingredient.extension"
        },
        "strength": {
            name: "strength",
            dataType: r4:Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "A relationship of two Quantity values - expressed as a numerator and a denominator.",
            path: "Medication.ingredient.strength"
        },
        "itemCodeableConcept": {
            name: "itemCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The actual ingredient - either a substance (simple ingredient) or another medication of a medication.",
            path: "Medication.ingredient.item[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Medication.ingredient.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Medication.ingredient.id"
        },
        "isActive": {
            name: "isActive",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indication of whether this ingredient affects the therapeutic action of the drug.",
            path: "Medication.ingredient.isActive"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MedicationIPSIngredient record {|
    *r4:BackboneElement;

    r4:Reference itemReference?;
    r4:Extension[] extension?;
    r4:Ratio strength?;
    r4:CodeableConcept itemCodeableConcept?;
    r4:Extension[] modifierExtension?;
    string id?;
    boolean isActive?;
|};

