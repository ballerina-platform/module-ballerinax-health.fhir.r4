// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r4;

public const string PROFILE_BASE_USCOREPULSEOXIMETRYPROFILE = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-pulse-oximetry";
public const RESOURCE_NAME_USCOREPULSEOXIMETRYPROFILE = "Observation";

# FHIR USCorePulseOximetryProfile resource record.
#
# + resourceType - The type of the resource describes
# + valueBoolean - Vital Signs value are typically recorded using the Quantity data type.
# + dataAbsentReason - Provides a reason why the expected value in the element Observation.value[x] is missing.
# + note - Comments about the observation or the results.
# + partOf - A larger event of which this particular Observation is a component or step. For example, an observation as part of a procedure.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + valueTime - Vital Signs value are typically recorded using the Quantity data type.
# + code - Coded Responses from C-CDA Vital Sign Results.
# + subject - The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation.
# + valueRange - Vital Signs value are typically recorded using the Quantity data type.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + focus - The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record. The focus of an observation could also be an existing condition, an intervention, the subject's diet, another observation of the subject, or a body structure such as tumor or implanted device. An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus.
# + language - The base language in which the resource is written.
# + valueCodeableConcept - Vital Signs value are typically recorded using the Quantity data type.
# + valueRatio - Vital Signs value are typically recorded using the Quantity data type.
# + specimen - The specimen that was used when this observation was made.
# + derivedFrom - The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image.
# + valueDateTime - Vital Signs value are typically recorded using the Quantity data type.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + issued - The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified.
# + valueInteger - Vital Signs value are typically recorded using the Quantity data type.
# + basedOn - A plan, proposal or order that is fulfilled in whole or in part by this event. For example, a MedicationRequest may require a patient to have laboratory test performed before it is dispensed.
# + valueQuantity - Vital Signs value are typically recorded using the Quantity data type.
# + identifier - A unique identifier assigned to this observation.
# + performer - Who was responsible for asserting the observed value as 'true'.
# + effectivePeriod - Often just a dateTime for Vital Signs.
# + method - Indicates the mechanism used to perform the observation.
# + hasMember - Used when reporting vital signs panel components.
# + encounter - The healthcare event (e.g. a patient and healthcare provider interaction) during which this observation is made.
# + bodySite - Indicates the site on the subject's body where the observation was made (i.e. the target site).
# + component - Used when reporting flow rates or oxygen concentration.
# * component Slicings
# 1) USCorePulseOximetryProfileComponentFlowRate: Inhaled oxygen flow rate
#       - min = 0
#       - max = 1
#
# 2) USCorePulseOximetryProfileComponentConcentration: Inhaled oxygen concentration
#       - min = 0
#       - max = 1
#
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + referenceRange - Guidance on how to interpret the value by comparison to a normal or recommended range. Multiple reference ranges are interpreted as an 'OR'. In other words, to represent two distinct target populations, two `referenceRange` elements would be used.
# + valueString - Vital Signs value are typically recorded using the Quantity data type.
# + effectiveDateTime - Often just a dateTime for Vital Signs.
# + interpretation - A categorical assessment of an observation value. For example, high, low, normal.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + valueSampledData - Vital Signs value are typically recorded using the Quantity data type.
# + valuePeriod - Vital Signs value are typically recorded using the Quantity data type.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + category - A code that classifies the general type of observation being made.
# * category Slicings
# 1) USCorePulseOximetryProfileCategoryVSCat: Classification of type of observation
#       - min = 1
#       - max = 1
#
# + device - The device used to generate the observation data.
# + status - The status of the result value.
@r4:ResourceDefinition {
    resourceType: "Observation",
    baseType: r4:DomainResource,
    profile: "http://hl7.org/fhir/us/core/StructureDefinition/us-core-pulse-oximetry",
    elements: {
        "valueBoolean" : {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.value[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/ucum-vitals-common|4.0.1"
        },
        "dataAbsentReason" : {
            name: "dataAbsentReason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.dataAbsentReason",
            valueSet: "http://hl7.org/fhir/ValueSet/data-absent-reason"
        },
        "note" : {
            name: "note",
            dataType: r4:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.note"
        },
        "partOf" : {
            name: "partOf",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.partOf"
        },
        "extension" : {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.extension"
        },
        "valueTime" : {
            name: "valueTime",
            dataType: r4:time,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.value[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/ucum-vitals-common|4.0.1"
        },
        "code" : {
            name: "code",
            dataType: USCorePulseOximetryProfileCode,
            min: 1,
            max: 1,
            isArray: false,
            path: "Observation.code",
            valueSet: "http://hl7.org/fhir/us/core/ValueSet/us-core-vital-signs"
        },
        "subject" : {
            name: "subject",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "Observation.subject"
        },
        "valueRange" : {
            name: "valueRange",
            dataType: r4:Range,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.value[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/ucum-vitals-common|4.0.1"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.modifierExtension"
        },
        "focus" : {
            name: "focus",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.focus"
        },
        "language" : {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "valueCodeableConcept" : {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.value[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/ucum-vitals-common|4.0.1"
        },
        "valueRatio" : {
            name: "valueRatio",
            dataType: r4:Ratio,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.value[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/ucum-vitals-common|4.0.1"
        },
        "specimen" : {
            name: "specimen",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.specimen"
        },
        "derivedFrom" : {
            name: "derivedFrom",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.derivedFrom"
        },
        "valueDateTime" : {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.value[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/ucum-vitals-common|4.0.1"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.id"
        },
        "text" : {
            name: "text",
            dataType: r4:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.text"
        },
        "issued" : {
            name: "issued",
            dataType: r4:instant,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.issued"
        },
        "valueInteger" : {
            name: "valueInteger",
            dataType: r4:integer,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.value[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/ucum-vitals-common|4.0.1"
        },
        "basedOn" : {
            name: "basedOn",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.basedOn"
        },
        "valueQuantity" : {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.value[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/ucum-vitals-common|4.0.1"
        },
        "identifier" : {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.identifier"
        },
        "performer" : {
            name: "performer",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.performer"
        },
        "effectivePeriod" : {
            name: "effectivePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            path: "Observation.effective[x]"
        },
        "method" : {
            name: "method",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.method",
            valueSet: "http://hl7.org/fhir/ValueSet/observation-methods"
        },
        "hasMember" : {
            name: "hasMember",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.hasMember"
        },
        "encounter" : {
            name: "encounter",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.encounter"
        },
        "bodySite" : {
            name: "bodySite",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.bodySite",
            valueSet: "http://hl7.org/fhir/ValueSet/body-site"
        },
        "component" : {
            name: "component",
            dataType: USCorePulseOximetryProfileComponent,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.component"
        },
        "contained" : {
            name: "contained",
            dataType: r4:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.contained"
        },
        "referenceRange" : {
            name: "referenceRange",
            dataType: USCorePulseOximetryProfileReferenceRange,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.referenceRange"
        },
        "valueString" : {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.value[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/ucum-vitals-common|4.0.1"
        },
        "effectiveDateTime" : {
            name: "effectiveDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            path: "Observation.effective[x]"
        },
        "interpretation" : {
            name: "interpretation",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.interpretation",
            valueSet: "http://hl7.org/fhir/ValueSet/observation-interpretation"
        },
        "meta" : {
            name: "meta",
            dataType: r4:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.meta"
        },
        "valueSampledData" : {
            name: "valueSampledData",
            dataType: r4:SampledData,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.value[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/ucum-vitals-common|4.0.1"
        },
        "valuePeriod" : {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.value[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/ucum-vitals-common|4.0.1"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.implicitRules"
        },
        "category" : {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Observation.category",
            valueSet: "http://hl7.org/fhir/ValueSet/observation-category"
        },
        "device" : {
            name: "device",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Observation.device"
        },
        "status" : {
            name: "status",
            dataType: USCorePulseOximetryProfileStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "Observation.status",
            valueSet: "http://hl7.org/fhir/ValueSet/observation-status|4.0.1"
        }
    },
    serializers: {
        'xml: r4:fhirResourceXMLSerializer,
        'json: r4:fhirResourceJsonSerializer
    }
}
public type USCorePulseOximetryProfile record {|
    *r4:DomainResource;

    RESOURCE_NAME_USCOREPULSEOXIMETRYPROFILE resourceType = RESOURCE_NAME_USCOREPULSEOXIMETRYPROFILE;

    BaseUSCorePulseOximetryProfileMeta meta = {
        profile : [PROFILE_BASE_USCOREPULSEOXIMETRYPROFILE]
    };
    boolean valueBoolean?;
    r4:CodeableConcept dataAbsentReason?;
    r4:Annotation[] note?;
    r4:Reference[] partOf?;
    r4:Extension[] extension?;
    r4:time valueTime?;
    USCorePulseOximetryProfileCode code;
    r4:Reference subject;
    r4:Range valueRange?;
    r4:Extension[] modifierExtension?;
    r4:Reference[] focus?;
    r4:code language?;
    r4:CodeableConcept valueCodeableConcept?;
    r4:Ratio valueRatio?;
    r4:Reference specimen?;
    r4:Reference[] derivedFrom?;
    r4:dateTime valueDateTime?;
    string id?;
    r4:Narrative text?;
    r4:instant issued?;
    r4:integer valueInteger?;
    r4:Reference[] basedOn?;
    r4:Quantity valueQuantity?;
    r4:Identifier[] identifier?;
    r4:Reference[] performer?;
    r4:Period effectivePeriod;
    r4:CodeableConcept method?;
    r4:Reference[] hasMember?;
    r4:Reference encounter?;
    r4:CodeableConcept bodySite?;
    USCorePulseOximetryProfileComponent[] component?;
    r4:Resource[] contained?;
    USCorePulseOximetryProfileReferenceRange[] referenceRange?;
    string valueString?;
    r4:dateTime effectiveDateTime;
    r4:CodeableConcept[] interpretation?;
    r4:SampledData valueSampledData?;
    r4:Period valuePeriod?;
    r4:uri implicitRules?;
    @constraint:Array {
       minLength: 1
    }
    r4:CodeableConcept[] category;
    r4:Reference device?;
    USCorePulseOximetryProfileStatus status;
    never...;
|};

@r4:DataTypeDefinition {
    name: "BaseObservationMeta",
    baseType: r4:Meta,
    elements: {},
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type BaseUSCorePulseOximetryProfileMeta record {|
    *r4:Meta;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)

    r4:id versionId?;
    r4:instant lastUpdated?;
    r4:uri 'source?;
    r4:canonical[] profile = ["http://hl7.org/fhir/us/core/StructureDefinition/us-core-pulse-oximetry"];
    r4:Coding[] security?;
    r4:Coding[] tag?;
|};

# FHIR USCorePulseOximetryProfileCategoryVSCat datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.
@r4:DataTypeDefinition {
    name: "USCorePulseOximetryProfileCategoryVSCat",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: USCorePulseOximetryProfileCategoryCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Observation.category.coding"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.category.extension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.category.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            path: "Observation.category.text"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type USCorePulseOximetryProfileCategoryVSCat record {|
    *r4:CodeableConcept;

    @constraint:Array {
       minLength: 1
    }
    USCorePulseOximetryProfileCategoryCoding[] coding;
    r4:Extension[] extension?;
    string id?;
    string text?;
|};

# USCorePulseOximetryProfileStatus enum
public enum USCorePulseOximetryProfileStatus {
   CODE_STATUS_AMENDED = "amended",
   CODE_STATUS_FINAL = "final",
   CODE_STATUS_REGISTERED = "registered",
   CODE_STATUS_PRELIMINARY = "preliminary"
}

# FHIR USCorePulseOximetryProfileComponent datatype record.
#
# + valueBoolean - Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.
# + dataAbsentReason - Provides a reason why the expected value in the element Observation.component.value[x] is missing.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + valueTime - Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.
# + code - Describes what was observed. Sometimes this is called the observation 'code'.
# + valueRange - Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + valueCodeableConcept - Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.
# + valueRatio - Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.
# + valueString - Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.
# + interpretation - A categorical assessment of an observation value. For example, high, low, normal.
# + valueSampledData - Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.
# + valuePeriod - Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.
# + valueDateTime - Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + valueInteger - Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.
# + valueQuantity - Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.
@r4:DataTypeDefinition {
    name: "USCorePulseOximetryProfileComponent",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.",
            path: "Observation.component.value[x]"
        },
        "dataAbsentReason": {
            name: "dataAbsentReason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides a reason why the expected value in the element Observation.component.value[x] is missing.",
            path: "Observation.component.dataAbsentReason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.component.extension"
        },
        "valueTime": {
            name: "valueTime",
            dataType: r4:time,
            min: 0,
            max: 1,
            isArray: false,
            description: "Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.",
            path: "Observation.component.value[x]"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Describes what was observed. Sometimes this is called the observation 'code'.",
            path: "Observation.component.code"
        },
        "valueRange": {
            name: "valueRange",
            dataType: r4:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.",
            path: "Observation.component.value[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Observation.component.modifierExtension"
        },
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.",
            path: "Observation.component.value[x]"
        },
        "valueRatio": {
            name: "valueRatio",
            dataType: r4:Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.",
            path: "Observation.component.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.",
            path: "Observation.component.value[x]"
        },
        "interpretation": {
            name: "interpretation",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A categorical assessment of an observation value. For example, high, low, normal.",
            path: "Observation.component.interpretation"
        },
        "valueSampledData": {
            name: "valueSampledData",
            dataType: r4:SampledData,
            min: 0,
            max: 1,
            isArray: false,
            description: "Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.",
            path: "Observation.component.value[x]"
        },
        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.",
            path: "Observation.component.value[x]"
        },
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.",
            path: "Observation.component.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.component.id"
        },
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 0,
            max: 1,
            isArray: false,
            description: "Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.",
            path: "Observation.component.value[x]"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.",
            path: "Observation.component.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type USCorePulseOximetryProfileComponent record {|
    *r4:BackboneElement;

    boolean valueBoolean?;
    r4:CodeableConcept dataAbsentReason?;
    r4:Extension[] extension?;
    r4:time valueTime?;
    r4:CodeableConcept code;
    r4:Range valueRange?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept valueCodeableConcept?;
    r4:Ratio valueRatio?;
    string valueString?;
    r4:CodeableConcept[] interpretation?;
    r4:SampledData valueSampledData?;
    r4:Period valuePeriod?;
    r4:dateTime valueDateTime?;
    string id?;
    r4:integer valueInteger?;
    r4:Quantity valueQuantity?;
|};

# FHIR USCorePulseOximetryProfileComponentFlowRate datatype record.
#
# + dataAbsentReason - Provides a reason why the expected value in the element Observation.component.value[x] is missing.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - Describes what was observed. Sometimes this is called the observation 'code'.
# + interpretation - A categorical assessment of an observation value. For example, high, low, normal.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + valueQuantity - Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.
@r4:DataTypeDefinition {
    name: "USCorePulseOximetryProfileComponentFlowRate",
    baseType: (),
    elements: {
        "dataAbsentReason": {
            name: "dataAbsentReason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides a reason why the expected value in the element Observation.component.value[x] is missing.",
            path: "Observation.component.dataAbsentReason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.component.extension"
        },
        "code": {
            name: "code",
            dataType: USCorePulseOximetryProfileComponentCode,
            min: 1,
            max: 1,
            isArray: false,
            description: "Describes what was observed. Sometimes this is called the observation 'code'.",
            path: "Observation.component.code"
        },
        "interpretation": {
            name: "interpretation",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A categorical assessment of an observation value. For example, high, low, normal.",
            path: "Observation.component.interpretation"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Observation.component.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.component.id"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.",
            path: "Observation.component.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type USCorePulseOximetryProfileComponentFlowRate record {|
    *r4:BackboneElement;

    r4:CodeableConcept dataAbsentReason?;
    r4:Extension[] extension?;
    USCorePulseOximetryProfileComponentCode code;
    r4:CodeableConcept[] interpretation?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:Quantity valueQuantity?;
|};

# FHIR USCorePulseOximetryProfileComponentCodeOne datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "USCorePulseOximetryProfileComponentCodeOne",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: USCorePulseOximetryProfileComponentCodeCodingOne,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Observation.component.code.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type USCorePulseOximetryProfileComponentCodeOne record {|
    *r4:CodeableConcept;

    @constraint:Array {
       minLength: 1
    }
    USCorePulseOximetryProfileComponentCodeCodingOne[] coding;
|};

# FHIR USCorePulseOximetryProfileCodeCodingPulseOx datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "USCorePulseOximetryProfileCodeCodingPulseOx",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Observation.code.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Observation.code.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type USCorePulseOximetryProfileCodeCodingPulseOx record {|
    *r4:Coding;

    r4:uri system = "http://loinc.org";
    r4:code code = "59408-5";
|};

# FHIR USCorePulseOximetryProfileCategoryCoding datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + userSelected - Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).
# + display - A representation of the meaning of the code in the system, following the rules of the system.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
@r4:DataTypeDefinition {
    name: "USCorePulseOximetryProfileCategoryCoding",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.category.coding.extension"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Observation.category.coding.code"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Observation.category.coding.system"
        },
        "userSelected": {
            name: "userSelected",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
            path: "Observation.category.coding.userSelected"
        },
        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A representation of the meaning of the code in the system, following the rules of the system.",
            path: "Observation.category.coding.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.category.coding.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            path: "Observation.category.coding.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type USCorePulseOximetryProfileCategoryCoding record {|
    *r4:Coding;

    r4:Extension[] extension?;
    r4:code code = "vital-signs";
    r4:uri system = "http://terminology.hl7.org/CodeSystem/observation-category";
    boolean userSelected?;
    string display?;
    string id?;
    string 'version?;
|};

# FHIR USCorePulseOximetryProfileCode datatype record.
#
# + coding - A reference to a code defined by a terminology system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.
@r4:DataTypeDefinition {
    name: "USCorePulseOximetryProfileCode",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: r4:Coding,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Observation.code.coding"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.code.extension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.code.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            path: "Observation.code.text"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type USCorePulseOximetryProfileCode record {|
    *r4:CodeableConcept;

    r4:Coding[] coding?;
    r4:Extension[] extension?;
    string id?;
    string text?;
|};

# FHIR USCorePulseOximetryProfileComponentCodeCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "USCorePulseOximetryProfileComponentCodeCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Observation.component.code.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Observation.component.code.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type USCorePulseOximetryProfileComponentCodeCoding record {|
    *r4:Coding;

    r4:uri system = "http://loinc.org";
    r4:code code = "3151-8";
|};

# FHIR USCorePulseOximetryProfileReferenceRange datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + high - The value of the high bound of the reference range. The high bound of the reference range endpoint is inclusive of the value (e.g. reference range is >=5 - <=9). If the high bound is omitted, it is assumed to be meaningless (e.g. reference range is >= 2.3).
# + low - The value of the low bound of the reference range. The low bound of the reference range endpoint is inclusive of the value (e.g. reference range is >=5 - <=9). If the low bound is omitted, it is assumed to be meaningless (e.g. reference range is <=2.3).
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + appliesTo - Codes to indicate the target population this reference range applies to. For example, a reference range may be based on the normal population or a particular sex or race. Multiple `appliesTo` are interpreted as an 'AND' of the target populations. For example, to represent a target population of African American females, both a code of female and a code for African American would be used.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - Text based reference range in an observation which may be used when a quantitative range is not appropriate for an observation. An example would be a reference value of 'Negative' or a list or table of 'normals'.
# + 'type - Codes to indicate the what part of the targeted reference population it applies to. For example, the normal or therapeutic range.
# + age - The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.
@r4:DataTypeDefinition {
    name: "USCorePulseOximetryProfileReferenceRange",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.referenceRange.extension"
        },
        "high": {
            name: "high",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the high bound of the reference range. The high bound of the reference range endpoint is inclusive of the value (e.g. reference range is >=5 - <=9). If the high bound is omitted, it is assumed to be meaningless (e.g. reference range is >= 2.3).",
            path: "Observation.referenceRange.high"
        },
        "low": {
            name: "low",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the low bound of the reference range. The low bound of the reference range endpoint is inclusive of the value (e.g. reference range is >=5 - <=9). If the low bound is omitted, it is assumed to be meaningless (e.g. reference range is <=2.3).",
            path: "Observation.referenceRange.low"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Observation.referenceRange.modifierExtension"
        },
        "appliesTo": {
            name: "appliesTo",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Codes to indicate the target population this reference range applies to. For example, a reference range may be based on the normal population or a particular sex or race. Multiple `appliesTo` are interpreted as an 'AND' of the target populations. For example, to represent a target population of African American females, both a code of female and a code for African American would be used.",
            path: "Observation.referenceRange.appliesTo"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.referenceRange.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Text based reference range in an observation which may be used when a quantitative range is not appropriate for an observation. An example would be a reference value of 'Negative' or a list or table of 'normals'.",
            path: "Observation.referenceRange.text"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Codes to indicate the what part of the targeted reference population it applies to. For example, the normal or therapeutic range.",
            path: "Observation.referenceRange.type"
        },
        "age": {
            name: "age",
            dataType: r4:Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.",
            path: "Observation.referenceRange.age"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type USCorePulseOximetryProfileReferenceRange record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Quantity high?;
    r4:Quantity low?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept[] appliesTo?;
    string id?;
    string text?;
    r4:CodeableConcept 'type?;
    r4:Range age?;
|};

# FHIR USCorePulseOximetryProfileCodeCodingO2Sat datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "USCorePulseOximetryProfileCodeCodingO2Sat",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Observation.code.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Observation.code.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type USCorePulseOximetryProfileCodeCodingO2Sat record {|
    *r4:Coding;

    r4:uri system = "http://loinc.org";
    r4:code code = "2708-6";
|};

# FHIR USCorePulseOximetryProfileComponentConcentration datatype record.
#
# + dataAbsentReason - Provides a reason why the expected value in the element Observation.component.value[x] is missing.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - Describes what was observed. Sometimes this is called the observation 'code'.
# + interpretation - A categorical assessment of an observation value. For example, high, low, normal.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + valueQuantity - Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.
@r4:DataTypeDefinition {
    name: "USCorePulseOximetryProfileComponentConcentration",
    baseType: (),
    elements: {
        "dataAbsentReason": {
            name: "dataAbsentReason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides a reason why the expected value in the element Observation.component.value[x] is missing.",
            path: "Observation.component.dataAbsentReason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Observation.component.extension"
        },
        "code": {
            name: "code",
            dataType: USCorePulseOximetryProfileComponentCodeOne,
            min: 1,
            max: 1,
            isArray: false,
            description: "Describes what was observed. Sometimes this is called the observation 'code'.",
            path: "Observation.component.code"
        },
        "interpretation": {
            name: "interpretation",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A categorical assessment of an observation value. For example, high, low, normal.",
            path: "Observation.component.interpretation"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Observation.component.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Observation.component.id"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Vital Signs value are typically recorded using the Quantity data type. For supporting observations such as cuff size could use other datatypes such as CodeableConcept.",
            path: "Observation.component.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type USCorePulseOximetryProfileComponentConcentration record {|
    *r4:BackboneElement;

    r4:CodeableConcept dataAbsentReason?;
    r4:Extension[] extension?;
    USCorePulseOximetryProfileComponentCodeOne code;
    r4:CodeableConcept[] interpretation?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:Quantity valueQuantity?;
|};

# FHIR USCorePulseOximetryProfileComponentCode datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "USCorePulseOximetryProfileComponentCode",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: USCorePulseOximetryProfileComponentCodeCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Observation.component.code.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type USCorePulseOximetryProfileComponentCode record {|
    *r4:CodeableConcept;

    @constraint:Array {
       minLength: 1
    }
    USCorePulseOximetryProfileComponentCodeCoding[] coding;
|};

# FHIR USCorePulseOximetryProfileComponentCodeCodingOne datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "USCorePulseOximetryProfileComponentCodeCodingOne",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Observation.component.code.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Observation.component.code.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type USCorePulseOximetryProfileComponentCodeCodingOne record {|
    *r4:Coding;

    r4:uri system = "http://loinc.org";
    r4:code code = "3150-0";
|};

