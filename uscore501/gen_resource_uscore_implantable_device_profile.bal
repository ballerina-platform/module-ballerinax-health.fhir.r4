// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r4;

public const string PROFILE_BASE_USCOREIMPLANTABLEDEVICEPROFILE = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-implantable-device";
public const RESOURCE_NAME_USCOREIMPLANTABLEDEVICEPROFILE = "Device";

# FHIR USCoreImplantableDeviceProfile resource record.
#
# + resourceType - The type of the resource describes
# + note - Descriptive information, usage information or implantation information that is not captured in an existing element.
# + parent - The parent device.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - The base language in which the resource is written.
# + distinctIdentifier - The distinct identification string as required by regulation for a human cell, tissue, or cellular and tissue-based product.
# + 'type - The kind or type of device.
# + deviceName - This represents the manufacturer's name of the device as provided by the device, from a UDI label, or by a person describing the Device. This typically would be used when a person provides the name(s) or when the device represents one of the names available from DeviceDefinition.
# + manufacturer - A name of the manufacturer.
# + statusReason - Reason for the dtatus of the Device availability.
# + patient - Patient information, If the device is affixed to a person.
# + safety - Provides additional safety characteristics about a medical device. For example devices containing latex.
# + contact - Contact details for an organization or a particular human that is responsible for the device.
# + property - The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties.
# + manufactureDate - The date and time when the device was manufactured.
# + definition - The reference to the definition for the device.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + expirationDate - The date and time beyond which this device is no longer valid or should not be used (if applicable).
# + owner - An organization that is responsible for the provision and ongoing maintenance of the device.
# + identifier - Unique instance identifiers assigned to a device by manufacturers other organizations or owners.
# + serialNumber - The serial number assigned by the organization when the device was manufactured.
# + lotNumber - Lot number assigned by the manufacturer.
# + 'version - The actual design of the device or software version running on the device.
# + url - A network address on which the device may be contacted directly.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + udiCarrier - Unique device identifier (UDI) assigned to device label or package. Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + specialization - The capabilities supported on a device, the standards to which the device conforms for a particular purpose, and used for the communication.
# + location - The place where the device can be found.
# + modelNumber - The model number for the device.
# + partNumber - The part number of the device.
# + status - Status of the Device availability.
@r4:ResourceDefinition {
    resourceType: "Device",
    baseType: r4:DomainResource,
    profile: "http://hl7.org/fhir/us/core/StructureDefinition/us-core-implantable-device",
    elements: {
        "note" : {
            name: "note",
            dataType: r4:Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.note"
        },
        "parent" : {
            name: "parent",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.parent"
        },
        "extension" : {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.extension"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.modifierExtension"
        },
        "language" : {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "distinctIdentifier" : {
            name: "distinctIdentifier",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.distinctIdentifier"
        },
        "type" : {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            path: "Device.type",
            valueSet: "http://hl7.org/fhir/ValueSet/device-kind"
        },
        "deviceName" : {
            name: "deviceName",
            dataType: DeviceDeviceName,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.deviceName"
        },
        "manufacturer" : {
            name: "manufacturer",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.manufacturer"
        },
        "statusReason" : {
            name: "statusReason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.statusReason",
            valueSet: "http://hl7.org/fhir/ValueSet/device-status-reason"
        },
        "patient" : {
            name: "patient",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "Device.patient"
        },
        "safety" : {
            name: "safety",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.safety"
        },
        "contact" : {
            name: "contact",
            dataType: r4:ContactPoint,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.contact"
        },
        "property" : {
            name: "property",
            dataType: DeviceProperty,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.property"
        },
        "manufactureDate" : {
            name: "manufactureDate",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.manufactureDate"
        },
        "definition" : {
            name: "definition",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.definition"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.id"
        },
        "text" : {
            name: "text",
            dataType: r4:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.text"
        },
        "expirationDate" : {
            name: "expirationDate",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.expirationDate"
        },
        "owner" : {
            name: "owner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.owner"
        },
        "identifier" : {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.identifier"
        },
        "serialNumber" : {
            name: "serialNumber",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.serialNumber"
        },
        "lotNumber" : {
            name: "lotNumber",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.lotNumber"
        },
        "version" : {
            name: "version",
            dataType: DeviceVersion,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.version"
        },
        "url" : {
            name: "url",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.url"
        },
        "contained" : {
            name: "contained",
            dataType: r4:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.contained"
        },
        "udiCarrier" : {
            name: "udiCarrier",
            dataType: DeviceUdiCarrier,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.udiCarrier"
        },
        "meta" : {
            name: "meta",
            dataType: r4:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.implicitRules"
        },
        "specialization" : {
            name: "specialization",
            dataType: DeviceSpecialization,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Device.specialization"
        },
        "location" : {
            name: "location",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.location"
        },
        "modelNumber" : {
            name: "modelNumber",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.modelNumber"
        },
        "partNumber" : {
            name: "partNumber",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.partNumber"
        },
        "status" : {
            name: "status",
            dataType: DeviceStatus,
            min: 0,
            max: 1,
            isArray: false,
            path: "Device.status",
            valueSet: "http://hl7.org/fhir/ValueSet/device-status|4.0.1"
        }
    },
    serializers: {
        'xml: r4:fhirResourceXMLSerializer,
        'json: r4:fhirResourceJsonSerializer
    }
}
public type USCoreImplantableDeviceProfile record {|
    *r4:DomainResource;

    RESOURCE_NAME_USCOREIMPLANTABLEDEVICEPROFILE resourceType = RESOURCE_NAME_USCOREIMPLANTABLEDEVICEPROFILE;

    BaseUSCoreImplantableDeviceProfileMeta meta = {
        profile : [PROFILE_BASE_USCOREIMPLANTABLEDEVICEPROFILE]
    };
    r4:Annotation[] note?;
    r4:Reference parent?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:code language?;
    string distinctIdentifier?;
    r4:CodeableConcept 'type;
    DeviceDeviceName[] deviceName?;
    string manufacturer?;
    r4:CodeableConcept[] statusReason?;
    r4:Reference patient;
    r4:CodeableConcept[] safety?;
    r4:ContactPoint[] contact?;
    DeviceProperty[] property?;
    r4:dateTime manufactureDate?;
    r4:Reference definition?;
    string id?;
    r4:Narrative text?;
    r4:dateTime expirationDate?;
    r4:Reference owner?;
    r4:Identifier[] identifier?;
    string serialNumber?;
    string lotNumber?;
    DeviceVersion[] 'version?;
    r4:uri url?;
    r4:Resource[] contained?;
    DeviceUdiCarrier udiCarrier?;
    r4:uri implicitRules?;
    DeviceSpecialization[] specialization?;
    r4:Reference location?;
    string modelNumber?;
    string partNumber?;
    DeviceStatus status?;
    never...;
|};

@r4:DataTypeDefinition {
    name: "BaseDeviceMeta",
    baseType: r4:Meta,
    elements: {},
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type BaseUSCoreImplantableDeviceProfileMeta record {|
    *r4:Meta;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)

    r4:id versionId?;
    r4:instant lastUpdated?;
    r4:uri 'source?;
    r4:canonical[] profile = ["http://hl7.org/fhir/us/core/StructureDefinition/us-core-implantable-device"];
    r4:Coding[] security?;
    r4:Coding[] tag?;
|};

# FHIR DeviceProperty datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + valueCode - Property value as a code, e.g., NTP4 (synced to NTP).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Code that specifies the property DeviceDefinitionPropetyCode (Extensible).
# + valueQuantity - Property value as a quantity.
@r4:DataTypeDefinition {
    name: "DeviceProperty",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.property.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.property.modifierExtension"
        },
        "valueCode": {
            name: "valueCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Property value as a code, e.g., NTP4 (synced to NTP).",
            path: "Device.property.valueCode"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.property.id"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Code that specifies the property DeviceDefinitionPropetyCode (Extensible).",
            path: "Device.property.type"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Property value as a quantity.",
            path: "Device.property.valueQuantity"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DeviceProperty record {|
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept[] valueCode?;
    string id?;
    r4:CodeableConcept 'type;
    r4:Quantity[] valueQuantity?;
|};

# FHIR DeviceSpecialization datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + systemType - The standard that is used to operate and communicate.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'version - The version of the standard that is used to operate and communicate.
@r4:DataTypeDefinition {
    name: "DeviceSpecialization",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.specialization.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.specialization.modifierExtension"
        },
        "systemType": {
            name: "systemType",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The standard that is used to operate and communicate.",
            path: "Device.specialization.systemType"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.specialization.id"
        },
        "version": {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The version of the standard that is used to operate and communicate.",
            path: "Device.specialization.version"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DeviceSpecialization record {|
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept systemType;
    string id?;
    string 'version?;
|};

# FHIR DeviceDeviceName datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + name - The name of the device.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The type of deviceName. UDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.
@r4:DataTypeDefinition {
    name: "DeviceDeviceName",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.deviceName.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.deviceName.modifierExtension"
        },
        "name": {
            name: "name",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The name of the device.",
            path: "Device.deviceName.name"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.deviceName.id"
        },
        "type": {
            name: "type",
            dataType: DeviceDeviceNameType,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of deviceName. UDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.",
            path: "Device.deviceName.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DeviceDeviceName record {|
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string name;
    string id?;
    DeviceDeviceNameType 'type;
|};

# DeviceUdiCarrierEntryType enum
public enum DeviceUdiCarrierEntryType {
   CODE_ENTRYTYPE_RFID = "rfid",
   CODE_ENTRYTYPE_MANUAL = "manual",
   CODE_ENTRYTYPE_BARCODE = "barcode"
}

# FHIR DeviceUdiCarrier datatype record.
#
# + entryType - A coded entry to indicate how the data was entered.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + deviceIdentifier - The device identifier (DI) is a mandatory, fixed portion of a UDI that identifies the labeler and the specific version or model of a device.
# + carrierHRF - The full UDI carrier as the human readable form (HRF) representation of the barcode string as printed on the packaging of the device.
# + jurisdiction - The identity of the authoritative source for UDI generation within a jurisdiction. All UDIs are globally unique within a single namespace with the appropriate repository uri as the system. For example, UDIs of devices managed in the U.S. by the FDA, the value is http://hl7.org/fhir/NamingSystem/fda-udi.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + carrierAIDC - The full UDI carrier of the Automatic Identification and Data Capture (AIDC) technology representation of the barcode string as printed on the packaging of the device - e.g., a barcode or RFID. Because of limitations on character sets in XML and the need to round-trip JSON data through XML, AIDC Formats *SHALL* be base64 encoded.
# + issuer - Organization that is charged with issuing UDIs for devices. For example, the US FDA issuers include : 1) GS1: http://hl7.org/fhir/NamingSystem/gs1-di, 2) HIBCC: http://hl7.org/fhir/NamingSystem/hibcc-dI, 3) ICCBBA for blood containers: http://hl7.org/fhir/NamingSystem/iccbba-blood-di, 4) ICCBA for other devices: http://hl7.org/fhir/NamingSystem/iccbba-other-di.
@r4:DataTypeDefinition {
    name: "DeviceUdiCarrier",
    baseType: (),
    elements: {
        "entryType": {
            name: "entryType",
            dataType: DeviceUdiCarrierEntryType,
            min: 0,
            max: 1,
            isArray: false,
            description: "A coded entry to indicate how the data was entered.",
            path: "Device.udiCarrier.entryType"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.udiCarrier.extension"
        },
        "deviceIdentifier": {
            name: "deviceIdentifier",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The device identifier (DI) is a mandatory, fixed portion of a UDI that identifies the labeler and the specific version or model of a device.",
            path: "Device.udiCarrier.deviceIdentifier"
        },
        "carrierHRF": {
            name: "carrierHRF",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The full UDI carrier as the human readable form (HRF) representation of the barcode string as printed on the packaging of the device.",
            path: "Device.udiCarrier.carrierHRF"
        },
        "jurisdiction": {
            name: "jurisdiction",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The identity of the authoritative source for UDI generation within a jurisdiction. All UDIs are globally unique within a single namespace with the appropriate repository uri as the system. For example, UDIs of devices managed in the U.S. by the FDA, the value is http://hl7.org/fhir/NamingSystem/fda-udi.",
            path: "Device.udiCarrier.jurisdiction"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.udiCarrier.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.udiCarrier.id"
        },
        "carrierAIDC": {
            name: "carrierAIDC",
            dataType: r4:base64Binary,
            min: 0,
            max: 1,
            isArray: false,
            description: "The full UDI carrier of the Automatic Identification and Data Capture (AIDC) technology representation of the barcode string as printed on the packaging of the device - e.g., a barcode or RFID. Because of limitations on character sets in XML and the need to round-trip JSON data through XML, AIDC Formats *SHALL* be base64 encoded.",
            path: "Device.udiCarrier.carrierAIDC"
        },
        "issuer": {
            name: "issuer",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that is charged with issuing UDIs for devices. For example, the US FDA issuers include : 1) GS1: http://hl7.org/fhir/NamingSystem/gs1-di, 2) HIBCC: http://hl7.org/fhir/NamingSystem/hibcc-dI, 3) ICCBBA for blood containers: http://hl7.org/fhir/NamingSystem/iccbba-blood-di, 4) ICCBA for other devices: http://hl7.org/fhir/NamingSystem/iccbba-other-di.",
            path: "Device.udiCarrier.issuer"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DeviceUdiCarrier record {|
    DeviceUdiCarrierEntryType entryType?;
    r4:Extension[] extension?;
    string deviceIdentifier;
    string carrierHRF?;
    r4:uri jurisdiction?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:base64Binary carrierAIDC?;
    r4:uri issuer?;
|};

# DeviceStatus enum
public enum DeviceStatus {
   CODE_STATUS_INACTIVE = "inactive",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error",
   CODE_STATUS_UNKNOWN = "unknown"
}

# DeviceDeviceNameType enum
public enum DeviceDeviceNameType {
   CODE_TYPE_UDI_LABEL_NAME = "udi-label-name",
   CODE_TYPE_OTHER = "other",
   CODE_TYPE_MANUFACTURER_NAME = "manufacturer-name",
   CODE_TYPE_MODEL_NAME = "model-name",
   CODE_TYPE_USER_FRIENDLY_NAME = "user-friendly-name",
   CODE_TYPE_PATIENT_REPORTED_NAME = "patient-reported-name"
}

# FHIR DeviceVersion datatype record.
#
# + component - A single component of the device version.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The type of the device version.
# + value - The version text.
@r4:DataTypeDefinition {
    name: "DeviceVersion",
    baseType: (),
    elements: {
        "component": {
            name: "component",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "A single component of the device version.",
            path: "Device.version.component"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Device.version.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Device.version.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Device.version.id"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of the device version.",
            path: "Device.version.type"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The version text.",
            path: "Device.version.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DeviceVersion record {|
    r4:Identifier component?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept 'type?;
    string value;
|};

