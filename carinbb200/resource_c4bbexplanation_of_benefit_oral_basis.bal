// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//
// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r4;
import ballerinax/health.fhir.r4.international401;

public const string PROFILE_BASE_C4BBEXPLANATIONOFBENEFITORALBASIS = "http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-ExplanationOfBenefit-Oral-Basis";
public const RESOURCE_NAME_C4BBEXPLANATIONOFBENEFITORALBASIS = "ExplanationOfBenefit";

# FHIR C4BBExplanationOfBenefitOralBasis resource record.
#
# + resourceType - The type of the resource describes
# + benefitPeriod - The term of the benefits documented in this response.
# + insurance - Financial instruments for reimbursement for the health care products and services specified on the claim.
# + claimResponse - The business identifier for the instance of the adjudication response: claim, predetermination or preauthorization response.
# + use - A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non-binding adjudication of the listed products and services which could be provided in the future.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + preAuthRef - Reference from the Insurer which is used in later communications which refers to this adjudication.
# + language - The base language in which the resource is written.
# + 'type - The category of claim, e.g. oral, pharmacy, vision, institutional, professional.
# + precedence - This indicates the relative order of a series of EOBs related to different coverages for the same suite of services.
# + processNote - A note that describes or explains adjudication results in a human readable form.
# + payee - The party to be reimbursed for cost of the products and services according to the terms of the policy.
# + supportingInfo - Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues.
# * supportingInfo Slicings
# 1) C4BBExplanationOfBenefitOralBasisSupportingInfoOrthodontics: Orthodontics treatment indicator
# - min = 0
# - max = 1
#
# 2) C4BBExplanationOfBenefitOralBasisSupportingInfoMedicalrecordnumber: Medical record number
# - min = 0
# - max = 1
#
# 3) C4BBExplanationOfBenefitOralBasisSupportingInfoServicefacility: Service facility
# - min = 0
# - max = 1
#
# 4) C4BBExplanationOfBenefitOralBasisSupportingInfoClmrecvddate: Claim received date
# - min = 0
# - max = 1
#
# 5) C4BBExplanationOfBenefitOralBasisSupportingInfoPatientaccountnumber: Patient account number
# - min = 0
# - max = 1
#
# 6) C4BBExplanationOfBenefitOralBasisSupportingInfoProsthesis: Prosthesis
# - min = 0
# - max = 1
#
# 7) C4BBExplanationOfBenefitOralBasisSupportingInfoMissingtoothnumber: Missing tooth number
# - min = 0
# - max = *
#
# 8) C4BBExplanationOfBenefitOralBasisSupportingInfoAdditionalbodysite: Additional tooth number or oral cavity code
# - min = 0
# - max = *
#
# + claim - The business identifier for the instance of the adjudication request: claim predetermination or preauthorization.
# + enterer - Individual who created the claim, predetermination or preauthorization.
# + payment - Payment details for the adjudication of the claim.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + careTeam - The members of the team who provided the products and services.
# + identifier - A unique identifier assigned to this explanation of benefit.
# * identifier Slicings
# 1) C4BBExplanationOfBenefitOralBasisIdentifierUniqueclaimid: Unique Claim Identifier
# - min = 1
# - max = 1
#
# + item - A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details.
# + created - The date this resource was created.
# + diagnosis - Information about diagnoses relevant to the claim items.
# + priority - The provider-required urgency of processing the request. Typical values include: stat, routine deferred.
# + preAuthRefPeriod - The timeframe during which the supplied preauthorization reference may be quoted on claims to obtain the adjudication as provided.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + billablePeriod - The period for which charges are being submitted.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + subType - A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.
# + status - The status of the resource instance.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + benefitBalance - Balance by Benefit Category.
# + accident - Details of a accident which resulted in injuries which required the products and services listed in the claim.
# + adjudication - The adjudication results which are presented at the header level rather than at the line-item or add-item levels.
# * adjudication Slicings
# 1) C4BBExplanationOfBenefitOralBasisAdjudicationBillingnetworkstatus: Billing provider network status
# - min = 0
# - max = 1
#
# 2) C4BBExplanationOfBenefitOralBasisAdjudicationBenefitpaymentstatus: Indicates the in network or out of network payment status of the claim. (142)
# - min = 1
# - max = *
#
# 3) C4BBExplanationOfBenefitOralBasisAdjudicationRenderingnetworkstatus: Rendering provider network status
# - min = 1
# - max = 1
#
# + addItem - The first-tier service adjudications for payor added product or service lines.
# + total - Categorized monetary totals for the adjudication.
# + related - Other claims which are related to this claim such as prior submissions or claims for related services or for the same event.
# + fundsReserve - A code, used only on a response to a preauthorization, to indicate whether the benefits payable have been reserved and for whom.
# + fundsReserveRequested - A code to indicate whether and for whom funds are to be reserved for future claims.
# + provider - The provider which is responsible for the claim, predetermination or preauthorization.
# + insurer - The party responsible for authorization, adjudication and reimbursement.
# + patient - The party to whom the professional services and/or products have been supplied or are being considered and for whom actual for forecast reimbursement is sought.
# + outcome - The outcome of the claim, predetermination, or preauthorization processing.
# + formCode - A code for the form to be used for printing the content.
# + originalPrescription - Original prescription which has been superseded by this prescription to support the dispensing of pharmacy services, medications or products.
# + procedure - Procedures performed on the patient relevant to the billing items with the claim.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + disposition - A human readable description of the status of the adjudication.
# + referral - A reference to a referral resource.
# + form - The actual form, by reference or inclusion, for printing the content or an EOB.
# + prescription - Prescription to support the dispensing of pharmacy, device or vision products.
# + facility - Facility where the services were provided.

@r4:ResourceDefinition {
    resourceType: "ExplanationOfBenefit",
    baseType: r4:DomainResource,
    profile: "http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-ExplanationOfBenefit-Oral-Basis",
    elements: {
        "benefitPeriod": {
            name: "benefitPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.benefitPeriod"
        },

        "insurance": {
            name: "insurance",
            dataType: C4BBExplanationOfBenefitOralBasisInsurance,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.insurance"
        },

        "claimResponse": {
            name: "claimResponse",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.claimResponse"
        },

        "use": {
            name: "use",
            dataType: C4BBExplanationOfBenefitOralBasisUse,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.use",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-use|4.0.1"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.modifierExtension"
        },

        "preAuthRef": {
            name: "preAuthRef",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.preAuthRef"
        },

        "language": {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },

        "type": {
            name: "type",
            dataType: C4BBExplanationOfBenefitOralBasisType,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.type",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-type"
        },

        "precedence": {
            name: "precedence",
            dataType: r4:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.precedence"
        },

        "processNote": {
            name: "processNote",
            dataType: C4BBExplanationOfBenefitOralBasisProcessNote,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.processNote"
        },

        "payee": {
            name: "payee",
            dataType: C4BBExplanationOfBenefitOralBasisPayee,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.payee"
        },

        "supportingInfo": {
            name: "supportingInfo",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfo,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.supportingInfo"
        },

        "claim": {
            name: "claim",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.claim"
        },

        "enterer": {
            name: "enterer",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.enterer"
        },

        "payment": {
            name: "payment",
            dataType: C4BBExplanationOfBenefitOralBasisPayment,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.payment"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.id"
        },

        "text": {
            name: "text",
            dataType: r4:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.text"
        },

        "careTeam": {
            name: "careTeam",
            dataType: C4BBExplanationOfBenefitOralBasisCareTeam,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.careTeam"
        },

        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.identifier"
        },

        "item": {
            name: "item",
            dataType: C4BBExplanationOfBenefitOralBasisItem,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.item"
        },

        "created": {
            name: "created",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.created"
        },

        "diagnosis": {
            name: "diagnosis",
            dataType: C4BBExplanationOfBenefitOralBasisDiagnosis,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.diagnosis"
        },

        "priority": {
            name: "priority",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.priority",
            valueSet: "http://hl7.org/fhir/ValueSet/process-priority"
        },

        "preAuthRefPeriod": {
            name: "preAuthRefPeriod",
            dataType: r4:Period,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.preAuthRefPeriod"
        },

        "meta": {
            name: "meta",
            dataType: r4:Meta,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.meta"
        },

        "billablePeriod": {
            name: "billablePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.billablePeriod"
        },

        "implicitRules": {
            name: "implicitRules",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.implicitRules"
        },

        "subType": {
            name: "subType",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.subType",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-subtype"
        },

        "status": {
            name: "status",
            dataType: C4BBExplanationOfBenefitOralBasisStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.status",
            valueSet: "http://hl7.org/fhir/ValueSet/explanationofbenefit-status|4.0.1"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.extension"
        },

        "benefitBalance": {
            name: "benefitBalance",
            dataType: C4BBExplanationOfBenefitOralBasisBenefitBalance,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.benefitBalance"
        },

        "accident": {
            name: "accident",
            dataType: C4BBExplanationOfBenefitOralBasisAccident,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.accident"
        },

        "adjudication": {
            name: "adjudication",
            dataType: C4BBExplanationOfBenefitOralBasisAdjudication,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.adjudication"
        },

        "addItem": {
            name: "addItem",
            dataType: C4BBExplanationOfBenefitOralBasisAddItem,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.addItem"
        },

        "total": {
            name: "total",
            dataType: C4BBExplanationOfBenefitOralBasisTotal,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.total"
        },

        "related": {
            name: "related",
            dataType: C4BBExplanationOfBenefitOralBasisRelated,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.related"
        },

        "fundsReserve": {
            name: "fundsReserve",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.fundsReserve",
            valueSet: "http://hl7.org/fhir/ValueSet/fundsreserve"
        },

        "fundsReserveRequested": {
            name: "fundsReserveRequested",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.fundsReserveRequested",
            valueSet: "http://hl7.org/fhir/ValueSet/fundsreserve"
        },

        "provider": {
            name: "provider",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.provider"
        },

        "insurer": {
            name: "insurer",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.insurer"
        },

        "patient": {
            name: "patient",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.patient"
        },

        "outcome": {
            name: "outcome",
            dataType: C4BBExplanationOfBenefitOralBasisOutcome,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.outcome",
            valueSet: "http://hl7.org/fhir/ValueSet/remittance-outcome|4.0.1"
        },

        "formCode": {
            name: "formCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.formCode",
            valueSet: "http://hl7.org/fhir/ValueSet/forms"
        },

        "originalPrescription": {
            name: "originalPrescription",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.originalPrescription"
        },

        "procedure": {
            name: "procedure",
            dataType: C4BBExplanationOfBenefitOralBasisProcedure,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.procedure"
        },

        "contained": {
            name: "contained",
            dataType: r4:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.contained"
        },

        "disposition": {
            name: "disposition",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.disposition"
        },

        "referral": {
            name: "referral",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.referral"
        },

        "form": {
            name: "form",
            dataType: r4:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.form"
        },

        "prescription": {
            name: "prescription",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.prescription"
        },

        "facility": {
            name: "facility",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.facility"
        }

    },

    serializers: {
        'xml: r4:fhirResourceXMLSerializer,
        'json: r4:fhirResourceJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasis record {|
    *r4:DomainResource;

    RESOURCE_NAME_C4BBEXPLANATIONOFBENEFITORALBASIS resourceType = RESOURCE_NAME_C4BBEXPLANATIONOFBENEFITORALBASIS;

    r4:Period benefitPeriod?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.insurance constraint. This field must be an array containing at least one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisInsurance[] insurance;
    r4:Reference claimResponse?;
    C4BBExplanationOfBenefitOralBasisUse use;
    r4:Extension[] modifierExtension?;
    string[] preAuthRef?;
    r4:code language?;
    C4BBExplanationOfBenefitOralBasisType 'type;
    r4:positiveInt precedence?;
    C4BBExplanationOfBenefitOralBasisProcessNote[] processNote?;
    C4BBExplanationOfBenefitOralBasisPayee payee?;
    C4BBExplanationOfBenefitOralBasisSupportingInfo[] supportingInfo?;
    r4:Reference claim?;
    r4:Reference enterer?;
    C4BBExplanationOfBenefitOralBasisPayment payment?;
    string id?;
    r4:Narrative text?;
    C4BBExplanationOfBenefitOralBasisCareTeam[] careTeam?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.identifier constraint. This field must be an array containing at least one item."
        }
    }
    r4:Identifier[] identifier;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.item constraint. This field must be an array containing at least one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisItem[] item;
    r4:dateTime created;
    C4BBExplanationOfBenefitOralBasisDiagnosis[] diagnosis?;
    r4:CodeableConcept priority?;
    r4:Period[] preAuthRefPeriod?;
    r4:Meta meta;
    r4:Period billablePeriod;
    r4:uri implicitRules?;
    r4:CodeableConcept subType?;
    C4BBExplanationOfBenefitOralBasisStatus status;
    r4:Extension[] extension?;
    C4BBExplanationOfBenefitOralBasisBenefitBalance[] benefitBalance?;
    C4BBExplanationOfBenefitOralBasisAccident accident?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.adjudication constraint. This field must be an array containing at least one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisAdjudication[] adjudication;
    C4BBExplanationOfBenefitOralBasisAddItem[] addItem?;
    C4BBExplanationOfBenefitOralBasisTotal[] total?;
    C4BBExplanationOfBenefitOralBasisRelated[] related?;
    r4:CodeableConcept fundsReserve?;
    r4:CodeableConcept fundsReserveRequested?;
    r4:Reference provider;
    r4:Reference insurer;
    r4:Reference patient;
    C4BBExplanationOfBenefitOralBasisOutcome outcome;
    r4:CodeableConcept formCode?;
    r4:Reference originalPrescription?;
    C4BBExplanationOfBenefitOralBasisProcedure[] procedure?;
    r4:Resource[] contained?;
    string disposition?;
    r4:Reference referral?;
    r4:Attachment form?;
    r4:Reference prescription?;
    r4:Reference facility?;
    r4:Element...;
|};

# FHIR C4BBExplanationOfBenefitOralBasisItem datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + servicedPeriod - The date or dates when the service or product was supplied, performed or completed.
# + adjudication - If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.
# + informationSequence - Exceptions, special conditions and supporting information applicable for this service or product.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + locationCodeableConcept - Where the product or service was provided.
# + diagnosisSequence - Diagnoses applicable for this service or product.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + quantity - The number of repetitions of a service or product.
# + programCode - Identifies the program under which this may be recovered.
# + careTeamSequence - Care team members related to this service or product.
# + encounter - A billed item may include goods or services provided in multiple encounters.
# + sequence - A number to uniquely identify item entries.
# + bodySite - Physical service site on the patient (limb, tooth, etc.).
# + subSite - A region or surface of the bodySite, e.g. limb region or tooth surface(s).
# + detail - Second-tier of goods and services.
# + servicedDate - The date or dates when the service or product was supplied, performed or completed.
# + udi - Unique Device Identifiers associated with this line item.
# + category - Code to identify the general type of benefits under which products and services are provided.
# + procedureSequence - Procedures applicable for this service or product.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisItem",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.extension"
        },

        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.item.modifier"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.modifierExtension"
        },

        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "ExplanationOfBenefit.item.productOrService"
        },

        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.item.noteNumber"
        },

        "servicedPeriod": {
            name: "servicedPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "ExplanationOfBenefit.item.serviced[x]"
        },

        "adjudication": {
            name: "adjudication",
            dataType: C4BBExplanationOfBenefitOralBasisItemAdjudication,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.",
            path: "ExplanationOfBenefit.item.adjudication"
        },

        "informationSequence": {
            name: "informationSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Exceptions, special conditions and supporting information applicable for this service or product.",
            path: "ExplanationOfBenefit.item.informationSequence"
        },

        "revenue": {
            name: "revenue",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "ExplanationOfBenefit.item.revenue"
        },

        "locationCodeableConcept": {
            name: "locationCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ExplanationOfBenefit.item.location[x]"
        },

        "diagnosisSequence": {
            name: "diagnosisSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Diagnoses applicable for this service or product.",
            path: "ExplanationOfBenefit.item.diagnosisSequence"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.id"
        },

        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.item.factor"
        },

        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "ExplanationOfBenefit.item.net"
        },

        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.item.unitPrice"
        },

        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.item.quantity"
        },

        "programCode": {
            name: "programCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "ExplanationOfBenefit.item.programCode"
        },

        "careTeamSequence": {
            name: "careTeamSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Care team members related to this service or product.",
            path: "ExplanationOfBenefit.item.careTeamSequence"
        },

        "encounter": {
            name: "encounter",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A billed item may include goods or services provided in multiple encounters.",
            path: "ExplanationOfBenefit.item.encounter"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify item entries.",
            path: "ExplanationOfBenefit.item.sequence"
        },

        "bodySite": {
            name: "bodySite",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Physical service site on the patient (limb, tooth, etc.).",
            path: "ExplanationOfBenefit.item.bodySite"
        },

        "subSite": {
            name: "subSite",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
            path: "ExplanationOfBenefit.item.subSite"
        },

        "detail": {
            name: "detail",
            dataType: C4BBExplanationOfBenefitOralBasisItemDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Second-tier of goods and services.",
            path: "ExplanationOfBenefit.item.detail"
        },

        "servicedDate": {
            name: "servicedDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "ExplanationOfBenefit.item.serviced[x]"
        },

        "udi": {
            name: "udi",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Unique Device Identifiers associated with this line item.",
            path: "ExplanationOfBenefit.item.udi"
        },

        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Code to identify the general type of benefits under which products and services are provided.",
            path: "ExplanationOfBenefit.item.category"
        },

        "procedureSequence": {
            name: "procedureSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Procedures applicable for this service or product.",
            path: "ExplanationOfBenefit.item.procedureSequence"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisItem record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept productOrService;
    r4:positiveInt[] noteNumber?;
    r4:Period servicedPeriod?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.item.adjudication constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.item.adjudication constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisItemAdjudication[] adjudication;
    r4:positiveInt[] informationSequence?;
    r4:CodeableConcept revenue?;
    r4:CodeableConcept locationCodeableConcept?;
    r4:positiveInt[] diagnosisSequence?;
    string id?;
    decimal factor?;
    r4:Money net?;
    r4:Money unitPrice?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] programCode?;
    r4:positiveInt[] careTeamSequence?;
    r4:Reference[] encounter?;
    r4:positiveInt sequence;
    r4:CodeableConcept bodySite?;
    r4:CodeableConcept[] subSite?;
    C4BBExplanationOfBenefitOralBasisItemDetail[] detail?;
    r4:date servicedDate?;
    r4:Reference[] udi?;
    r4:CodeableConcept category?;
    r4:positiveInt[] procedureSequence?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoAdditionalbodysite datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timingDate - The date when or period to which this information refers.
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoAdditionalbodysite",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },

        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },

        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },

        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },

        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfoCategorySeven,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        },

        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoAdditionalbodysite record {|
    *C4BBExplanationOfBenefitOralBasisSupportingInfo;

    boolean valueBoolean?;
    r4:Coding reason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code;
    r4:Reference valueReference?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    r4:date timingDate?;
    r4:positiveInt sequence;
    r4:Attachment valueAttachment?;
    string valueString?;
    string id?;
    C4BBExplanationOfBenefitOralBasisSupportingInfoCategorySeven category;
    r4:Quantity valueQuantity?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingOne datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingOne",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingOne record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "medicalrecordnumber";
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoServicefacility datatype record.
#
# + timingDate - The date when or period to which this information refers.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + sequence - A number to uniquely identify supporting information entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoServicefacility",
    baseType: (),
    elements: {
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },

        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },

        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryTwo,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoServicefacility record {|
    *C4BBExplanationOfBenefitOralBasisSupportingInfo;

    r4:date timingDate?;
    r4:Coding reason?;
    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    r4:Reference valueReference?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryTwo category;
|};

# FHIR C4BBExplanationOfBenefitOralBasisItemAdjudicationAdjustmentreason datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisItemAdjudicationAdjustmentreason",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.item.adjudication.reason"
        },

        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.item.adjudication.amount"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.adjudication.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.adjudication.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.adjudication.id"
        },

        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitOralBasisItemAdjudicationCategory,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.item.adjudication.category"
        },

        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.item.adjudication.value"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisItemAdjudicationAdjustmentreason record {|
    *C4BBExplanationOfBenefitOralBasisItemAdjudication;

    r4:CodeableConcept reason;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitOralBasisItemAdjudicationCategory category;
    decimal value?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisTypeCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisTypeCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.type.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.type.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisTypeCoding record {|
    *r4:Coding;

    r4:uri system = "http://terminology.hl7.org/CodeSystem/claim-type";
    r4:code code = "oral";
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingSix datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingSix",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingSix record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "missingtoothnumber";
|};

# FHIR C4BBExplanationOfBenefitOralBasisBenefitBalanceFinancial datatype record.
#
# + allowedMoney - The quantity of the benefit which is permitted under the coverage.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + allowedString - The quantity of the benefit which is permitted under the coverage.
# + allowedUnsignedInt - The quantity of the benefit which is permitted under the coverage.
# + usedUnsignedInt - The quantity of the benefit which have been consumed to date.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + usedMoney - The quantity of the benefit which have been consumed to date.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Classification of benefit being provided.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisBenefitBalanceFinancial",
    baseType: (),
    elements: {
        "allowedMoney": {
            name: "allowedMoney",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which is permitted under the coverage.",
            path: "ExplanationOfBenefit.benefitBalance.financial.allowed[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.benefitBalance.financial.extension"
        },

        "allowedString": {
            name: "allowedString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which is permitted under the coverage.",
            path: "ExplanationOfBenefit.benefitBalance.financial.allowed[x]"
        },

        "allowedUnsignedInt": {
            name: "allowedUnsignedInt",
            dataType: r4:unsignedInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which is permitted under the coverage.",
            path: "ExplanationOfBenefit.benefitBalance.financial.allowed[x]"
        },

        "usedUnsignedInt": {
            name: "usedUnsignedInt",
            dataType: r4:unsignedInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which have been consumed to date.",
            path: "ExplanationOfBenefit.benefitBalance.financial.used[x]"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.benefitBalance.financial.modifierExtension"
        },

        "usedMoney": {
            name: "usedMoney",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which have been consumed to date.",
            path: "ExplanationOfBenefit.benefitBalance.financial.used[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.benefitBalance.financial.id"
        },

        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Classification of benefit being provided.",
            path: "ExplanationOfBenefit.benefitBalance.financial.type"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisBenefitBalanceFinancial record {|
    *r4:BackboneElement;

    r4:Money allowedMoney?;
    r4:Extension[] extension?;
    string allowedString?;
    r4:unsignedInt allowedUnsignedInt?;
    r4:unsignedInt usedUnsignedInt?;
    r4:Extension[] modifierExtension?;
    r4:Money usedMoney?;
    string id?;
    r4:CodeableConcept 'type;
|};

# FHIR C4BBExplanationOfBenefitOralBasisAdjudicationBenefitpaymentstatus datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisAdjudicationBenefitpaymentstatus",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.adjudication.reason"
        },

        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.adjudication.amount"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.adjudication.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.adjudication.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.adjudication.id"
        },

        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitOralBasisAdjudicationCategoryOne,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.adjudication.category"
        },

        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.adjudication.value"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisAdjudicationBenefitpaymentstatus record {|
    *C4BBExplanationOfBenefitOralBasisAdjudication;

    r4:CodeableConcept reason;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitOralBasisAdjudicationCategoryOne category;
    decimal value?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisCareTeam datatype record.
#
# + qualification - The qualification of the practitioner which is applicable for this service.
# + sequence - A number to uniquely identify care team entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + role - The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.
# + provider - Member of the team who provided the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + responsible - The party who is billing and/or responsible for the claimed products or services.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisCareTeam",
    baseType: (),
    elements: {
        "qualification": {
            name: "qualification",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The qualification of the practitioner which is applicable for this service.",
            path: "ExplanationOfBenefit.careTeam.qualification"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify care team entries.",
            path: "ExplanationOfBenefit.careTeam.sequence"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.careTeam.extension"
        },

        "role": {
            name: "role",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.",
            path: "ExplanationOfBenefit.careTeam.role"
        },

        "provider": {
            name: "provider",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Member of the team who provided the product or service.",
            path: "ExplanationOfBenefit.careTeam.provider"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.careTeam.modifierExtension"
        },

        "responsible": {
            name: "responsible",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "The party who is billing and/or responsible for the claimed products or services.",
            path: "ExplanationOfBenefit.careTeam.responsible"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.careTeam.id"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisCareTeam record {|
    *r4:BackboneElement;

    r4:CodeableConcept qualification?;
    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept role;
    r4:Reference provider;
    r4:Extension[] modifierExtension?;
    boolean responsible?;
    string id?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisPayee datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Type of Party to be reimbursed: Subscriber, provider, other.
# + party - Reference to the individual or organization to whom any payment will be made.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisPayee",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.payee.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.payee.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.payee.id"
        },

        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Type of Party to be reimbursed: Subscriber, provider, other.",
            path: "ExplanationOfBenefit.payee.type"
        },

        "party": {
            name: "party",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reference to the individual or organization to whom any payment will be made.",
            path: "ExplanationOfBenefit.payee.party"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisPayee record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept 'type;
    r4:Reference party?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisItemAdjudication datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisItemAdjudication",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.item.adjudication.reason"
        },

        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.item.adjudication.amount"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.adjudication.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.adjudication.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.adjudication.id"
        },

        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.item.adjudication.category"
        },

        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.item.adjudication.value"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisItemAdjudication record {|
    *r4:BackboneElement;

    r4:CodeableConcept reason?;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept category;
    decimal value?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisAddItemDetailSubDetail datatype record.
#
# + adjudication - The adjudication results.
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of repetitions of a service or product.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisAddItemDetailSubDetail",
    baseType: (),
    elements: {
        "adjudication": {
            name: "adjudication",
            dataType: international401:ExplanationOfBenefitItemAdjudication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The adjudication results.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.adjudication"
        },

        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.unitPrice"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.extension"
        },

        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.quantity"
        },

        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.modifier"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.id"
        },

        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.productOrService"
        },

        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.factor"
        },

        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.net"
        },

        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.noteNumber"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisAddItemDetailSubDetail record {|
    *r4:BackboneElement;

    international401:ExplanationOfBenefitItemAdjudication[] adjudication?;
    r4:Money unitPrice?;
    r4:Extension[] extension?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept productOrService;
    decimal factor?;
    r4:Money net?;
    r4:positiveInt[] noteNumber?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisAdjudicationCategoryCodingOne datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisAdjudicationCategoryCodingOne",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.adjudication.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.adjudication.category.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisAdjudicationCategoryCodingOne record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBAdjudicationDiscriminator";
    r4:code code = "benefitpaymentstatus";
|};

# FHIR C4BBExplanationOfBenefitOralBasisAdjudicationCategoryCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisAdjudicationCategoryCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.adjudication.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.adjudication.category.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisAdjudicationCategoryCoding record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBAdjudicationDiscriminator";
    r4:code code = "billingnetworkstatus";
|};

# FHIR C4BBExplanationOfBenefitOralBasisIdentifierTypeCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisIdentifierTypeCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.identifier.type.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.identifier.type.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisIdentifierTypeCoding record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBIdentifierType";
    r4:code code = "uc";
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoPatientaccountnumber datatype record.
#
# + timingDate - The date when or period to which this information refers.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + sequence - A number to uniquely identify supporting information entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoPatientaccountnumber",
    baseType: (),
    elements: {
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },

        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },

        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryFour,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoPatientaccountnumber record {|
    *C4BBExplanationOfBenefitOralBasisSupportingInfo;

    r4:date timingDate?;
    r4:Coding reason?;
    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    string valueString?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryFour category;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingSeven datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingSeven",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingSeven record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "additionalbodysite";
|};

# C4BBExplanationOfBenefitOralBasisProcessNoteType enum
public enum C4BBExplanationOfBenefitOralBasisProcessNoteType {
    CODE_TYPE_PRINT = "print",
    CODE_TYPE_DISPLAY = "display",
    CODE_TYPE_PRINTOPER = "printoper"
}

# FHIR C4BBExplanationOfBenefitOralBasisType datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisType",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitOralBasisTypeCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.type.coding"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisType record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisTypeCoding[] coding;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingFour datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingFour",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingFour record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "patientaccountnumber";
|};

# FHIR C4BBExplanationOfBenefitOralBasisInsurance datatype record.
#
# + coverage - Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + focal - A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + preAuthRef - Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisInsurance",
    baseType: (),
    elements: {
        "coverage": {
            name: "coverage",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.",
            path: "ExplanationOfBenefit.insurance.coverage"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.insurance.extension"
        },

        "focal": {
            name: "focal",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.",
            path: "ExplanationOfBenefit.insurance.focal"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.insurance.modifierExtension"
        },

        "preAuthRef": {
            name: "preAuthRef",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.",
            path: "ExplanationOfBenefit.insurance.preAuthRef"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.insurance.id"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisInsurance record {|
    *r4:BackboneElement;

    r4:Reference coverage;
    r4:Extension[] extension?;
    boolean focal;
    r4:Extension[] modifierExtension?;
    string[] preAuthRef?;
    string id?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfo datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timingDate - The date when or period to which this information refers.
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfo",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },

        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },

        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },

        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },

        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        },

        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfo record {|
    *r4:BackboneElement;

    boolean valueBoolean?;
    r4:Coding reason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    r4:Reference valueReference?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    r4:date timingDate?;
    r4:positiveInt sequence;
    r4:Attachment valueAttachment?;
    string valueString?;
    string id?;
    r4:CodeableConcept category;
    r4:Quantity valueQuantity?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisRelated datatype record.
#
# + reference - An alternate organizational reference to the case or file to which this particular claim pertains.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + claim - Reference to a related claim.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + relationship - A code to convey how the claims are related.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisRelated",
    baseType: (),
    elements: {
        "reference": {
            name: "reference",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "An alternate organizational reference to the case or file to which this particular claim pertains.",
            path: "ExplanationOfBenefit.related.reference"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.related.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.related.modifierExtension"
        },

        "claim": {
            name: "claim",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reference to a related claim.",
            path: "ExplanationOfBenefit.related.claim"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.related.id"
        },

        "relationship": {
            name: "relationship",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to convey how the claims are related.",
            path: "ExplanationOfBenefit.related.relationship"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisRelated record {|
    *r4:BackboneElement;

    r4:Identifier reference;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:Reference claim?;
    string id?;
    r4:CodeableConcept relationship;
|};

# FHIR C4BBExplanationOfBenefitOralBasisDiagnosis datatype record.
#
# + sequence - A number to uniquely identify diagnosis entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + onAdmission - Indication of whether the diagnosis was present on admission to a facility.
# + packageCode - A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - When the condition was observed or the relative ranking.
# + diagnosisCodeableConcept - The nature of illness or problem in a coded form or as a reference to an external defined Condition.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisDiagnosis",
    baseType: (),
    elements: {
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify diagnosis entries.",
            path: "ExplanationOfBenefit.diagnosis.sequence"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.diagnosis.extension"
        },

        "onAdmission": {
            name: "onAdmission",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indication of whether the diagnosis was present on admission to a facility.",
            path: "ExplanationOfBenefit.diagnosis.onAdmission"
        },

        "packageCode": {
            name: "packageCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system.",
            path: "ExplanationOfBenefit.diagnosis.packageCode"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.diagnosis.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.diagnosis.id"
        },

        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: true,
            description: "When the condition was observed or the relative ranking.",
            path: "ExplanationOfBenefit.diagnosis.type"
        },

        "diagnosisCodeableConcept": {
            name: "diagnosisCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The nature of illness or problem in a coded form or as a reference to an external defined Condition.",
            path: "ExplanationOfBenefit.diagnosis.diagnosis[x]"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisDiagnosis record {|
    *r4:BackboneElement;

    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept onAdmission?;
    r4:CodeableConcept packageCode?;
    r4:Extension[] modifierExtension?;
    string id?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.diagnosis.type constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.diagnosis.type constraint. This field must be an array containing at most one item."
        }
    }
    r4:CodeableConcept[] 'type;
    r4:CodeableConcept diagnosisCodeableConcept?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisAdjudicationCategoryCodingTwo datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisAdjudicationCategoryCodingTwo",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.adjudication.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.adjudication.category.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisAdjudicationCategoryCodingTwo record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBAdjudicationDiscriminator";
    r4:code code = "renderingnetworkstatus";
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCoding record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "orthodontics";
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoCategorySeven datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoCategorySeven",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingSeven,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoCategorySeven record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingSeven[] coding;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryTwo datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryTwo",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingTwo,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryTwo record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingTwo[] coding;
|};

# FHIR C4BBExplanationOfBenefitOralBasisPayment datatype record.
#
# + date - Estimated date the payment will be issued or the actual issue date of payment.
# + identifier - Issuer's unique identifier for the payment instrument.
# + adjustmentReason - Reason for the payment adjustment.
# + amount - Benefits payable less any payment adjustment.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + adjustment - Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Whether this represents partial or complete payment of the benefits payable.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisPayment",
    baseType: (),
    elements: {
        "date": {
            name: "date",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Estimated date the payment will be issued or the actual issue date of payment.",
            path: "ExplanationOfBenefit.payment.date"
        },

        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "Issuer's unique identifier for the payment instrument.",
            path: "ExplanationOfBenefit.payment.identifier"
        },

        "adjustmentReason": {
            name: "adjustmentReason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reason for the payment adjustment.",
            path: "ExplanationOfBenefit.payment.adjustmentReason"
        },

        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Benefits payable less any payment adjustment.",
            path: "ExplanationOfBenefit.payment.amount"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.payment.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.payment.modifierExtension"
        },

        "adjustment": {
            name: "adjustment",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication.",
            path: "ExplanationOfBenefit.payment.adjustment"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.payment.id"
        },

        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Whether this represents partial or complete payment of the benefits payable.",
            path: "ExplanationOfBenefit.payment.type"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisPayment record {|
    *r4:BackboneElement;

    r4:date date?;
    r4:Identifier identifier?;
    r4:CodeableConcept adjustmentReason?;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:Money adjustment?;
    string id?;
    r4:CodeableConcept 'type?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisAddItemDetail datatype record.
#
# + adjudication - The adjudication results.
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of repetitions of a service or product.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + subDetail - The third-tier service adjudications for payor added services.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisAddItemDetail",
    baseType: (),
    elements: {
        "adjudication": {
            name: "adjudication",
            dataType: international401:ExplanationOfBenefitItemAdjudication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The adjudication results.",
            path: "ExplanationOfBenefit.addItem.detail.adjudication"
        },

        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.addItem.detail.unitPrice"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.addItem.detail.extension"
        },

        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.addItem.detail.quantity"
        },

        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.addItem.detail.modifier"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.addItem.detail.modifierExtension"
        },

        "subDetail": {
            name: "subDetail",
            dataType: C4BBExplanationOfBenefitOralBasisAddItemDetailSubDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The third-tier service adjudications for payor added services.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.addItem.detail.id"
        },

        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "ExplanationOfBenefit.addItem.detail.productOrService"
        },

        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.addItem.detail.factor"
        },

        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "ExplanationOfBenefit.addItem.detail.net"
        },

        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.addItem.detail.noteNumber"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisAddItemDetail record {|
    *r4:BackboneElement;

    international401:ExplanationOfBenefitItemAdjudication[] adjudication?;
    r4:Money unitPrice?;
    r4:Extension[] extension?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    C4BBExplanationOfBenefitOralBasisAddItemDetailSubDetail[] subDetail?;
    string id?;
    r4:CodeableConcept productOrService;
    decimal factor?;
    r4:Money net?;
    r4:positiveInt[] noteNumber?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryCodingTwo datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryCodingTwo",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.item.adjudication.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.item.adjudication.category.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryCodingTwo record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBAdjudicationDiscriminator";
    r4:code code = "allowedunits";
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingFive datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingFive",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingFive record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "prosthesis";
|};

# FHIR C4BBExplanationOfBenefitOralBasisAccident datatype record.
#
# + date - Date of an accident event related to the products and services contained in the claim.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + locationAddress - The physical location of the accident event.
# + locationReference - The physical location of the accident event.
# + 'type - The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisAccident",
    baseType: (),
    elements: {
        "date": {
            name: "date",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Date of an accident event related to the products and services contained in the claim.",
            path: "ExplanationOfBenefit.accident.date"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.accident.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.accident.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.accident.id"
        },

        "locationAddress": {
            name: "locationAddress",
            dataType: r4:Address,
            min: 0,
            max: 1,
            isArray: false,
            description: "The physical location of the accident event.",
            path: "ExplanationOfBenefit.accident.location[x]"
        },

        "locationReference": {
            name: "locationReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The physical location of the accident event.",
            path: "ExplanationOfBenefit.accident.location[x]"
        },

        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers.",
            path: "ExplanationOfBenefit.accident.type"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisAccident record {|
    *r4:BackboneElement;

    r4:date date?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:Address locationAddress?;
    r4:Reference locationReference?;
    r4:CodeableConcept 'type?;
|};

# C4BBExplanationOfBenefitOralBasisIdentifierUseOne enum
public enum C4BBExplanationOfBenefitOralBasisIdentifierUseOne {
    CODE_USE_SECONDARY = "secondary",
    CODE_USE_TEMP = "temp",
    CODE_USE_USUAL = "usual",
    CODE_USE_OLD = "old",
    CODE_USE_OFFICIAL = "official"
}

# FHIR C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryTwo datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryTwo",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryCodingTwo,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.item.adjudication.category.coding"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryTwo record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.item.adjudication.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.item.adjudication.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryCodingTwo[] coding;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoOrthodontics datatype record.
#
# + timingDate - The date when or period to which this information refers.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + sequence - A number to uniquely identify supporting information entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoOrthodontics",
    baseType: (),
    elements: {
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },

        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },

        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },

        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfoCategory,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        },

        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoOrthodontics record {|
    *C4BBExplanationOfBenefitOralBasisSupportingInfo;

    r4:date timingDate?;
    r4:Coding reason?;
    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitOralBasisSupportingInfoCategory category;
    r4:Quantity valueQuantity?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisAdjudicationCategoryTwo datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisAdjudicationCategoryTwo",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitOralBasisAdjudicationCategoryCodingTwo,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.adjudication.category.coding"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisAdjudicationCategoryTwo record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.adjudication.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.adjudication.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisAdjudicationCategoryCodingTwo[] coding;
|};

# FHIR C4BBExplanationOfBenefitOralBasisItemAdjudicationCategory datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisItemAdjudicationCategory",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.item.adjudication.category.coding"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisItemAdjudicationCategory record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.item.adjudication.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.item.adjudication.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryCoding[] coding;
|};

# C4BBExplanationOfBenefitOralBasisIdentifierUse enum
public enum C4BBExplanationOfBenefitOralBasisIdentifierUse {
    CODE_USE_SECONDARY = "secondary",
    CODE_USE_TEMP = "temp",
    CODE_USE_USUAL = "usual",
    CODE_USE_OLD = "old",
    CODE_USE_OFFICIAL = "official"
}

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryOne datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryOne",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingOne,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryOne record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingOne[] coding;
|};

# FHIR C4BBExplanationOfBenefitOralBasisTotal datatype record.
#
# + amount - Monetary total amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisTotal",
    baseType: (),
    elements: {
        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 1,
            max: 1,
            isArray: false,
            description: "Monetary total amount associated with the category.",
            path: "ExplanationOfBenefit.total.amount"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.total.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.total.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.total.id"
        },

        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.total.category"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisTotal record {|
    *r4:BackboneElement;

    r4:Money amount;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept category;
|};

# FHIR C4BBExplanationOfBenefitOralBasisItemDetail datatype record.
#
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of repetitions of a service or product.
# + programCode - Identifies the program under which this may be recovered.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + subDetail - Third-tier of goods and services.
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + adjudication - The adjudication results.
# + sequence - A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + udi - Unique Device Identifiers associated with this line item.
# + category - Code to identify the general type of benefits under which products and services are provided.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisItemDetail",
    baseType: (),
    elements: {
        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.item.detail.unitPrice"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.detail.extension"
        },

        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.item.detail.quantity"
        },

        "programCode": {
            name: "programCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "ExplanationOfBenefit.item.detail.programCode"
        },

        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.item.detail.modifier"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.detail.modifierExtension"
        },

        "subDetail": {
            name: "subDetail",
            dataType: C4BBExplanationOfBenefitOralBasisItemDetailSubDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Third-tier of goods and services.",
            path: "ExplanationOfBenefit.item.detail.subDetail"
        },

        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "ExplanationOfBenefit.item.detail.productOrService"
        },

        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.item.detail.noteNumber"
        },

        "adjudication": {
            name: "adjudication",
            dataType: international401:ExplanationOfBenefitItemAdjudication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The adjudication results.",
            path: "ExplanationOfBenefit.item.detail.adjudication"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
            path: "ExplanationOfBenefit.item.detail.sequence"
        },

        "revenue": {
            name: "revenue",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "ExplanationOfBenefit.item.detail.revenue"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.detail.id"
        },

        "udi": {
            name: "udi",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Unique Device Identifiers associated with this line item.",
            path: "ExplanationOfBenefit.item.detail.udi"
        },

        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Code to identify the general type of benefits under which products and services are provided.",
            path: "ExplanationOfBenefit.item.detail.category"
        },

        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.item.detail.factor"
        },

        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "ExplanationOfBenefit.item.detail.net"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisItemDetail record {|
    *r4:BackboneElement;

    r4:Money unitPrice?;
    r4:Extension[] extension?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] programCode?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    C4BBExplanationOfBenefitOralBasisItemDetailSubDetail[] subDetail?;
    r4:CodeableConcept productOrService;
    r4:positiveInt[] noteNumber?;
    international401:ExplanationOfBenefitItemAdjudication[] adjudication?;
    r4:positiveInt sequence;
    r4:CodeableConcept revenue?;
    string id?;
    r4:Reference[] udi?;
    r4:CodeableConcept category?;
    decimal factor?;
    r4:Money net?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisAdjudication datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisAdjudication",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.adjudication.reason"
        },

        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.adjudication.amount"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.adjudication.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.adjudication.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.adjudication.id"
        },

        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.adjudication.category"
        },

        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.adjudication.value"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisAdjudication record {|
    *r4:BackboneElement;

    r4:CodeableConcept reason?;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept category;
    decimal value?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryCodingOne datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryCodingOne",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.item.adjudication.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.item.adjudication.category.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryCodingOne record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBAdjudicationDiscriminator";
    r4:code code = "benefitpaymentstatus";
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoCategorySix datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoCategorySix",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingSix,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoCategorySix record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingSix[] coding;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoClmrecvddate datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timingDate - The date when or period to which this information refers.
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoClmrecvddate",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },

        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },

        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },

        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },

        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryThree,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        },

        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoClmrecvddate record {|
    *C4BBExplanationOfBenefitOralBasisSupportingInfo;

    boolean valueBoolean?;
    r4:Coding reason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    r4:Reference valueReference?;
    r4:Extension[] modifierExtension?;
    r4:date timingDate?;
    r4:positiveInt sequence;
    r4:Attachment valueAttachment?;
    string valueString?;
    string id?;
    C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryThree category;
    r4:Quantity valueQuantity?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoCategory datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoCategory",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoCategory record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCoding[] coding;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryFive datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryFive",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingFive,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryFive record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingFive[] coding;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryThree datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryThree",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingThree,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryThree record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingThree[] coding;
|};

# FHIR C4BBExplanationOfBenefitOralBasisItemDetailSubDetail datatype record.
#
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of repetitions of a service or product.
# + programCode - Identifies the program under which this may be recovered.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + adjudication - The adjudication results.
# + sequence - A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + udi - Unique Device Identifiers associated with this line item.
# + category - Code to identify the general type of benefits under which products and services are provided.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisItemDetailSubDetail",
    baseType: (),
    elements: {
        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.item.detail.subDetail.unitPrice"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.detail.subDetail.extension"
        },

        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.item.detail.subDetail.quantity"
        },

        "programCode": {
            name: "programCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "ExplanationOfBenefit.item.detail.subDetail.programCode"
        },

        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.item.detail.subDetail.modifier"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.detail.subDetail.modifierExtension"
        },

        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "ExplanationOfBenefit.item.detail.subDetail.productOrService"
        },

        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.item.detail.subDetail.noteNumber"
        },

        "adjudication": {
            name: "adjudication",
            dataType: international401:ExplanationOfBenefitItemAdjudication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The adjudication results.",
            path: "ExplanationOfBenefit.item.detail.subDetail.adjudication"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
            path: "ExplanationOfBenefit.item.detail.subDetail.sequence"
        },

        "revenue": {
            name: "revenue",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "ExplanationOfBenefit.item.detail.subDetail.revenue"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.detail.subDetail.id"
        },

        "udi": {
            name: "udi",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Unique Device Identifiers associated with this line item.",
            path: "ExplanationOfBenefit.item.detail.subDetail.udi"
        },

        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Code to identify the general type of benefits under which products and services are provided.",
            path: "ExplanationOfBenefit.item.detail.subDetail.category"
        },

        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.item.detail.subDetail.factor"
        },

        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "ExplanationOfBenefit.item.detail.subDetail.net"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisItemDetailSubDetail record {|
    *r4:BackboneElement;

    r4:Money unitPrice?;
    r4:Extension[] extension?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] programCode?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept productOrService;
    r4:positiveInt[] noteNumber?;
    international401:ExplanationOfBenefitItemAdjudication[] adjudication?;
    r4:positiveInt sequence;
    r4:CodeableConcept revenue?;
    string id?;
    r4:Reference[] udi?;
    r4:CodeableConcept category?;
    decimal factor?;
    r4:Money net?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryOne datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryOne",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryCodingOne,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.item.adjudication.category.coding"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryOne record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.item.adjudication.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.item.adjudication.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryCodingOne[] coding;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoProsthesis datatype record.
#
# + timingDate - The date when or period to which this information refers.
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + sequence - A number to uniquely identify supporting information entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoProsthesis",
    baseType: (),
    elements: {
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },

        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },

        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },

        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryFive,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoProsthesis record {|
    *C4BBExplanationOfBenefitOralBasisSupportingInfo;

    r4:date timingDate?;
    boolean valueBoolean?;
    r4:Coding reason?;
    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryFive category;
|};

# FHIR C4BBExplanationOfBenefitOralBasisProcessNote datatype record.
#
# + number - A number to uniquely identify a note entry.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - A code to define the language used in the text of the note.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - The explanation or description associated with the processing.
# + 'type - The business purpose of the note text.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisProcessNote",
    baseType: (),
    elements: {
        "number": {
            name: "number",
            dataType: r4:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify a note entry.",
            path: "ExplanationOfBenefit.processNote.number"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.processNote.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.processNote.modifierExtension"
        },

        "language": {
            name: "language",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code to define the language used in the text of the note.",
            path: "ExplanationOfBenefit.processNote.language"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.processNote.id"
        },

        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The explanation or description associated with the processing.",
            path: "ExplanationOfBenefit.processNote.text"
        },

        "type": {
            name: "type",
            dataType: C4BBExplanationOfBenefitOralBasisProcessNoteType,
            min: 0,
            max: 1,
            isArray: false,
            description: "The business purpose of the note text.",
            path: "ExplanationOfBenefit.processNote.type"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisProcessNote record {|
    *r4:BackboneElement;

    r4:positiveInt number?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept language?;
    string id?;
    string text?;
    C4BBExplanationOfBenefitOralBasisProcessNoteType 'type?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoMedicalrecordnumber datatype record.
#
# + timingDate - The date when or period to which this information refers.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + sequence - A number to uniquely identify supporting information entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoMedicalrecordnumber",
    baseType: (),
    elements: {
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },

        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },

        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryOne,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoMedicalrecordnumber record {|
    *C4BBExplanationOfBenefitOralBasisSupportingInfo;

    r4:date timingDate?;
    r4:Coding reason?;
    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    string valueString?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryOne category;
|};

# FHIR C4BBExplanationOfBenefitOralBasisAdjudicationBillingnetworkstatus datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisAdjudicationBillingnetworkstatus",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.adjudication.reason"
        },

        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.adjudication.amount"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.adjudication.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.adjudication.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.adjudication.id"
        },

        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitOralBasisAdjudicationCategory,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.adjudication.category"
        },

        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.adjudication.value"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisAdjudicationBillingnetworkstatus record {|
    *C4BBExplanationOfBenefitOralBasisAdjudication;

    r4:CodeableConcept reason;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitOralBasisAdjudicationCategory category;
    decimal value?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryFour datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryFour",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingFour,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryFour record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingFour[] coding;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingTwo datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingTwo",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingTwo record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "servicefacility";
|};

# FHIR C4BBExplanationOfBenefitOralBasisIdentifierUniqueclaimid datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Time period during which identifier is/was valid for use.
# + system - Establishes the namespace for the value - that is, a URL that describes a set values that are unique.
# + use - The purpose of this identifier.
# + assigner - Organization that issued/manages the identifier.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.
# + value - The portion of the identifier typically relevant to the user and which is unique within the context of the system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisIdentifierUniqueclaimid",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.identifier.extension"
        },

        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "ExplanationOfBenefit.identifier.period"
        },

        "system": {
            name: "system",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "ExplanationOfBenefit.identifier.system"
        },

        "use": {
            name: "use",
            dataType: C4BBExplanationOfBenefitOralBasisIdentifierUseOne,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "ExplanationOfBenefit.identifier.use"
        },

        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "ExplanationOfBenefit.identifier.assigner"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.identifier.id"
        },

        "type": {
            name: "type",
            dataType: C4BBExplanationOfBenefitOralBasisIdentifierType,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "ExplanationOfBenefit.identifier.type"
        },

        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "ExplanationOfBenefit.identifier.value"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisIdentifierUniqueclaimid record {|
    *r4:Identifier;

    r4:Extension[] extension?;
    r4:Period period?;
    r4:uri system?;
    C4BBExplanationOfBenefitOralBasisIdentifierUseOne use?;
    r4:Reference assigner?;
    string id?;
    C4BBExplanationOfBenefitOralBasisIdentifierType 'type;
    string value;
|};

# FHIR C4BBExplanationOfBenefitOralBasisAdjudicationCategory datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisAdjudicationCategory",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitOralBasisAdjudicationCategoryCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.adjudication.category.coding"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisAdjudicationCategory record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.adjudication.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.adjudication.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisAdjudicationCategoryCoding[] coding;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoMissingtoothnumber datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timingDate - The date when or period to which this information refers.
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoMissingtoothnumber",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },

        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },

        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },

        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },

        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitOralBasisSupportingInfoCategorySix,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        },

        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoMissingtoothnumber record {|
    *C4BBExplanationOfBenefitOralBasisSupportingInfo;

    boolean valueBoolean?;
    r4:Coding reason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code;
    r4:Reference valueReference?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    r4:date timingDate?;
    r4:positiveInt sequence;
    r4:Attachment valueAttachment?;
    string valueString?;
    string id?;
    C4BBExplanationOfBenefitOralBasisSupportingInfoCategorySix category;
    r4:Quantity valueQuantity?;
|};

# C4BBExplanationOfBenefitOralBasisOutcome enum
public enum C4BBExplanationOfBenefitOralBasisOutcome {
    CODE_OUTCOME_QUEUED = "queued",
    CODE_OUTCOME_COMPLETE = "complete",
    CODE_OUTCOME_ERROR = "error",
    CODE_OUTCOME_PARTIAL = "partial"
}

# FHIR C4BBExplanationOfBenefitOralBasisProcedure datatype record.
#
# + date - Date and optionally time the procedure was performed.
# + sequence - A number to uniquely identify procedure entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + procedureCodeableConcept - The code or reference to a Procedure resource which identifies the clinical intervention performed.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + procedureReference - The code or reference to a Procedure resource which identifies the clinical intervention performed.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + udi - Unique Device Identifiers associated with this line item.
# + 'type - When the condition was observed or the relative ranking.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisProcedure",
    baseType: (),
    elements: {
        "date": {
            name: "date",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "Date and optionally time the procedure was performed.",
            path: "ExplanationOfBenefit.procedure.date"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify procedure entries.",
            path: "ExplanationOfBenefit.procedure.sequence"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.procedure.extension"
        },

        "procedureCodeableConcept": {
            name: "procedureCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The code or reference to a Procedure resource which identifies the clinical intervention performed.",
            path: "ExplanationOfBenefit.procedure.procedure[x]"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.procedure.modifierExtension"
        },

        "procedureReference": {
            name: "procedureReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The code or reference to a Procedure resource which identifies the clinical intervention performed.",
            path: "ExplanationOfBenefit.procedure.procedure[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.procedure.id"
        },

        "udi": {
            name: "udi",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Unique Device Identifiers associated with this line item.",
            path: "ExplanationOfBenefit.procedure.udi"
        },

        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "When the condition was observed or the relative ranking.",
            path: "ExplanationOfBenefit.procedure.type"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisProcedure record {|
    *r4:BackboneElement;

    r4:dateTime date?;
    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept procedureCodeableConcept?;
    r4:Extension[] modifierExtension?;
    r4:Reference procedureReference?;
    string id?;
    r4:Reference[] udi?;
    r4:CodeableConcept[] 'type?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisIdentifierType datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisIdentifierType",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitOralBasisIdentifierTypeCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.identifier.type.coding"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisIdentifierType record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.identifier.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.identifier.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisIdentifierTypeCoding[] coding;
|};

# FHIR C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.item.adjudication.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.item.adjudication.category.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryCoding record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBAdjudicationDiscriminator";
    r4:code code = "adjustmentreason";
|};

# C4BBExplanationOfBenefitOralBasisUse enum
public enum C4BBExplanationOfBenefitOralBasisUse {
    CODE_USE_PREDETERMINATION = "predetermination",
    CODE_USE_PREAUTHORIZATION = "preauthorization",
    CODE_USE_CLAIM = "claim"
}

# FHIR C4BBExplanationOfBenefitOralBasisAdjudicationRenderingnetworkstatus datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisAdjudicationRenderingnetworkstatus",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.adjudication.reason"
        },

        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.adjudication.amount"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.adjudication.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.adjudication.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.adjudication.id"
        },

        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitOralBasisAdjudicationCategoryTwo,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.adjudication.category"
        },

        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.adjudication.value"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisAdjudicationRenderingnetworkstatus record {|
    *C4BBExplanationOfBenefitOralBasisAdjudication;

    r4:CodeableConcept reason;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitOralBasisAdjudicationCategoryTwo category;
    decimal value?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisItemAdjudicationAllowedunits datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisItemAdjudicationAllowedunits",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.item.adjudication.reason"
        },

        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.item.adjudication.amount"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.adjudication.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.adjudication.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.adjudication.id"
        },

        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryTwo,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.item.adjudication.category"
        },

        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.item.adjudication.value"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisItemAdjudicationAllowedunits record {|
    *C4BBExplanationOfBenefitOralBasisItemAdjudication;

    r4:CodeableConcept reason?;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryTwo category;
    decimal value?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisAdjudicationCategoryOne datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisAdjudicationCategoryOne",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitOralBasisAdjudicationCategoryCodingOne,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.adjudication.category.coding"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisAdjudicationCategoryOne record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.adjudication.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.adjudication.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitOralBasisAdjudicationCategoryCodingOne[] coding;
|};

# C4BBExplanationOfBenefitOralBasisStatus enum
public enum C4BBExplanationOfBenefitOralBasisStatus {
    CODE_STATUS_DRAFT = "draft",
    CODE_STATUS_ACTIVE = "active",
    CODE_STATUS_CANCELLED = "cancelled",
    CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error"
}

# FHIR C4BBExplanationOfBenefitOralBasisBenefitBalance datatype record.
#
# + excluded - True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + unit - Indicates if the benefits apply to an individual or to the family.
# + financial - Benefits Used to date.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + name - A short name or tag for the benefit.
# + description - A richer description of the benefit or services covered.
# + term - The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual visits'.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - Code to identify the general type of benefits under which products and services are provided.
# + network - Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisBenefitBalance",
    baseType: (),
    elements: {
        "excluded": {
            name: "excluded",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.",
            path: "ExplanationOfBenefit.benefitBalance.excluded"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.benefitBalance.extension"
        },

        "unit": {
            name: "unit",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates if the benefits apply to an individual or to the family.",
            path: "ExplanationOfBenefit.benefitBalance.unit"
        },

        "financial": {
            name: "financial",
            dataType: C4BBExplanationOfBenefitOralBasisBenefitBalanceFinancial,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Benefits Used to date.",
            path: "ExplanationOfBenefit.benefitBalance.financial"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.benefitBalance.modifierExtension"
        },

        "name": {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A short name or tag for the benefit.",
            path: "ExplanationOfBenefit.benefitBalance.name"
        },

        "description": {
            name: "description",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A richer description of the benefit or services covered.",
            path: "ExplanationOfBenefit.benefitBalance.description"
        },

        "term": {
            name: "term",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual visits'.",
            path: "ExplanationOfBenefit.benefitBalance.term"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.benefitBalance.id"
        },

        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Code to identify the general type of benefits under which products and services are provided.",
            path: "ExplanationOfBenefit.benefitBalance.category"
        },

        "network": {
            name: "network",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers.",
            path: "ExplanationOfBenefit.benefitBalance.network"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisBenefitBalance record {|
    *r4:BackboneElement;

    boolean excluded?;
    r4:Extension[] extension?;
    r4:CodeableConcept unit?;
    C4BBExplanationOfBenefitOralBasisBenefitBalanceFinancial[] financial?;
    r4:Extension[] modifierExtension?;
    string name?;
    string description?;
    r4:CodeableConcept term?;
    string id?;
    r4:CodeableConcept category;
    r4:CodeableConcept network?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisItemAdjudicationBenefitpaymentstatus datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisItemAdjudicationBenefitpaymentstatus",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.item.adjudication.reason"
        },

        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.item.adjudication.amount"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.adjudication.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.adjudication.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.adjudication.id"
        },

        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryOne,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.item.adjudication.category"
        },

        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.item.adjudication.value"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisItemAdjudicationBenefitpaymentstatus record {|
    *C4BBExplanationOfBenefitOralBasisItemAdjudication;

    r4:CodeableConcept reason;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitOralBasisItemAdjudicationCategoryOne category;
    decimal value?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisAddItem datatype record.
#
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of repetitions of a service or product.
# + programCode - Identifies the program under which this may be recovered.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + locationAddress - Where the product or service was provided.
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + servicedPeriod - The date or dates when the service or product was supplied, performed or completed.
# + adjudication - The adjudication results.
# + subDetailSequence - The sequence number of the sub-details woithin the details within the claim item which this line is intended to replace.
# + itemSequence - Claim items which this service line is intended to replace.
# + bodySite - Physical service site on the patient (limb, tooth, etc.).
# + locationCodeableConcept - Where the product or service was provided.
# + provider - The providers who are authorized for the services rendered to the patient.
# + detailSequence - The sequence number of the details within the claim item which this line is intended to replace.
# + subSite - A region or surface of the bodySite, e.g. limb region or tooth surface(s).
# + detail - The second-tier service adjudications for payor added services.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + locationReference - Where the product or service was provided.
# + servicedDate - The date or dates when the service or product was supplied, performed or completed.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisAddItem",
    baseType: (),
    elements: {
        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.addItem.unitPrice"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.addItem.extension"
        },

        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.addItem.quantity"
        },

        "programCode": {
            name: "programCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "ExplanationOfBenefit.addItem.programCode"
        },

        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.addItem.modifier"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.addItem.modifierExtension"
        },

        "locationAddress": {
            name: "locationAddress",
            dataType: r4:Address,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ExplanationOfBenefit.addItem.location[x]"
        },

        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "ExplanationOfBenefit.addItem.productOrService"
        },

        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.addItem.noteNumber"
        },

        "servicedPeriod": {
            name: "servicedPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "ExplanationOfBenefit.addItem.serviced[x]"
        },

        "adjudication": {
            name: "adjudication",
            dataType: international401:ExplanationOfBenefitItemAdjudication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The adjudication results.",
            path: "ExplanationOfBenefit.addItem.adjudication"
        },

        "subDetailSequence": {
            name: "subDetailSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The sequence number of the sub-details woithin the details within the claim item which this line is intended to replace.",
            path: "ExplanationOfBenefit.addItem.subDetailSequence"
        },

        "itemSequence": {
            name: "itemSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Claim items which this service line is intended to replace.",
            path: "ExplanationOfBenefit.addItem.itemSequence"
        },

        "bodySite": {
            name: "bodySite",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Physical service site on the patient (limb, tooth, etc.).",
            path: "ExplanationOfBenefit.addItem.bodySite"
        },

        "locationCodeableConcept": {
            name: "locationCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ExplanationOfBenefit.addItem.location[x]"
        },

        "provider": {
            name: "provider",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The providers who are authorized for the services rendered to the patient.",
            path: "ExplanationOfBenefit.addItem.provider"
        },

        "detailSequence": {
            name: "detailSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The sequence number of the details within the claim item which this line is intended to replace.",
            path: "ExplanationOfBenefit.addItem.detailSequence"
        },

        "subSite": {
            name: "subSite",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
            path: "ExplanationOfBenefit.addItem.subSite"
        },

        "detail": {
            name: "detail",
            dataType: C4BBExplanationOfBenefitOralBasisAddItemDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The second-tier service adjudications for payor added services.",
            path: "ExplanationOfBenefit.addItem.detail"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.addItem.id"
        },

        "locationReference": {
            name: "locationReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ExplanationOfBenefit.addItem.location[x]"
        },

        "servicedDate": {
            name: "servicedDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "ExplanationOfBenefit.addItem.serviced[x]"
        },

        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.addItem.factor"
        },

        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "ExplanationOfBenefit.addItem.net"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisAddItem record {|
    *r4:BackboneElement;

    r4:Money unitPrice?;
    r4:Extension[] extension?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] programCode?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    r4:Address locationAddress?;
    r4:CodeableConcept productOrService;
    r4:positiveInt[] noteNumber?;
    r4:Period servicedPeriod?;
    international401:ExplanationOfBenefitItemAdjudication[] adjudication?;
    r4:positiveInt[] subDetailSequence?;
    r4:positiveInt[] itemSequence?;
    r4:CodeableConcept bodySite?;
    r4:CodeableConcept locationCodeableConcept?;
    r4:Reference[] provider?;
    r4:positiveInt[] detailSequence?;
    r4:CodeableConcept[] subSite?;
    C4BBExplanationOfBenefitOralBasisAddItemDetail[] detail?;
    string id?;
    r4:Reference locationReference?;
    r4:date servicedDate?;
    decimal factor?;
    r4:Money net?;
|};

# FHIR C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingThree datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingThree",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type C4BBExplanationOfBenefitOralBasisSupportingInfoCategoryCodingThree record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "clmrecvddate";
|};

