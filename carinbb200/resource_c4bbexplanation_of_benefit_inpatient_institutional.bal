// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//
// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r4;
import ballerinax/health.fhir.r4.international401;

public const string PROFILE_BASE_C4BBEXPLANATIONOFBENEFITINPATIENTINSTITUTIONAL = "http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-ExplanationOfBenefit-Inpatient-Institutional";
public const RESOURCE_NAME_C4BBEXPLANATIONOFBENEFITINPATIENTINSTITUTIONAL = "ExplanationOfBenefit";

# FHIR C4BBExplanationOfBenefitInpatientInstitutional resource record.
#
# + resourceType - The type of the resource describes
# + benefitPeriod - The term of the benefits documented in this response.
# + insurance - Financial instruments for reimbursement for the health care products and services specified on the claim.
# + claimResponse - The business identifier for the instance of the adjudication response: claim, predetermination or preauthorization response.
# + use - A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non-binding adjudication of the listed products and services which could be provided in the future.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + preAuthRef - Reference from the Insurer which is used in later communications which refers to this adjudication.
# + language - The base language in which the resource is written.
# + 'type - The category of claim, e.g. oral, pharmacy, vision, institutional, professional.
# + precedence - This indicates the relative order of a series of EOBs related to different coverages for the same suite of services.
# + processNote - A note that describes or explains adjudication results in a human readable form.
# + payee - The party to be reimbursed for cost of the products and services according to the terms of the policy.
# + supportingInfo - Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues.
# * supportingInfo Slicings
# 1) C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoMedicalrecordnumber: Medical record number
#       - min = 0
#       - max = 1
#
# 2) C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoClmrecvddate: Claim received date
#       - min = 0
#       - max = 1
#
# 3) C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoDrg: Diagnosis Related Group
#       - min = 0
#       - max = 1
#
# 4) C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoPatientaccountnumber: Patient account number
#       - min = 0
#       - max = 1
#
# 5) C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoAdmissionperiod: Admission Period
#       - min = 1
#       - max = 1
#
# 6) C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoDischarge_status: Discharge status
#       - min = 0
#       - max = 1
#
# 7) C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoTypeofbill: Type of bill
#       - min = 0
#       - max = 1
#
# 8) C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoPointoforigin: Point of origin for admission
#       - min = 0
#       - max = 1
#
# 9) C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoAdmtype: Admission type
#       - min = 0
#       - max = 1
#
# + claim - The business identifier for the instance of the adjudication request: claim predetermination or preauthorization.
# + enterer - Individual who created the claim, predetermination or preauthorization.
# + payment - Payment details for the adjudication of the claim.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + careTeam - The members of the team who provided the products and services.
# + identifier - A unique identifier assigned to this explanation of benefit.
# * identifier Slicings
# 1) C4BBExplanationOfBenefitInpatientInstitutionalIdentifierUniqueclaimid: Unique Claim Identifier
#       - min = 1
#       - max = 1
#
# + item - A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details.
# + created - The date this resource was created.
# + diagnosis - Information about diagnoses relevant to the claim items.
# + priority - The provider-required urgency of processing the request. Typical values include: stat, routine deferred.
# + preAuthRefPeriod - The timeframe during which the supplied preauthorization reference may be quoted on claims to obtain the adjudication as provided.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + billablePeriod - The period for which charges are being submitted.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + subType - A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.
# + status - The status of the resource instance.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + benefitBalance - Balance by Benefit Category.
# + accident - Details of a accident which resulted in injuries which required the products and services listed in the claim.
# + adjudication - The adjudication results which are presented at the header level rather than at the line-item or add-item levels.
# * adjudication Slicings
# 1) C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationBillingnetworkstatus: Billing provider network status
#       - min = 0
#       - max = 1
#
# 2) C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationBenefitpaymentstatus: Indicates the in network or out of network payment status of the claim. (142)
#       - min = 1
#       - max = 1
#
# 3) C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationAdjustmentreason: Reason codes used to interpret the Non-Covered Amount (92)
#       - min = 0
#       - max = *
#
# + addItem - The first-tier service adjudications for payor added product or service lines.
# + total - Categorized monetary totals for the adjudication.
# * total Slicings
# 1) C4BBExplanationOfBenefitInpatientInstitutionalTotalAdjudicationamounttype: Total adjudication type and amount
#       - min = 1
#       - max = *
#
# + related - Other claims which are related to this claim such as prior submissions or claims for related services or for the same event.
# + fundsReserve - A code, used only on a response to a preauthorization, to indicate whether the benefits payable have been reserved and for whom.
# + fundsReserveRequested - A code to indicate whether and for whom funds are to be reserved for future claims.
# + provider - The provider which is responsible for the claim, predetermination or preauthorization.
# + insurer - The party responsible for authorization, adjudication and reimbursement.
# + patient - The party to whom the professional services and/or products have been supplied or are being considered and for whom actual for forecast reimbursement is sought.
# + outcome - The outcome of the claim, predetermination, or preauthorization processing.
# + formCode - A code for the form to be used for printing the content.
# + originalPrescription - Original prescription which has been superseded by this prescription to support the dispensing of pharmacy services, medications or products.
# + procedure - Procedures performed on the patient relevant to the billing items with the claim.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + disposition - A human readable description of the status of the adjudication.
# + referral - A reference to a referral resource.
# + form - The actual form, by reference or inclusion, for printing the content or an EOB.
# + prescription - Prescription to support the dispensing of pharmacy, device or vision products.
# + facility - Facility where the services were provided.
@r4:ResourceDefinition {
    resourceType: "ExplanationOfBenefit",
    baseType: r4:DomainResource,
    profile: "http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-ExplanationOfBenefit-Inpatient-Institutional",
    elements: {
        "benefitPeriod" : {
            name: "benefitPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.benefitPeriod"
        },
        "insurance" : {
            name: "insurance",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalInsurance,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.insurance"
        },
        "claimResponse" : {
            name: "claimResponse",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.claimResponse"
        },
        "use" : {
            name: "use",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalUse,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.use",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-use|4.0.1"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.modifierExtension"
        },
        "preAuthRef" : {
            name: "preAuthRef",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.preAuthRef"
        },
        "language" : {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "type" : {
            name: "type",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalType,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.type",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-type"
        },
        "precedence" : {
            name: "precedence",
            dataType: r4:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.precedence"
        },
        "processNote" : {
            name: "processNote",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalProcessNote,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.processNote"
        },
        "payee" : {
            name: "payee",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalPayee,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.payee"
        },
        "supportingInfo" : {
            name: "supportingInfo",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfo,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.supportingInfo"
        },
        "claim" : {
            name: "claim",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.claim"
        },
        "enterer" : {
            name: "enterer",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.enterer"
        },
        "payment" : {
            name: "payment",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalPayment,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.payment"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.id"
        },
        "text" : {
            name: "text",
            dataType: r4:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.text"
        },
        "careTeam" : {
            name: "careTeam",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalCareTeam,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.careTeam"
        },
        "identifier" : {
            name: "identifier",
            dataType: r4:Identifier,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.identifier"
        },
        "item" : {
            name: "item",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalItem,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.item"
        },
        "created" : {
            name: "created",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.created"
        },
        "diagnosis" : {
            name: "diagnosis",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalDiagnosis,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.diagnosis"
        },
        "priority" : {
            name: "priority",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.priority",
            valueSet: "http://hl7.org/fhir/ValueSet/process-priority"
        },
        "preAuthRefPeriod" : {
            name: "preAuthRefPeriod",
            dataType: r4:Period,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.preAuthRefPeriod"
        },
        "meta" : {
            name: "meta",
            dataType: r4:Meta,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.meta"
        },
        "billablePeriod" : {
            name: "billablePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.billablePeriod"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.implicitRules"
        },
        "subType" : {
            name: "subType",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSubType,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.subType",
            valueSet: "http://hl7.org/fhir/us/carin-bb/ValueSet/C4BBInstitutionalClaimSubType"
        },
        "status" : {
            name: "status",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.status",
            valueSet: "http://hl7.org/fhir/ValueSet/explanationofbenefit-status|4.0.1"
        },
        "extension" : {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.extension"
        },
        "benefitBalance" : {
            name: "benefitBalance",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalBenefitBalance,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.benefitBalance"
        },
        "accident" : {
            name: "accident",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalAccident,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.accident"
        },
        "adjudication" : {
            name: "adjudication",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalAdjudication,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.adjudication"
        },
        "addItem" : {
            name: "addItem",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalAddItem,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.addItem"
        },
        "total" : {
            name: "total",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalTotal,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.total"
        },
        "related" : {
            name: "related",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalRelated,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.related"
        },
        "fundsReserve" : {
            name: "fundsReserve",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.fundsReserve",
            valueSet: "http://hl7.org/fhir/ValueSet/fundsreserve"
        },
        "fundsReserveRequested" : {
            name: "fundsReserveRequested",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.fundsReserveRequested",
            valueSet: "http://hl7.org/fhir/ValueSet/fundsreserve"
        },
        "provider" : {
            name: "provider",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.provider"
        },
        "insurer" : {
            name: "insurer",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.insurer"
        },
        "patient" : {
            name: "patient",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.patient"
        },
        "outcome" : {
            name: "outcome",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalOutcome,
            min: 1,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.outcome",
            valueSet: "http://hl7.org/fhir/ValueSet/remittance-outcome|4.0.1"
        },
        "formCode" : {
            name: "formCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.formCode",
            valueSet: "http://hl7.org/fhir/ValueSet/forms"
        },
        "originalPrescription" : {
            name: "originalPrescription",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.originalPrescription"
        },
        "procedure" : {
            name: "procedure",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalProcedure,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.procedure"
        },
        "contained" : {
            name: "contained",
            dataType: r4:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ExplanationOfBenefit.contained"
        },
        "disposition" : {
            name: "disposition",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.disposition"
        },
        "referral" : {
            name: "referral",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.referral"
        },
        "form" : {
            name: "form",
            dataType: r4:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.form"
        },
        "prescription" : {
            name: "prescription",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.prescription"
        },
        "facility" : {
            name: "facility",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ExplanationOfBenefit.facility"
        }
    },
    serializers: {
        'xml: r4:fhirResourceXMLSerializer,
        'json: r4:fhirResourceJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutional record {|
    *r4:DomainResource;

    RESOURCE_NAME_C4BBEXPLANATIONOFBENEFITINPATIENTINSTITUTIONAL resourceType = RESOURCE_NAME_C4BBEXPLANATIONOFBENEFITINPATIENTINSTITUTIONAL;

    r4:Period benefitPeriod?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.insurance constraint. This field must be an array containing at least one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalInsurance[] insurance;
    r4:Reference claimResponse?;
    C4BBExplanationOfBenefitInpatientInstitutionalUse use;
    r4:Extension[] modifierExtension?;
    string[] preAuthRef?;
    r4:code language?;
    C4BBExplanationOfBenefitInpatientInstitutionalType 'type;
    r4:positiveInt precedence?;
    C4BBExplanationOfBenefitInpatientInstitutionalProcessNote[] processNote?;
    C4BBExplanationOfBenefitInpatientInstitutionalPayee payee?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo constraint. This field must be an array containing at least one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfo[] supportingInfo;
    r4:Reference claim?;
    r4:Reference enterer?;
    C4BBExplanationOfBenefitInpatientInstitutionalPayment payment?;
    string id?;
    r4:Narrative text?;
    C4BBExplanationOfBenefitInpatientInstitutionalCareTeam[] careTeam?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.identifier constraint. This field must be an array containing at least one item."
        }
    }
    r4:Identifier[] identifier;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.item constraint. This field must be an array containing at least one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalItem[] item;
    r4:dateTime created;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.diagnosis constraint. This field must be an array containing at least one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalDiagnosis[] diagnosis;
    r4:CodeableConcept priority?;
    r4:Period[] preAuthRefPeriod?;
    r4:Meta meta;
    r4:Period billablePeriod;
    r4:uri implicitRules?;
    C4BBExplanationOfBenefitInpatientInstitutionalSubType subType;
    C4BBExplanationOfBenefitInpatientInstitutionalStatus status;
    r4:Extension[] extension?;
    C4BBExplanationOfBenefitInpatientInstitutionalBenefitBalance[] benefitBalance?;
    C4BBExplanationOfBenefitInpatientInstitutionalAccident accident?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.adjudication constraint. This field must be an array containing at least one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalAdjudication[] adjudication;
    C4BBExplanationOfBenefitInpatientInstitutionalAddItem[] addItem?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.total constraint. This field must be an array containing at least one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalTotal[] total;
    C4BBExplanationOfBenefitInpatientInstitutionalRelated[] related?;
    r4:CodeableConcept fundsReserve?;
    r4:CodeableConcept fundsReserveRequested?;
    r4:Reference provider;
    r4:Reference insurer;
    r4:Reference patient;
    C4BBExplanationOfBenefitInpatientInstitutionalOutcome outcome;
    r4:CodeableConcept formCode?;
    r4:Reference originalPrescription?;
    C4BBExplanationOfBenefitInpatientInstitutionalProcedure[] procedure?;
    r4:Resource[] contained?;
    string disposition?;
    r4:Reference referral?;
    r4:Attachment form?;
    r4:Reference prescription?;
    r4:Reference facility?;
    r4:Element ...;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalIdentifierUniqueclaimid datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Time period during which identifier is/was valid for use.
# + system - Establishes the namespace for the value - that is, a URL that describes a set values that are unique.
# + use - The purpose of this identifier.
# + assigner - Organization that issued/manages the identifier.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.
# + value - The portion of the identifier typically relevant to the user and which is unique within the context of the system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalIdentifierUniqueclaimid",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.identifier.extension"
        },
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "ExplanationOfBenefit.identifier.period"
        },
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "ExplanationOfBenefit.identifier.system"
        },
        "use": {
            name: "use",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalIdentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "ExplanationOfBenefit.identifier.use"
        },
        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "ExplanationOfBenefit.identifier.assigner"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.identifier.id"
        },
        "type": {
            name: "type",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalIdentifierType,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "ExplanationOfBenefit.identifier.type"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "ExplanationOfBenefit.identifier.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalIdentifierUniqueclaimid record {|
    *r4:Identifier;

    r4:Extension[] extension?;
    r4:Period period?;
    r4:uri system?;
    C4BBExplanationOfBenefitInpatientInstitutionalIdentifierUse use?;
    r4:Reference assigner?;
    string id?;
    C4BBExplanationOfBenefitInpatientInstitutionalIdentifierType 'type;
    string value;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationAdjustmentreason datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationAdjustmentreason",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.item.adjudication.reason"
        },
        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.item.adjudication.amount"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.adjudication.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.adjudication.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.adjudication.id"
        },
        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategory,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.item.adjudication.category"
        },
        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.item.adjudication.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationAdjustmentreason record {|
    *C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudication;

    r4:CodeableConcept reason;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategory category;
    decimal value?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryCodingOne datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryCodingOne",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.adjudication.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.adjudication.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryCodingOne record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBAdjudicationDiscriminator";
    r4:code code = "benefitpaymentstatus";
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalTypeCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalTypeCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.type.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.type.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalTypeCoding record {|
    *r4:Coding;

    r4:uri system = "http://terminology.hl7.org/CodeSystem/claim-type";
    r4:code code = "institutional";
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryEight datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryEight",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingEight,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryEight record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingEight[] coding;
|};

# C4BBExplanationOfBenefitInpatientInstitutionalProcessNoteType enum
public enum C4BBExplanationOfBenefitInpatientInstitutionalProcessNoteType {
   CODE_TYPE_PRINT = "print",
   CODE_TYPE_DISPLAY = "display",
   CODE_TYPE_PRINTOPER = "printoper"
}

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalTotal datatype record.
#
# + amount - Monetary total amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalTotal",
    baseType: (),
    elements: {
        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 1,
            max: 1,
            isArray: false,
            description: "Monetary total amount associated with the category.",
            path: "ExplanationOfBenefit.total.amount"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.total.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.total.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.total.id"
        },
        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.total.category"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalTotal record {|
    *r4:BackboneElement;

    r4:Money amount;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept category;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingSix datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingSix",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingSix record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "typeofbill";
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalIdentifierType datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalIdentifierType",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalIdentifierTypeCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.identifier.type.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalIdentifierType record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.identifier.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.identifier.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalIdentifierTypeCoding[] coding;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalIdentifierTypeCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalIdentifierTypeCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.identifier.type.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.identifier.type.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalIdentifierTypeCoding record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBIdentifierType";
    r4:code code = "uc";
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalBenefitBalanceFinancial datatype record.
#
# + allowedMoney - The quantity of the benefit which is permitted under the coverage.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + allowedString - The quantity of the benefit which is permitted under the coverage.
# + allowedUnsignedInt - The quantity of the benefit which is permitted under the coverage.
# + usedUnsignedInt - The quantity of the benefit which have been consumed to date.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + usedMoney - The quantity of the benefit which have been consumed to date.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Classification of benefit being provided.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalBenefitBalanceFinancial",
    baseType: (),
    elements: {
        "allowedMoney": {
            name: "allowedMoney",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which is permitted under the coverage.",
            path: "ExplanationOfBenefit.benefitBalance.financial.allowed[x]"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.benefitBalance.financial.extension"
        },

        "allowedString": {
            name: "allowedString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which is permitted under the coverage.",
            path: "ExplanationOfBenefit.benefitBalance.financial.allowed[x]"
        },

        "allowedUnsignedInt": {
            name: "allowedUnsignedInt",
            dataType: r4:unsignedInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which is permitted under the coverage.",
            path: "ExplanationOfBenefit.benefitBalance.financial.allowed[x]"
        },

        "usedUnsignedInt": {
            name: "usedUnsignedInt",
            dataType: r4:unsignedInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which have been consumed to date.",
            path: "ExplanationOfBenefit.benefitBalance.financial.used[x]"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.benefitBalance.financial.modifierExtension"
        },

        "usedMoney": {
            name: "usedMoney",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity of the benefit which have been consumed to date.",
            path: "ExplanationOfBenefit.benefitBalance.financial.used[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.benefitBalance.financial.id"
        },

        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Classification of benefit being provided.",
            path: "ExplanationOfBenefit.benefitBalance.financial.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalBenefitBalanceFinancial record {|
    *r4:BackboneElement;

    r4:Money allowedMoney?;
    r4:Extension[] extension?;
    string allowedString?;
    r4:unsignedInt allowedUnsignedInt?;
    r4:unsignedInt usedUnsignedInt?;
    r4:Extension[] modifierExtension?;
    r4:Money usedMoney?;
    string id?;
    r4:CodeableConcept 'type;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalRelated datatype record.
#
# + reference - An alternate organizational reference to the case or file to which this particular claim pertains.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + claim - Reference to a related claim.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + relationship - A code to convey how the claims are related.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalRelated",
    baseType: (),
    elements: {
        "reference": {
            name: "reference",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "An alternate organizational reference to the case or file to which this particular claim pertains.",
            path: "ExplanationOfBenefit.related.reference"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.related.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.related.modifierExtension"
        },
        "claim": {
            name: "claim",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reference to a related claim.",
            path: "ExplanationOfBenefit.related.claim"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.related.id"
        },
        "relationship": {
            name: "relationship",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to convey how the claims are related.",
            path: "ExplanationOfBenefit.related.relationship"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalRelated record {|
    *r4:BackboneElement;

    r4:Identifier reference;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:Reference claim?;
    string id?;
    r4:CodeableConcept relationship;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoMedicalrecordnumber datatype record.
#
# + timingDate - The date when or period to which this information refers.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + sequence - A number to uniquely identify supporting information entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoMedicalrecordnumber",
    baseType: (),
    elements: {
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategory,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoMedicalrecordnumber record {|
    *C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfo;

    r4:date timingDate?;
    r4:Coding reason?;
    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    string valueString?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategory category;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalDiagnosis datatype record.
#
# + sequence - A number to uniquely identify diagnosis entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + onAdmission - Indication of whether the diagnosis was present on admission to a facility.
# + packageCode - A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - When the condition was observed or the relative ranking.
# + diagnosisCodeableConcept - The nature of illness or problem in a coded form or as a reference to an external defined Condition.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalDiagnosis",
    baseType: (),
    elements: {
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify diagnosis entries.",
            path: "ExplanationOfBenefit.diagnosis.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.diagnosis.extension"
        },
        "onAdmission": {
            name: "onAdmission",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indication of whether the diagnosis was present on admission to a facility.",
            path: "ExplanationOfBenefit.diagnosis.onAdmission"
        },
        "packageCode": {
            name: "packageCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system.",
            path: "ExplanationOfBenefit.diagnosis.packageCode"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.diagnosis.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.diagnosis.id"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: true,
            description: "When the condition was observed or the relative ranking.",
            path: "ExplanationOfBenefit.diagnosis.type"
        },
        "diagnosisCodeableConcept": {
            name: "diagnosisCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The nature of illness or problem in a coded form or as a reference to an external defined Condition.",
            path: "ExplanationOfBenefit.diagnosis.diagnosis[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalDiagnosis record {|
    *r4:BackboneElement;

    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept onAdmission?;
    r4:CodeableConcept packageCode?;
    r4:Extension[] modifierExtension?;
    string id?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.diagnosis.type constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.diagnosis.type constraint. This field must be an array containing at most one item."
        }
    }
    r4:CodeableConcept[] 'type;
    r4:CodeableConcept diagnosisCodeableConcept?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingEight datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingEight",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingEight record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "admtype";
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategorySix datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategorySix",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingSix,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategorySix record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingSix[] coding;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalProcedure datatype record.
#
# + date - Date and optionally time the procedure was performed.
# + sequence - A number to uniquely identify procedure entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + procedureCodeableConcept - The code or reference to a Procedure resource which identifies the clinical intervention performed.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + udi - Unique Device Identifiers associated with this line item.
# + 'type - When the condition was observed or the relative ranking.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalProcedure",
    baseType: (),
    elements: {
        "date": {
            name: "date",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "Date and optionally time the procedure was performed.",
            path: "ExplanationOfBenefit.procedure.date"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify procedure entries.",
            path: "ExplanationOfBenefit.procedure.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.procedure.extension"
        },
        "procedureCodeableConcept": {
            name: "procedureCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The code or reference to a Procedure resource which identifies the clinical intervention performed.",
            path: "ExplanationOfBenefit.procedure.procedure[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.procedure.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.procedure.id"
        },
        "udi": {
            name: "udi",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Unique Device Identifiers associated with this line item.",
            path: "ExplanationOfBenefit.procedure.udi"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: true,
            description: "When the condition was observed or the relative ranking.",
            path: "ExplanationOfBenefit.procedure.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalProcedure record {|
    *r4:BackboneElement;

    r4:dateTime date?;
    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept procedureCodeableConcept?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:Reference[] udi?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.procedure.type constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.procedure.type constraint. This field must be an array containing at most one item."
        }
    }
    r4:CodeableConcept[] 'type;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategoryCodingOne datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategoryCodingOne",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.item.adjudication.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.item.adjudication.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategoryCodingOne record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBAdjudicationDiscriminator";
    r4:code code = "allowedunits";
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingTwo datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingTwo",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingTwo record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "drg";
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryCodingTwo datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryCodingTwo",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.adjudication.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.adjudication.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryCodingTwo record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBAdjudicationDiscriminator";
    r4:code code = "adjustmentreason";
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryOne datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryOne",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingOne,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryOne record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingOne[] coding;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoDrg datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timingDate - The date when or period to which this information refers.
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoDrg",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryTwo,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoDrg record {|
    *C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfo;

    boolean valueBoolean?;
    r4:Coding reason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code;
    r4:Reference valueReference?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    r4:date timingDate?;
    r4:positiveInt sequence;
    r4:Attachment valueAttachment?;
    string valueString?;
    string id?;
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryTwo category;
    r4:Quantity valueQuantity?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalProcessNote datatype record.
#
# + number - A number to uniquely identify a note entry.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - A code to define the language used in the text of the note.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - The explanation or description associated with the processing.
# + 'type - The business purpose of the note text.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalProcessNote",
    baseType: (),
    elements: {
        "number": {
            name: "number",
            dataType: r4:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify a note entry.",
            path: "ExplanationOfBenefit.processNote.number"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.processNote.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.processNote.modifierExtension"
        },
        "language": {
            name: "language",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code to define the language used in the text of the note.",
            path: "ExplanationOfBenefit.processNote.language"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.processNote.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The explanation or description associated with the processing.",
            path: "ExplanationOfBenefit.processNote.text"
        },
        "type": {
            name: "type",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalProcessNoteType,
            min: 0,
            max: 1,
            isArray: false,
            description: "The business purpose of the note text.",
            path: "ExplanationOfBenefit.processNote.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalProcessNote record {|
    *r4:BackboneElement;

    r4:positiveInt number?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept language?;
    string id?;
    string text?;
    C4BBExplanationOfBenefitInpatientInstitutionalProcessNoteType 'type?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategory datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategory",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategoryCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.item.adjudication.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategory record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.item.adjudication.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.item.adjudication.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategoryCoding[] coding;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoAdmissionperiod datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoAdmissionperiod",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryFour,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoAdmissionperiod record {|
    *C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfo;

    boolean valueBoolean?;
    r4:Coding reason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    r4:Reference valueReference?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    r4:positiveInt sequence;
    r4:Attachment valueAttachment?;
    string valueString?;
    string id?;
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryFour category;
    r4:Quantity valueQuantity?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalAddItemDetail datatype record.
#
# + adjudication - The adjudication results.
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of repetitions of a service or product.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + subDetail - The third-tier service adjudications for payor added services.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalAddItemDetail",
    baseType: (),
    elements: {
        "adjudication": {
            name: "adjudication",
            dataType: international401:ExplanationOfBenefitItemAdjudication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The adjudication results.",
            path: "ExplanationOfBenefit.addItem.detail.adjudication"
        },

        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.addItem.detail.unitPrice"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.addItem.detail.extension"
        },
        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.addItem.detail.quantity"
        },
        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.addItem.detail.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.addItem.detail.modifierExtension"
        },
        "subDetail": {
            name: "subDetail",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalAddItemDetailSubDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The third-tier service adjudications for payor added services.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.addItem.detail.id"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "ExplanationOfBenefit.addItem.detail.productOrService"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.addItem.detail.factor"
        },
        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "ExplanationOfBenefit.addItem.detail.net"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.addItem.detail.noteNumber"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalAddItemDetail record {|
    *r4:BackboneElement;

    international401:ExplanationOfBenefitItemAdjudication[] adjudication?;
    r4:Money unitPrice?;
    r4:Extension[] extension?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    C4BBExplanationOfBenefitInpatientInstitutionalAddItemDetailSubDetail[] subDetail?;
    string id?;
    r4:CodeableConcept productOrService;
    decimal factor?;
    r4:Money net?;
    r4:positiveInt[] noteNumber?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategory datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategory",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategory record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCoding[] coding;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoDischarge_status datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timingDate - The date when or period to which this information refers.
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoDischarge_status",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryFive,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoDischarge_status record {|
    *C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfo;

    boolean valueBoolean?;
    r4:Coding reason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code;
    r4:Reference valueReference?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    r4:date timingDate?;
    r4:positiveInt sequence;
    r4:Attachment valueAttachment?;
    string valueString?;
    string id?;
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryFive category;
    r4:Quantity valueQuantity?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalItemDetailSubDetail datatype record.
#
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of repetitions of a service or product.
# + programCode - Identifies the program under which this may be recovered.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + adjudication - The adjudication results.
# + sequence - A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + udi - Unique Device Identifiers associated with this line item.
# + category - Code to identify the general type of benefits under which products and services are provided.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalItemDetailSubDetail",
    baseType: (),
    elements: {
        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.item.detail.subDetail.unitPrice"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.detail.subDetail.extension"
        },
        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.item.detail.subDetail.quantity"
        },
        "programCode": {
            name: "programCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "ExplanationOfBenefit.item.detail.subDetail.programCode"
        },
        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.item.detail.subDetail.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.detail.subDetail.modifierExtension"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "ExplanationOfBenefit.item.detail.subDetail.productOrService"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.item.detail.subDetail.noteNumber"
        },

        "adjudication": {
            name: "adjudication",
            dataType: international401:ExplanationOfBenefitItemAdjudication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The adjudication results.",
            path: "ExplanationOfBenefit.item.detail.subDetail.adjudication"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
            path: "ExplanationOfBenefit.item.detail.subDetail.sequence"
        },
        "revenue": {
            name: "revenue",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "ExplanationOfBenefit.item.detail.subDetail.revenue"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.detail.subDetail.id"
        },
        "udi": {
            name: "udi",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Unique Device Identifiers associated with this line item.",
            path: "ExplanationOfBenefit.item.detail.subDetail.udi"
        },
        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Code to identify the general type of benefits under which products and services are provided.",
            path: "ExplanationOfBenefit.item.detail.subDetail.category"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.item.detail.subDetail.factor"
        },
        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "ExplanationOfBenefit.item.detail.subDetail.net"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalItemDetailSubDetail record {|
    *r4:BackboneElement;

    r4:Money unitPrice?;
    r4:Extension[] extension?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] programCode?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept productOrService;
    r4:positiveInt[] noteNumber?;
    international401:ExplanationOfBenefitItemAdjudication[] adjudication?;
    r4:positiveInt sequence;
    r4:CodeableConcept revenue?;
    string id?;
    r4:Reference[] udi?;
    r4:CodeableConcept category?;
    decimal factor?;
    r4:Money net?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoClmrecvddate datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timingDate - The date when or period to which this information refers.
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoClmrecvddate",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryOne,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoClmrecvddate record {|
    *C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfo;

    boolean valueBoolean?;
    r4:Coding reason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    r4:Reference valueReference?;
    r4:Extension[] modifierExtension?;
    r4:date timingDate?;
    r4:positiveInt sequence;
    r4:Attachment valueAttachment?;
    string valueString?;
    string id?;
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryOne category;
    r4:Quantity valueQuantity?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategoryCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategoryCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.item.adjudication.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.item.adjudication.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategoryCoding record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBAdjudicationDiscriminator";
    r4:code code = "adjustmentreason";
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingSeven datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingSeven",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingSeven record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "pointoforigin";
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingThree datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingThree",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingThree record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "patientaccountnumber";
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCoding record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "medicalrecordnumber";
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalItem datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + locationAddress - Where the product or service was provided.
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + servicedPeriod - The date or dates when the service or product was supplied, performed or completed.
# + adjudication - If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.
# + informationSequence - Exceptions, special conditions and supporting information applicable for this service or product.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + locationCodeableConcept - Where the product or service was provided.
# + diagnosisSequence - Diagnoses applicable for this service or product.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + locationReference - Where the product or service was provided.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + quantity - The number of repetitions of a service or product.
# + programCode - Identifies the program under which this may be recovered.
# + careTeamSequence - Care team members related to this service or product.
# + encounter - A billed item may include goods or services provided in multiple encounters.
# + sequence - A number to uniquely identify item entries.
# + bodySite - Physical service site on the patient (limb, tooth, etc.).
# + subSite - A region or surface of the bodySite, e.g. limb region or tooth surface(s).
# + detail - Second-tier of goods and services.
# + servicedDate - The date or dates when the service or product was supplied, performed or completed.
# + udi - Unique Device Identifiers associated with this line item.
# + category - Code to identify the general type of benefits under which products and services are provided.
# + procedureSequence - Procedures applicable for this service or product.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalItem",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.extension"
        },
        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.item.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.modifierExtension"
        },
        "locationAddress": {
            name: "locationAddress",
            dataType: r4:Address,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ExplanationOfBenefit.item.location[x]"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "ExplanationOfBenefit.item.productOrService"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.item.noteNumber"
        },
        "servicedPeriod": {
            name: "servicedPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "ExplanationOfBenefit.item.serviced[x]"
        },
        "adjudication": {
            name: "adjudication",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.",
            path: "ExplanationOfBenefit.item.adjudication"
        },
        "informationSequence": {
            name: "informationSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Exceptions, special conditions and supporting information applicable for this service or product.",
            path: "ExplanationOfBenefit.item.informationSequence"
        },
        "revenue": {
            name: "revenue",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "ExplanationOfBenefit.item.revenue"
        },
        "locationCodeableConcept": {
            name: "locationCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ExplanationOfBenefit.item.location[x]"
        },
        "diagnosisSequence": {
            name: "diagnosisSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Diagnoses applicable for this service or product.",
            path: "ExplanationOfBenefit.item.diagnosisSequence"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.id"
        },
        "locationReference": {
            name: "locationReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ExplanationOfBenefit.item.location[x]"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.item.factor"
        },
        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "ExplanationOfBenefit.item.net"
        },
        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.item.unitPrice"
        },
        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.item.quantity"
        },
        "programCode": {
            name: "programCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "ExplanationOfBenefit.item.programCode"
        },
        "careTeamSequence": {
            name: "careTeamSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Care team members related to this service or product.",
            path: "ExplanationOfBenefit.item.careTeamSequence"
        },
        "encounter": {
            name: "encounter",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A billed item may include goods or services provided in multiple encounters.",
            path: "ExplanationOfBenefit.item.encounter"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify item entries.",
            path: "ExplanationOfBenefit.item.sequence"
        },
        "bodySite": {
            name: "bodySite",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Physical service site on the patient (limb, tooth, etc.).",
            path: "ExplanationOfBenefit.item.bodySite"
        },
        "subSite": {
            name: "subSite",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
            path: "ExplanationOfBenefit.item.subSite"
        },
        "detail": {
            name: "detail",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalItemDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Second-tier of goods and services.",
            path: "ExplanationOfBenefit.item.detail"
        },
        "servicedDate": {
            name: "servicedDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "ExplanationOfBenefit.item.serviced[x]"
        },
        "udi": {
            name: "udi",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Unique Device Identifiers associated with this line item.",
            path: "ExplanationOfBenefit.item.udi"
        },
        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Code to identify the general type of benefits under which products and services are provided.",
            path: "ExplanationOfBenefit.item.category"
        },
        "procedureSequence": {
            name: "procedureSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Procedures applicable for this service or product.",
            path: "ExplanationOfBenefit.item.procedureSequence"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalItem record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    r4:Address locationAddress?;
    r4:CodeableConcept productOrService;
    r4:positiveInt[] noteNumber?;
    r4:Period servicedPeriod?;
    C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudication[] adjudication?;
    r4:positiveInt[] informationSequence?;
    r4:CodeableConcept revenue;
    r4:CodeableConcept locationCodeableConcept?;
    r4:positiveInt[] diagnosisSequence?;
    string id?;
    r4:Reference locationReference?;
    decimal factor?;
    r4:Money net?;
    r4:Money unitPrice?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] programCode?;
    r4:positiveInt[] careTeamSequence?;
    r4:Reference[] encounter?;
    r4:positiveInt sequence;
    r4:CodeableConcept bodySite?;
    r4:CodeableConcept[] subSite?;
    C4BBExplanationOfBenefitInpatientInstitutionalItemDetail[] detail?;
    r4:date servicedDate?;
    r4:Reference[] udi?;
    r4:CodeableConcept category?;
    r4:positiveInt[] procedureSequence?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategoryOne datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategoryOne",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategoryCodingOne,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.item.adjudication.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategoryOne record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.item.adjudication.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.item.adjudication.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategoryCodingOne[] coding;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalBenefitBalance datatype record.
#
# + excluded - True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + unit - Indicates if the benefits apply to an individual or to the family.
# + financial - Benefits Used to date.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + name - A short name or tag for the benefit.
# + description - A richer description of the benefit or services covered.
# + term - The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual visits'.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - Code to identify the general type of benefits under which products and services are provided.
# + network - Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalBenefitBalance",
    baseType: (),
    elements: {
        "excluded": {
            name: "excluded",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.",
            path: "ExplanationOfBenefit.benefitBalance.excluded"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.benefitBalance.extension"
        },
        "unit": {
            name: "unit",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates if the benefits apply to an individual or to the family.",
            path: "ExplanationOfBenefit.benefitBalance.unit"
        },
        "financial": {
            name: "financial",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalBenefitBalanceFinancial,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Benefits Used to date.",
            path: "ExplanationOfBenefit.benefitBalance.financial"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.benefitBalance.modifierExtension"
        },
        "name": {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A short name or tag for the benefit.",
            path: "ExplanationOfBenefit.benefitBalance.name"
        },
        "description": {
            name: "description",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A richer description of the benefit or services covered.",
            path: "ExplanationOfBenefit.benefitBalance.description"
        },
        "term": {
            name: "term",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual visits'.",
            path: "ExplanationOfBenefit.benefitBalance.term"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.benefitBalance.id"
        },
        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Code to identify the general type of benefits under which products and services are provided.",
            path: "ExplanationOfBenefit.benefitBalance.category"
        },
        "network": {
            name: "network",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers.",
            path: "ExplanationOfBenefit.benefitBalance.network"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalBenefitBalance record {|
    *r4:BackboneElement;

    boolean excluded?;
    r4:Extension[] extension?;
    r4:CodeableConcept unit?;
    C4BBExplanationOfBenefitInpatientInstitutionalBenefitBalanceFinancial[] financial?;
    r4:Extension[] modifierExtension?;
    string name?;
    string description?;
    r4:CodeableConcept term?;
    string id?;
    r4:CodeableConcept category;
    r4:CodeableConcept network?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.adjudication.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.adjudication.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryCoding record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBAdjudicationDiscriminator";
    r4:code code = "billingnetworkstatus";
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationAdjustmentreason datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationAdjustmentreason",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.adjudication.reason"
        },
        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.adjudication.amount"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.adjudication.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.adjudication.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.adjudication.id"
        },
        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryTwo,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.adjudication.category"
        },
        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.adjudication.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationAdjustmentreason record {|
    *C4BBExplanationOfBenefitInpatientInstitutionalAdjudication;

    r4:CodeableConcept reason;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryTwo category;
    decimal value?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategory datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategory",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.adjudication.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategory record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.adjudication.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.adjudication.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryCoding[] coding;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalPayment datatype record.
#
# + date - Estimated date the payment will be issued or the actual issue date of payment.
# + identifier - Issuer's unique identifier for the payment instrument.
# + adjustmentReason - Reason for the payment adjustment.
# + amount - Benefits payable less any payment adjustment.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + adjustment - Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Whether this represents partial or complete payment of the benefits payable.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalPayment",
    baseType: (),
    elements: {
        "date": {
            name: "date",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Estimated date the payment will be issued or the actual issue date of payment.",
            path: "ExplanationOfBenefit.payment.date"
        },
        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "Issuer's unique identifier for the payment instrument.",
            path: "ExplanationOfBenefit.payment.identifier"
        },
        "adjustmentReason": {
            name: "adjustmentReason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reason for the payment adjustment.",
            path: "ExplanationOfBenefit.payment.adjustmentReason"
        },
        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Benefits payable less any payment adjustment.",
            path: "ExplanationOfBenefit.payment.amount"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.payment.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.payment.modifierExtension"
        },
        "adjustment": {
            name: "adjustment",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication.",
            path: "ExplanationOfBenefit.payment.adjustment"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.payment.id"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Whether this represents partial or complete payment of the benefits payable.",
            path: "ExplanationOfBenefit.payment.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalPayment record {|
    *r4:BackboneElement;

    r4:date date?;
    r4:Identifier identifier?;
    r4:CodeableConcept adjustmentReason?;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:Money adjustment?;
    string id?;
    r4:CodeableConcept 'type?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationBenefitpaymentstatus datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationBenefitpaymentstatus",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.adjudication.reason"
        },
        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.adjudication.amount"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.adjudication.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.adjudication.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.adjudication.id"
        },
        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryOne,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.adjudication.category"
        },
        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.adjudication.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationBenefitpaymentstatus record {|
    *C4BBExplanationOfBenefitInpatientInstitutionalAdjudication;

    r4:CodeableConcept reason;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryOne category;
    decimal value?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryFour datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryFour",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingFour,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryFour record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingFour[] coding;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryFive datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryFive",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingFive,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryFive record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingFive[] coding;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalInsurance datatype record.
#
# + coverage - Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + focal - A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + preAuthRef - Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalInsurance",
    baseType: (),
    elements: {
        "coverage": {
            name: "coverage",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.",
            path: "ExplanationOfBenefit.insurance.coverage"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.insurance.extension"
        },
        "focal": {
            name: "focal",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.",
            path: "ExplanationOfBenefit.insurance.focal"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.insurance.modifierExtension"
        },
        "preAuthRef": {
            name: "preAuthRef",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.",
            path: "ExplanationOfBenefit.insurance.preAuthRef"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.insurance.id"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalInsurance record {|
    *r4:BackboneElement;

    r4:Reference coverage;
    r4:Extension[] extension?;
    boolean focal;
    r4:Extension[] modifierExtension?;
    string[] preAuthRef?;
    string id?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalAdjudication datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalAdjudication",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.adjudication.reason"
        },
        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.adjudication.amount"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.adjudication.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.adjudication.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.adjudication.id"
        },
        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.adjudication.category"
        },
        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.adjudication.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalAdjudication record {|
    *r4:BackboneElement;

    r4:CodeableConcept reason?;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept category;
    decimal value?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoPointoforigin datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timingDate - The date when or period to which this information refers.
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoPointoforigin",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategorySeven,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoPointoforigin record {|
    *C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfo;

    boolean valueBoolean?;
    r4:Coding reason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code;
    r4:Reference valueReference?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    r4:date timingDate?;
    r4:positiveInt sequence;
    r4:Attachment valueAttachment?;
    string valueString?;
    string id?;
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategorySeven category;
    r4:Quantity valueQuantity?;
|};

# C4BBExplanationOfBenefitInpatientInstitutionalStatus enum
public enum C4BBExplanationOfBenefitInpatientInstitutionalStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_CANCELLED = "cancelled",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error"
}

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfo datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timingDate - The date when or period to which this information refers.
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfo",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfo record {|
    *r4:BackboneElement;

    boolean valueBoolean?;
    r4:Coding reason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    r4:Reference valueReference?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    r4:date timingDate?;
    r4:positiveInt sequence;
    r4:Attachment valueAttachment?;
    string valueString?;
    string id?;
    r4:CodeableConcept category;
    r4:Quantity valueQuantity?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryOne datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryOne",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryCodingOne,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.adjudication.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryOne record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.adjudication.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.adjudication.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryCodingOne[] coding;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudication datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudication",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.item.adjudication.reason"
        },
        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.item.adjudication.amount"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.adjudication.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.adjudication.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.adjudication.id"
        },
        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.item.adjudication.category"
        },
        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.item.adjudication.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudication record {|
    *r4:BackboneElement;

    r4:CodeableConcept reason?;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept category;
    decimal value?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategorySeven datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategorySeven",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingSeven,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategorySeven record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingSeven[] coding;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoTypeofbill datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timingDate - The date when or period to which this information refers.
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoTypeofbill",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategorySix,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoTypeofbill record {|
    *C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfo;

    boolean valueBoolean?;
    r4:Coding reason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code;
    r4:Reference valueReference?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    r4:date timingDate?;
    r4:positiveInt sequence;
    r4:Attachment valueAttachment?;
    string valueString?;
    string id?;
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategorySix category;
    r4:Quantity valueQuantity?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalAddItemDetailSubDetail datatype record.
#
# + adjudication - The adjudication results.
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of repetitions of a service or product.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalAddItemDetailSubDetail",
    baseType: (),
    elements: {
        "adjudication": {
            name: "adjudication",
            dataType: international401:ExplanationOfBenefitItemAdjudication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The adjudication results.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.adjudication"
        },

        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.unitPrice"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.extension"
        },
        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.quantity"
        },
        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.id"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.productOrService"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.factor"
        },
        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.net"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.addItem.detail.subDetail.noteNumber"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalAddItemDetailSubDetail record {|
    *r4:BackboneElement;

    international401:ExplanationOfBenefitItemAdjudication[] adjudication?;
    r4:Money unitPrice?;
    r4:Extension[] extension?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept productOrService;
    decimal factor?;
    r4:Money net?;
    r4:positiveInt[] noteNumber?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalPayee datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Type of Party to be reimbursed: Subscriber, provider, other.
# + party - Reference to the individual or organization to whom any payment will be made.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalPayee",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.payee.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.payee.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.payee.id"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Type of Party to be reimbursed: Subscriber, provider, other.",
            path: "ExplanationOfBenefit.payee.type"
        },
        "party": {
            name: "party",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reference to the individual or organization to whom any payment will be made.",
            path: "ExplanationOfBenefit.payee.party"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalPayee record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept 'type;
    r4:Reference party?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalItemDetail datatype record.
#
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of repetitions of a service or product.
# + programCode - Identifies the program under which this may be recovered.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + subDetail - Third-tier of goods and services.
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + adjudication - The adjudication results.
# + sequence - A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + udi - Unique Device Identifiers associated with this line item.
# + category - Code to identify the general type of benefits under which products and services are provided.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalItemDetail",
    baseType: (),
    elements: {
        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.item.detail.unitPrice"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.detail.extension"
        },
        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.item.detail.quantity"
        },
        "programCode": {
            name: "programCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "ExplanationOfBenefit.item.detail.programCode"
        },
        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.item.detail.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.detail.modifierExtension"
        },
        "subDetail": {
            name: "subDetail",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalItemDetailSubDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Third-tier of goods and services.",
            path: "ExplanationOfBenefit.item.detail.subDetail"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "ExplanationOfBenefit.item.detail.productOrService"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.item.detail.noteNumber"
        },

        "adjudication": {
            name: "adjudication",
            dataType: international401:ExplanationOfBenefitItemAdjudication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The adjudication results.",
            path: "ExplanationOfBenefit.item.detail.adjudication"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
            path: "ExplanationOfBenefit.item.detail.sequence"
        },
        "revenue": {
            name: "revenue",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "ExplanationOfBenefit.item.detail.revenue"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.detail.id"
        },
        "udi": {
            name: "udi",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Unique Device Identifiers associated with this line item.",
            path: "ExplanationOfBenefit.item.detail.udi"
        },
        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Code to identify the general type of benefits under which products and services are provided.",
            path: "ExplanationOfBenefit.item.detail.category"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.item.detail.factor"
        },
        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "ExplanationOfBenefit.item.detail.net"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalItemDetail record {|
    *r4:BackboneElement;

    r4:Money unitPrice?;
    r4:Extension[] extension?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] programCode?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    C4BBExplanationOfBenefitInpatientInstitutionalItemDetailSubDetail[] subDetail?;
    r4:CodeableConcept productOrService;
    r4:positiveInt[] noteNumber?;
    international401:ExplanationOfBenefitItemAdjudication[] adjudication?;
    r4:positiveInt sequence;
    r4:CodeableConcept revenue?;
    string id?;
    r4:Reference[] udi?;
    r4:CodeableConcept category?;
    decimal factor?;
    r4:Money net?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryThree datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryThree",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingThree,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryThree record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingThree[] coding;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoAdmtype datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timingDate - The date when or period to which this information refers.
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoAdmtype",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryEight,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoAdmtype record {|
    *C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfo;

    boolean valueBoolean?;
    r4:Coding reason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code;
    r4:Reference valueReference?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    r4:date timingDate?;
    r4:positiveInt sequence;
    r4:Attachment valueAttachment?;
    string valueString?;
    string id?;
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryEight category;
    r4:Quantity valueQuantity?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSubType datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSubType",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSubTypeCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.subType.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSubType record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.subType.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.subType.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalSubTypeCoding[] coding;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalType datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalType",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalTypeCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.type.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalType record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalTypeCoding[] coding;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalAccident datatype record.
#
# + date - Date of an accident event related to the products and services contained in the claim.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + locationAddress - The physical location of the accident event.
# + locationReference - The physical location of the accident event.
# + 'type - The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalAccident",
    baseType: (),
    elements: {
        "date": {
            name: "date",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Date of an accident event related to the products and services contained in the claim.",
            path: "ExplanationOfBenefit.accident.date"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.accident.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.accident.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.accident.id"
        },
        "locationAddress": {
            name: "locationAddress",
            dataType: r4:Address,
            min: 0,
            max: 1,
            isArray: false,
            description: "The physical location of the accident event.",
            path: "ExplanationOfBenefit.accident.location[x]"
        },
        "locationReference": {
            name: "locationReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The physical location of the accident event.",
            path: "ExplanationOfBenefit.accident.location[x]"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers.",
            path: "ExplanationOfBenefit.accident.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalAccident record {|
    *r4:BackboneElement;

    r4:date date?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:Address locationAddress?;
    r4:Reference locationReference?;
    r4:CodeableConcept 'type?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationBillingnetworkstatus datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationBillingnetworkstatus",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.adjudication.reason"
        },
        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.adjudication.amount"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.adjudication.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.adjudication.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.adjudication.id"
        },
        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategory,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.adjudication.category"
        },
        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.adjudication.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationBillingnetworkstatus record {|
    *C4BBExplanationOfBenefitInpatientInstitutionalAdjudication;

    r4:CodeableConcept reason;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategory category;
    decimal value?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalTotalAdjudicationamounttype datatype record.
#
# + amount - Monetary total amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalTotalAdjudicationamounttype",
    baseType: (),
    elements: {
        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 1,
            max: 1,
            isArray: false,
            description: "Monetary total amount associated with the category.",
            path: "ExplanationOfBenefit.total.amount"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.total.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.total.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.total.id"
        },
        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.total.category"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalTotalAdjudicationamounttype record {|
    *C4BBExplanationOfBenefitInpatientInstitutionalTotal;

    r4:Money amount;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept category;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryTwo datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryTwo",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingTwo,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryTwo record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.supportingInfo.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingTwo[] coding;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryTwo datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryTwo",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryCodingTwo,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ExplanationOfBenefit.adjudication.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryTwo record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.adjudication.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ExplanationOfBenefit.adjudication.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    C4BBExplanationOfBenefitInpatientInstitutionalAdjudicationCategoryCodingTwo[] coding;
|};

# C4BBExplanationOfBenefitInpatientInstitutionalIdentifierUse enum
public enum C4BBExplanationOfBenefitInpatientInstitutionalIdentifierUse {
   CODE_USE_SECONDARY = "secondary",
   CODE_USE_TEMP = "temp",
   CODE_USE_USUAL = "usual",
   CODE_USE_OLD = "old",
   CODE_USE_OFFICIAL = "official"
}

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationAdjudicationamounttype datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationAdjudicationamounttype",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.item.adjudication.reason"
        },
        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 1,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.item.adjudication.amount"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.adjudication.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.adjudication.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.adjudication.id"
        },
        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.item.adjudication.category"
        },
        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.item.adjudication.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationAdjudicationamounttype record {|
    *C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudication;

    r4:CodeableConcept reason?;
    r4:Money amount;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept category;
    decimal value?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoPatientaccountnumber datatype record.
#
# + timingDate - The date when or period to which this information refers.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + sequence - A number to uniquely identify supporting information entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoPatientaccountnumber",
    baseType: (),
    elements: {
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "reason": {
            name: "reason",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "ExplanationOfBenefit.supportingInfo.reason"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "ExplanationOfBenefit.supportingInfo.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.supportingInfo.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "ExplanationOfBenefit.supportingInfo.code"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "ExplanationOfBenefit.supportingInfo.value[x]"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "ExplanationOfBenefit.supportingInfo.timing[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.supportingInfo.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryThree,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "ExplanationOfBenefit.supportingInfo.category"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoPatientaccountnumber record {|
    *C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfo;

    r4:date timingDate?;
    r4:Coding reason?;
    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    string valueString?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryThree category;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingFour datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingFour",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingFour record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "admissionperiod";
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalCareTeam datatype record.
#
# + qualification - The qualification of the practitioner which is applicable for this service.
# + sequence - A number to uniquely identify care team entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + role - The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.
# + provider - Member of the team who provided the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + responsible - The party who is billing and/or responsible for the claimed products or services.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalCareTeam",
    baseType: (),
    elements: {
        "qualification": {
            name: "qualification",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The qualification of the practitioner which is applicable for this service.",
            path: "ExplanationOfBenefit.careTeam.qualification"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify care team entries.",
            path: "ExplanationOfBenefit.careTeam.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.careTeam.extension"
        },
        "role": {
            name: "role",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.",
            path: "ExplanationOfBenefit.careTeam.role"
        },
        "provider": {
            name: "provider",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Member of the team who provided the product or service.",
            path: "ExplanationOfBenefit.careTeam.provider"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.careTeam.modifierExtension"
        },
        "responsible": {
            name: "responsible",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "The party who is billing and/or responsible for the claimed products or services.",
            path: "ExplanationOfBenefit.careTeam.responsible"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.careTeam.id"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalCareTeam record {|
    *r4:BackboneElement;

    r4:CodeableConcept qualification?;
    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept role;
    r4:Reference provider;
    r4:Extension[] modifierExtension?;
    boolean responsible?;
    string id?;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingOne datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingOne",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingOne record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "clmrecvddate";
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSubTypeCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSubTypeCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.subType.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.subType.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSubTypeCoding record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBInstitutionalClaimSubType";
    r4:code code = "inpatient";
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingFive datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingFive",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ExplanationOfBenefit.supportingInfo.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalSupportingInfoCategoryCodingFive record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/carin-bb/CodeSystem/C4BBSupportingInfoType";
    r4:code code = "discharge-status";
|};

# C4BBExplanationOfBenefitInpatientInstitutionalOutcome enum
public enum C4BBExplanationOfBenefitInpatientInstitutionalOutcome {
   CODE_OUTCOME_QUEUED = "queued",
   CODE_OUTCOME_COMPLETE = "complete",
   CODE_OUTCOME_ERROR = "error",
   CODE_OUTCOME_PARTIAL = "partial"
}

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationAllowedunits datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationAllowedunits",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ExplanationOfBenefit.item.adjudication.reason"
        },
        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ExplanationOfBenefit.item.adjudication.amount"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.item.adjudication.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.item.adjudication.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.item.adjudication.id"
        },
        "category": {
            name: "category",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategoryOne,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ExplanationOfBenefit.item.adjudication.category"
        },
        "value": {
            name: "value",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ExplanationOfBenefit.item.adjudication.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationAllowedunits record {|
    *C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudication;

    r4:CodeableConcept reason?;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    C4BBExplanationOfBenefitInpatientInstitutionalItemAdjudicationCategoryOne category;
    decimal value;
|};

# FHIR C4BBExplanationOfBenefitInpatientInstitutionalAddItem datatype record.
#
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of repetitions of a service or product.
# + programCode - Identifies the program under which this may be recovered.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + locationAddress - Where the product or service was provided.
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + servicedPeriod - The date or dates when the service or product was supplied, performed or completed.
# + adjudication - The adjudication results.
# + subDetailSequence - The sequence number of the sub-details woithin the details within the claim item which this line is intended to replace.
# + itemSequence - Claim items which this service line is intended to replace.
# + bodySite - Physical service site on the patient (limb, tooth, etc.).
# + locationCodeableConcept - Where the product or service was provided.
# + provider - The providers who are authorized for the services rendered to the patient.
# + detailSequence - The sequence number of the details within the claim item which this line is intended to replace.
# + subSite - A region or surface of the bodySite, e.g. limb region or tooth surface(s).
# + detail - The second-tier service adjudications for payor added services.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + locationReference - Where the product or service was provided.
# + servicedDate - The date or dates when the service or product was supplied, performed or completed.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.
@r4:DataTypeDefinition {
    name: "C4BBExplanationOfBenefitInpatientInstitutionalAddItem",
    baseType: (),
    elements: {
        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ExplanationOfBenefit.addItem.unitPrice"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ExplanationOfBenefit.addItem.extension"
        },
        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ExplanationOfBenefit.addItem.quantity"
        },
        "programCode": {
            name: "programCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "ExplanationOfBenefit.addItem.programCode"
        },
        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ExplanationOfBenefit.addItem.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ExplanationOfBenefit.addItem.modifierExtension"
        },
        "locationAddress": {
            name: "locationAddress",
            dataType: r4:Address,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ExplanationOfBenefit.addItem.location[x]"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "ExplanationOfBenefit.addItem.productOrService"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ExplanationOfBenefit.addItem.noteNumber"
        },
        "servicedPeriod": {
            name: "servicedPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "ExplanationOfBenefit.addItem.serviced[x]"
        },

        "adjudication": {
            name: "adjudication",
            dataType: international401:ExplanationOfBenefitItemAdjudication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The adjudication results.",
            path: "ExplanationOfBenefit.addItem.adjudication"
        },

        "subDetailSequence": {
            name: "subDetailSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The sequence number of the sub-details woithin the details within the claim item which this line is intended to replace.",
            path: "ExplanationOfBenefit.addItem.subDetailSequence"
        },
        "itemSequence": {
            name: "itemSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Claim items which this service line is intended to replace.",
            path: "ExplanationOfBenefit.addItem.itemSequence"
        },
        "bodySite": {
            name: "bodySite",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Physical service site on the patient (limb, tooth, etc.).",
            path: "ExplanationOfBenefit.addItem.bodySite"
        },
        "locationCodeableConcept": {
            name: "locationCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ExplanationOfBenefit.addItem.location[x]"
        },
        "provider": {
            name: "provider",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The providers who are authorized for the services rendered to the patient.",
            path: "ExplanationOfBenefit.addItem.provider"
        },
        "detailSequence": {
            name: "detailSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The sequence number of the details within the claim item which this line is intended to replace.",
            path: "ExplanationOfBenefit.addItem.detailSequence"
        },
        "subSite": {
            name: "subSite",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
            path: "ExplanationOfBenefit.addItem.subSite"
        },
        "detail": {
            name: "detail",
            dataType: C4BBExplanationOfBenefitInpatientInstitutionalAddItemDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The second-tier service adjudications for payor added services.",
            path: "ExplanationOfBenefit.addItem.detail"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ExplanationOfBenefit.addItem.id"
        },
        "locationReference": {
            name: "locationReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ExplanationOfBenefit.addItem.location[x]"
        },
        "servicedDate": {
            name: "servicedDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "ExplanationOfBenefit.addItem.serviced[x]"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ExplanationOfBenefit.addItem.factor"
        },
        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "ExplanationOfBenefit.addItem.net"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type C4BBExplanationOfBenefitInpatientInstitutionalAddItem record {|
    *r4:BackboneElement;

    r4:Money unitPrice?;
    r4:Extension[] extension?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] programCode?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    r4:Address locationAddress?;
    r4:CodeableConcept productOrService;
    r4:positiveInt[] noteNumber?;
    r4:Period servicedPeriod?;
    international401:ExplanationOfBenefitItemAdjudication[] adjudication?;
    r4:positiveInt[] subDetailSequence?;
    r4:positiveInt[] itemSequence?;
    r4:CodeableConcept bodySite?;
    r4:CodeableConcept locationCodeableConcept?;
    r4:Reference[] provider?;
    r4:positiveInt[] detailSequence?;
    r4:CodeableConcept[] subSite?;
    C4BBExplanationOfBenefitInpatientInstitutionalAddItemDetail[] detail?;
    string id?;
    r4:Reference locationReference?;
    r4:date servicedDate?;
    decimal factor?;
    r4:Money net?;
|};

# C4BBExplanationOfBenefitInpatientInstitutionalUse enum
public enum C4BBExplanationOfBenefitInpatientInstitutionalUse {
   CODE_USE_PREDETERMINATION = "predetermination",
   CODE_USE_PREAUTHORIZATION = "preauthorization",
   CODE_USE_CLAIM = "claim"
}

