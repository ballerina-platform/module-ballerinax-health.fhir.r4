// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.


public const string PROFILE_BASE_MEASUREREPORT = "http://hl7.org/fhir/StructureDefinition/MeasureReport";
public const RESOURCE_NAME_MEASUREREPORT = "MeasureReport";

# FHIR MeasureReport resource record.
#
# + resourceType - The type of the resource describes
# + date - The date this measure report was generated.
# + identifier - A formal identifier that is used to identify this MeasureReport when it is represented in other formats or referenced in a specification, model, design or an instance.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - The reporting period for which the report was calculated.
# + subject - Optional subject identifying the individual or individuals the report is for.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + improvementNotation - Whether improvement in the measure is noted by an increase or decrease in the measure score.
# + language - The base language in which the resource is written.
# + reporter - The individual, location, or organization that is reporting the data.
# + 'type - The type of measure report. This may be an individual report, which provides the score for the measure for an individual member of the population; a subject-listing, which returns the list of members that meet the various criteria in the measure; a summary report, which returns a population count for each of the criteria in the measure; or a data-collection, which enables the MeasureReport to be used to exchange the data-of-interest for a quality measure.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + measure - A reference to the Measure that was calculated to produce this report.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + evaluatedResource - A reference to a Bundle containing the Resources that were used in the calculation of this measure.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + group - The results of the calculation, one for each population group in the measure.
# + status - The MeasureReport status. No data will be available until the MeasureReport status is complete.
@ResourceDefinition {
    resourceType: "MeasureReport",
    baseType: DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/MeasureReport",
    elements: {
        "date" : {
            name: "date",
            dataType: dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "MeasureReport.date"
        },
        "identifier" : {
            name: "identifier",
            dataType: Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MeasureReport.identifier"
        },
        "extension" : {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MeasureReport.extension"
        },
        "period" : {
            name: "period",
            dataType: Period,
            min: 1,
            max: 1,
            isArray: false,
            path: "MeasureReport.period"
        },
        "subject" : {
            name: "subject",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "MeasureReport.subject"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MeasureReport.modifierExtension"
        },
        "improvementNotation" : {
            name: "improvementNotation",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "MeasureReport.improvementNotation",
            valueSet: "http://hl7.org/fhir/ValueSet/measure-improvement-notation|4.0.1"
        },
        "language" : {
            name: "language",
            dataType: code,
            min: 0,
            max: 1,
            isArray: false,
            path: "MeasureReport.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "reporter" : {
            name: "reporter",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "MeasureReport.reporter"
        },
        "type" : {
            name: "type",
            dataType: MeasureReportType,
            min: 1,
            max: 1,
            isArray: false,
            path: "MeasureReport.type",
            valueSet: "http://hl7.org/fhir/ValueSet/measure-report-type|4.0.1"
        },
        "contained" : {
            name: "contained",
            dataType: Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MeasureReport.contained"
        },
        "measure" : {
            name: "measure",
            dataType: canonical,
            min: 1,
            max: 1,
            isArray: false,
            path: "MeasureReport.measure"
        },
        "meta" : {
            name: "meta",
            dataType: Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "MeasureReport.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "MeasureReport.implicitRules"
        },
        "evaluatedResource" : {
            name: "evaluatedResource",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MeasureReport.evaluatedResource"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "MeasureReport.id"
        },
        "text" : {
            name: "text",
            dataType: Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "MeasureReport.text"
        },
        "group" : {
            name: "group",
            dataType: MeasureReportGroup,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MeasureReport.group"
        },
        "status" : {
            name: "status",
            dataType: MeasureReportStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "MeasureReport.status",
            valueSet: "http://hl7.org/fhir/ValueSet/measure-report-status|4.0.1"
        }
    },
    serializers: {
        'xml: fhirResourceXMLSerializer,
        'json: fhirResourceJsonSerializer
    }
}
public type MeasureReport record {|
    *DomainResource;

    RESOURCE_NAME_MEASUREREPORT resourceType = RESOURCE_NAME_MEASUREREPORT;

    BaseMeasureReportMeta meta = {
        profile : [PROFILE_BASE_MEASUREREPORT]
    };
    dateTime date?;
    Identifier[] identifier?;
    Extension[] extension?;
    Period period;
    Reference subject?;
    Extension[] modifierExtension?;
    CodeableConcept improvementNotation?;
    code language?;
    Reference reporter?;
    MeasureReportType 'type;
    Resource[] contained?;
    canonical measure;
    uri implicitRules?;
    Reference[] evaluatedResource?;
    string id?;
    Narrative text?;
    MeasureReportGroup[] group?;
    MeasureReportStatus status;
|};

@DataTypeDefinition {
    name: "BaseMeasureReportMeta",
    baseType: Meta,
    elements: {},
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type BaseMeasureReportMeta record {|
    *Meta;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)

    id versionId?;
    instant lastUpdated?;
    uri 'source?;
    canonical[] profile = ["http://hl7.org/fhir/StructureDefinition/MeasureReport"];
    Coding[] security?;
    Coding[] tag?;
|};

# FHIR MeasureReportGroupStratifierStratum datatype record.
#
# + component - A stratifier component value.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + measureScore - The measure score for this stratum, calculated as appropriate for the measure type and scoring method, and based on only the members of this stratum.
# + value - The value for this stratum, expressed as a CodeableConcept. When defining stratifiers on complex values, the value must be rendered such that the value for each stratum within the stratifier is unique.
# + population - The populations that make up the stratum, one for each type of population appropriate to the measure.
@DataTypeDefinition {
    name: "MeasureReportGroupStratifierStratum",
    baseType: (),
    elements: {
        "component": {
            name: "component",
            dataType: MeasureReportGroupStratifierStratumComponent,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A stratifier component value.",
            path: "MeasureReport.group.stratifier.stratum.component"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MeasureReport.group.stratifier.stratum.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MeasureReport.group.stratifier.stratum.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MeasureReport.group.stratifier.stratum.id"
        },
        "measureScore": {
            name: "measureScore",
            dataType: Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The measure score for this stratum, calculated as appropriate for the measure type and scoring method, and based on only the members of this stratum.",
            path: "MeasureReport.group.stratifier.stratum.measureScore"
        },
        "value": {
            name: "value",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value for this stratum, expressed as a CodeableConcept. When defining stratifiers on complex values, the value must be rendered such that the value for each stratum within the stratifier is unique.",
            path: "MeasureReport.group.stratifier.stratum.value"
        },
        "population": {
            name: "population",
            dataType: MeasureReportGroupStratifierStratumPopulation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The populations that make up the stratum, one for each type of population appropriate to the measure.",
            path: "MeasureReport.group.stratifier.stratum.population"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MeasureReportGroupStratifierStratum record {|
    MeasureReportGroupStratifierStratumComponent[] component?;
    Extension[] extension?;
    Extension[] modifierExtension?;
    string id?;
    Quantity measureScore?;
    CodeableConcept value?;
    MeasureReportGroupStratifierStratumPopulation[] population?;
|};

# FHIR MeasureReportGroup datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - The meaning of the population group as defined in the measure definition.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + stratifier - When a measure includes multiple stratifiers, there will be a stratifier group for each stratifier defined by the measure.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + measureScore - The measure score for this population group, calculated as appropriate for the measure type and scoring method, and based on the contents of the populations defined in the group.
# + population - The populations that make up the population group, one for each type of population appropriate for the measure.
@DataTypeDefinition {
    name: "MeasureReportGroup",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MeasureReport.group.extension"
        },
        "code": {
            name: "code",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The meaning of the population group as defined in the measure definition.",
            path: "MeasureReport.group.code"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MeasureReport.group.modifierExtension"
        },
        "stratifier": {
            name: "stratifier",
            dataType: MeasureReportGroupStratifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "When a measure includes multiple stratifiers, there will be a stratifier group for each stratifier defined by the measure.",
            path: "MeasureReport.group.stratifier"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MeasureReport.group.id"
        },
        "measureScore": {
            name: "measureScore",
            dataType: Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The measure score for this population group, calculated as appropriate for the measure type and scoring method, and based on the contents of the populations defined in the group.",
            path: "MeasureReport.group.measureScore"
        },
        "population": {
            name: "population",
            dataType: MeasureReportGroupStratifierStratumPopulation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The populations that make up the population group, one for each type of population appropriate for the measure.",
            path: "MeasureReport.group.population"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MeasureReportGroup record {|
    Extension[] extension?;
    CodeableConcept code?;
    Extension[] modifierExtension?;
    MeasureReportGroupStratifier[] stratifier?;
    string id?;
    Quantity measureScore?;
    MeasureReportGroupStratifierStratumPopulation[] population?;
|};

# FHIR MeasureReportGroupStratifier datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - The meaning of this stratifier, as defined in the measure definition.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + stratum - This element contains the results for a single stratum within the stratifier. For example, when stratifying on administrative gender, there will be four strata, one for each possible gender value.
@DataTypeDefinition {
    name: "MeasureReportGroupStratifier",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MeasureReport.group.stratifier.extension"
        },
        "code": {
            name: "code",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The meaning of this stratifier, as defined in the measure definition.",
            path: "MeasureReport.group.stratifier.code"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MeasureReport.group.stratifier.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MeasureReport.group.stratifier.id"
        },
        "stratum": {
            name: "stratum",
            dataType: MeasureReportGroupStratifierStratum,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "This element contains the results for a single stratum within the stratifier. For example, when stratifying on administrative gender, there will be four strata, one for each possible gender value.",
            path: "MeasureReport.group.stratifier.stratum"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MeasureReportGroupStratifier record {|
    Extension[] extension?;
    CodeableConcept[] code?;
    Extension[] modifierExtension?;
    string id?;
    MeasureReportGroupStratifierStratum[] stratum?;
|};

# FHIR MeasureReportGroupStratifierStratumComponent datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - The code for the stratum component value.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + value - The stratum component value.
@DataTypeDefinition {
    name: "MeasureReportGroupStratifierStratumComponent",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MeasureReport.group.stratifier.stratum.component.extension"
        },
        "code": {
            name: "code",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The code for the stratum component value.",
            path: "MeasureReport.group.stratifier.stratum.component.code"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MeasureReport.group.stratifier.stratum.component.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MeasureReport.group.stratifier.stratum.component.id"
        },
        "value": {
            name: "value",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The stratum component value.",
            path: "MeasureReport.group.stratifier.stratum.component.value"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MeasureReportGroupStratifierStratumComponent record {|
    Extension[] extension?;
    CodeableConcept code;
    Extension[] modifierExtension?;
    string id?;
    CodeableConcept value;
|};

# FHIR MeasureReportGroupStratifierStratumPopulation datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - The type of the population.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + count - The number of members of the population in this stratum.
# + subjectResults - This element refers to a List of subject level MeasureReport resources, one for each subject in this population in this stratum.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@DataTypeDefinition {
    name: "MeasureReportGroupStratifierStratumPopulation",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MeasureReport.group.stratifier.stratum.population.extension"
        },
        "code": {
            name: "code",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of the population.",
            path: "MeasureReport.group.stratifier.stratum.population.code"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MeasureReport.group.stratifier.stratum.population.modifierExtension"
        },
        "count": {
            name: "count",
            dataType: integer,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of members of the population in this stratum.",
            path: "MeasureReport.group.stratifier.stratum.population.count"
        },
        "subjectResults": {
            name: "subjectResults",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "This element refers to a List of subject level MeasureReport resources, one for each subject in this population in this stratum.",
            path: "MeasureReport.group.stratifier.stratum.population.subjectResults"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MeasureReport.group.stratifier.stratum.population.id"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MeasureReportGroupStratifierStratumPopulation record {|
    Extension[] extension?;
    CodeableConcept code?;
    Extension[] modifierExtension?;
    integer count?;
    Reference subjectResults?;
    string id?;
|};

# MeasureReportStatus enum
public enum MeasureReportStatus {
   CODE_STATUS_PENDING = "pending",
   CODE_STATUS_COMPLETE = "complete",
   CODE_STATUS_ERROR = "error"
}

# MeasureReportType enum
public enum MeasureReportType {
   CODE_TYPE_SUMMARY = "summary",
   CODE_TYPE_INDIVIDUAL = "individual",
   CODE_TYPE_DATA_COLLECTION = "data-collection",
   CODE_TYPE_SUBJECT_LIST = "subject-list"
}

