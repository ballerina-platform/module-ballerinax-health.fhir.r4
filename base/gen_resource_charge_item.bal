// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.


public const string PROFILE_BASE_CHARGEITEM = "http://hl7.org/fhir/StructureDefinition/ChargeItem";
public const RESOURCE_NAME_CHARGEITEM = "ChargeItem";

# FHIR ChargeItem resource record.
#
# + resourceType - The type of the resource describes
# + note - Comments made about the event by the performer, subject or other participants.
# + partOf - ChargeItems can be grouped to larger ChargeItems covering the whole set.
# + reason - Describes why the event occurred in coded or textual form.
# + definitionCanonical - References the source of pricing information, rules of application for the code this ChargeItem uses.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A code that identifies the charge, like a billing code.
# + subject - The individual or set of individuals the action is being or was performed on.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + overrideReason - If the list price or the rule-based factor associated with the code is overridden, this attribute can capture a text to indicate the reason for this action.
# + productReference - Identifies the device, food, drug or other product being charged either by type code or reference to an instance.
# + language - The base language in which the resource is written.
# + definitionUri - References the (external) source of pricing information, rules of application for the code this ChargeItem uses.
# + performingOrganization - The organization requesting the service.
# + context - The encounter or episode of care that establishes the context for this event.
# + enterer - The device, practitioner, etc. who entered the charge item.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + factorOverride - Factor overriding the factor determined by the rules associated with the code.
# + identifier - Identifiers assigned to this event performer or other systems.
# + bodysite - The anatomical location where the related service has been applied.
# + performer - Indicates who or what performed or participated in the charged service.
# + quantity - Quantity of which the charge item has been serviced.
# + costCenter - The financial cost center permits the tracking of charge attribution.
# + enteredDate - Date the charge item was entered.
# + priceOverride - Total price of the charge overriding the list price associated with the code.
# + supportingInformation - Further information supporting this charge.
# + occurrenceTiming - Date/time(s) or duration when the charged service was applied.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + occurrencePeriod - Date/time(s) or duration when the charged service was applied.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + 'service - Indicated the rendered service that caused this charge.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + occurrenceDateTime - Date/time(s) or duration when the charged service was applied.
# + requestingOrganization - The organization performing the service.
# + account - Account into which this ChargeItems belongs.
# + productCodeableConcept - Identifies the device, food, drug or other product being charged either by type code or reference to an instance.
# + status - The current state of the ChargeItem.
@ResourceDefinition {
    resourceType: "ChargeItem",
    baseType: DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/ChargeItem",
    elements: {
        "note" : {
            name: "note",
            dataType: Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ChargeItem.note"
        },
        "partOf" : {
            name: "partOf",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ChargeItem.partOf"
        },
        "reason" : {
            name: "reason",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ChargeItem.reason",
            valueSet: "http://hl7.org/fhir/ValueSet/icd-10"
        },
        "definitionCanonical" : {
            name: "definitionCanonical",
            dataType: canonical,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ChargeItem.definitionCanonical"
        },
        "extension" : {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ChargeItem.extension"
        },
        "code" : {
            name: "code",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            path: "ChargeItem.code",
            valueSet: "http://hl7.org/fhir/ValueSet/chargeitem-billingcodes"
        },
        "subject" : {
            name: "subject",
            dataType: Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "ChargeItem.subject"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ChargeItem.modifierExtension"
        },
        "overrideReason" : {
            name: "overrideReason",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.overrideReason"
        },
        "productReference" : {
            name: "productReference",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.product[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/device-kind"
        },
        "language" : {
            name: "language",
            dataType: code,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "definitionUri" : {
            name: "definitionUri",
            dataType: uri,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ChargeItem.definitionUri"
        },
        "performingOrganization" : {
            name: "performingOrganization",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.performingOrganization"
        },
        "context" : {
            name: "context",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.context"
        },
        "enterer" : {
            name: "enterer",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.enterer"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.id"
        },
        "text" : {
            name: "text",
            dataType: Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.text"
        },
        "factorOverride" : {
            name: "factorOverride",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.factorOverride"
        },
        "identifier" : {
            name: "identifier",
            dataType: Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ChargeItem.identifier"
        },
        "bodysite" : {
            name: "bodysite",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ChargeItem.bodysite",
            valueSet: "http://hl7.org/fhir/ValueSet/body-site"
        },
        "performer" : {
            name: "performer",
            dataType: ChargeItemPerformer,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ChargeItem.performer"
        },
        "quantity" : {
            name: "quantity",
            dataType: Quantity,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.quantity"
        },
        "costCenter" : {
            name: "costCenter",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.costCenter"
        },
        "enteredDate" : {
            name: "enteredDate",
            dataType: dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.enteredDate"
        },
        "priceOverride" : {
            name: "priceOverride",
            dataType: Money,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.priceOverride"
        },
        "supportingInformation" : {
            name: "supportingInformation",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ChargeItem.supportingInformation"
        },
        "occurrenceTiming" : {
            name: "occurrenceTiming",
            dataType: Timing,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.occurrence[x]"
        },
        "contained" : {
            name: "contained",
            dataType: Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ChargeItem.contained"
        },
        "occurrencePeriod" : {
            name: "occurrencePeriod",
            dataType: Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.occurrence[x]"
        },
        "meta" : {
            name: "meta",
            dataType: Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.meta"
        },
        "service" : {
            name: "service",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ChargeItem.service"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.implicitRules"
        },
        "occurrenceDateTime" : {
            name: "occurrenceDateTime",
            dataType: dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.occurrence[x]"
        },
        "requestingOrganization" : {
            name: "requestingOrganization",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.requestingOrganization"
        },
        "account" : {
            name: "account",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ChargeItem.account"
        },
        "productCodeableConcept" : {
            name: "productCodeableConcept",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ChargeItem.product[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/device-kind"
        },
        "status" : {
            name: "status",
            dataType: ChargeItemStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "ChargeItem.status",
            valueSet: "http://hl7.org/fhir/ValueSet/chargeitem-status|4.0.1"
        }
    },
    serializers: {
        'xml: fhirResourceXMLSerializer,
        'json: fhirResourceJsonSerializer
    }
}
public type ChargeItem record {|
    *DomainResource;

    RESOURCE_NAME_CHARGEITEM resourceType = RESOURCE_NAME_CHARGEITEM;

    BaseChargeItemMeta meta = {
        profile : [PROFILE_BASE_CHARGEITEM]
    };
    Annotation[] note?;
    Reference[] partOf?;
    CodeableConcept[] reason?;
    canonical[] definitionCanonical?;
    Extension[] extension?;
    CodeableConcept code;
    Reference subject;
    Extension[] modifierExtension?;
    string overrideReason?;
    Reference productReference?;
    code language?;
    uri[] definitionUri?;
    Reference performingOrganization?;
    Reference context?;
    Reference enterer?;
    string id?;
    Narrative text?;
    decimal factorOverride?;
    Identifier[] identifier?;
    CodeableConcept[] bodysite?;
    ChargeItemPerformer[] performer?;
    Quantity quantity?;
    Reference costCenter?;
    dateTime enteredDate?;
    Money priceOverride?;
    Reference[] supportingInformation?;
    Timing occurrenceTiming?;
    Resource[] contained?;
    Period occurrencePeriod?;
    Reference[] 'service?;
    uri implicitRules?;
    dateTime occurrenceDateTime?;
    Reference requestingOrganization?;
    Reference[] account?;
    CodeableConcept productCodeableConcept?;
    ChargeItemStatus status;
|};

@DataTypeDefinition {
    name: "BaseChargeItemMeta",
    baseType: Meta,
    elements: {},
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type BaseChargeItemMeta record {|
    *Meta;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)

    id versionId?;
    instant lastUpdated?;
    uri 'source?;
    canonical[] profile = ["http://hl7.org/fhir/StructureDefinition/ChargeItem"];
    Coding[] security?;
    Coding[] tag?;
|};

# ChargeItemStatus enum
public enum ChargeItemStatus {
   CODE_STATUS_NOT_BILLABLE = "not-billable",
   CODE_STATUS_BILLED = "billed",
   CODE_STATUS_ABORTED = "aborted",
   CODE_STATUS_PLANNED = "planned",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error",
   CODE_STATUS_BILLABLE = "billable",
   CODE_STATUS_UNKNOWN = "unknown"
}

# FHIR ChargeItemPerformer datatype record.
#
# + actor - The device, practitioner, etc. who performed or participated in the service.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + 'function - Describes the type of performance or participation(e.g. primary surgeon, anesthesiologiest, etc.).
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@DataTypeDefinition {
    name: "ChargeItemPerformer",
    baseType: (),
    elements: {
        "actor": {
            name: "actor",
            dataType: Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "The device, practitioner, etc. who performed or participated in the service.",
            path: "ChargeItem.performer.actor"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ChargeItem.performer.extension"
        },
        "function": {
            name: "function",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Describes the type of performance or participation(e.g. primary surgeon, anesthesiologiest, etc.).",
            path: "ChargeItem.performer.function"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ChargeItem.performer.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ChargeItem.performer.id"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type ChargeItemPerformer record {|
    Reference actor;
    Extension[] extension?;
    CodeableConcept 'function?;
    Extension[] modifierExtension?;
    string id?;
|};

