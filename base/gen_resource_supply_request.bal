// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.


public const string PROFILE_BASE_SUPPLYREQUEST = "http://hl7.org/fhir/StructureDefinition/SupplyRequest";
public const RESOURCE_NAME_SUPPLYREQUEST = "SupplyRequest";

# FHIR SupplyRequest resource record.
#
# + resourceType - The type of the resource describes
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + deliverFrom - Where the supply is expected to come from.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + reasonReference - The reason why the supply item was requested.
# + language - The base language in which the resource is written.
# + deliverTo - Where the supply is destined to go.
# + itemCodeableConcept - The item that is requested to be supplied. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list.
# + 'parameter - Specific parameters for the ordered item. For example, the size of the indicated item.
# + supplier - Who is intended to fulfill the request.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + reasonCode - The reason why the supply item was requested.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + requester - The device, practitioner, etc. who initiated the request.
# + identifier - Business identifiers assigned to this SupplyRequest by the author and/or other systems. These identifiers remain constant as the resource is updated and propagates from server to server.
# + authoredOn - When the request was made.
# + quantity - The amount that is being ordered of the indicated item.
# + occurrenceTiming - When the request should be fulfilled.
# + priority - Indicates how quickly this SupplyRequest should be addressed with respect to other requests.
# + itemReference - The item that is requested to be supplied. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + occurrencePeriod - When the request should be fulfilled.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + occurrenceDateTime - When the request should be fulfilled.
# + category - Category of supply, e.g. central, non-stock, etc. This is used to support work flows associated with the supply process.
# + status - Status of the supply request.
@ResourceDefinition {
    resourceType: "SupplyRequest",
    baseType: DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/SupplyRequest",
    elements: {
        "extension" : {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "SupplyRequest.extension"
        },
        "deliverFrom" : {
            name: "deliverFrom",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "SupplyRequest.deliverFrom"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "SupplyRequest.modifierExtension"
        },
        "reasonReference" : {
            name: "reasonReference",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "SupplyRequest.reasonReference"
        },
        "language" : {
            name: "language",
            dataType: code,
            min: 0,
            max: 1,
            isArray: false,
            path: "SupplyRequest.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "deliverTo" : {
            name: "deliverTo",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "SupplyRequest.deliverTo"
        },
        "itemCodeableConcept" : {
            name: "itemCodeableConcept",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            path: "SupplyRequest.item[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/supply-item"
        },
        "parameter" : {
            name: "parameter",
            dataType: SupplyRequestParameter,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "SupplyRequest.parameter"
        },
        "supplier" : {
            name: "supplier",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "SupplyRequest.supplier"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "SupplyRequest.id"
        },
        "reasonCode" : {
            name: "reasonCode",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "SupplyRequest.reasonCode",
            valueSet: "http://hl7.org/fhir/ValueSet/supplyrequest-reason"
        },
        "text" : {
            name: "text",
            dataType: Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "SupplyRequest.text"
        },
        "requester" : {
            name: "requester",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "SupplyRequest.requester"
        },
        "identifier" : {
            name: "identifier",
            dataType: Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "SupplyRequest.identifier"
        },
        "authoredOn" : {
            name: "authoredOn",
            dataType: dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "SupplyRequest.authoredOn"
        },
        "quantity" : {
            name: "quantity",
            dataType: Quantity,
            min: 1,
            max: 1,
            isArray: false,
            path: "SupplyRequest.quantity"
        },
        "occurrenceTiming" : {
            name: "occurrenceTiming",
            dataType: Timing,
            min: 0,
            max: 1,
            isArray: false,
            path: "SupplyRequest.occurrence[x]"
        },
        "priority" : {
            name: "priority",
            dataType: SupplyRequestPriority,
            min: 0,
            max: 1,
            isArray: false,
            path: "SupplyRequest.priority",
            valueSet: "http://hl7.org/fhir/ValueSet/request-priority|4.0.1"
        },
        "itemReference" : {
            name: "itemReference",
            dataType: Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "SupplyRequest.item[x]",
            valueSet: "http://hl7.org/fhir/ValueSet/supply-item"
        },
        "contained" : {
            name: "contained",
            dataType: Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "SupplyRequest.contained"
        },
        "occurrencePeriod" : {
            name: "occurrencePeriod",
            dataType: Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "SupplyRequest.occurrence[x]"
        },
        "meta" : {
            name: "meta",
            dataType: Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "SupplyRequest.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "SupplyRequest.implicitRules"
        },
        "occurrenceDateTime" : {
            name: "occurrenceDateTime",
            dataType: dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "SupplyRequest.occurrence[x]"
        },
        "category" : {
            name: "category",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "SupplyRequest.category",
            valueSet: "http://hl7.org/fhir/ValueSet/supplyrequest-kind"
        },
        "status" : {
            name: "status",
            dataType: SupplyRequestStatus,
            min: 0,
            max: 1,
            isArray: false,
            path: "SupplyRequest.status",
            valueSet: "http://hl7.org/fhir/ValueSet/supplyrequest-status|4.0.1"
        }
    },
    serializers: {
        'xml: fhirResourceXMLSerializer,
        'json: fhirResourceJsonSerializer
    }
}
public type SupplyRequest record {|
    *DomainResource;

    RESOURCE_NAME_SUPPLYREQUEST resourceType = RESOURCE_NAME_SUPPLYREQUEST;

    BaseSupplyRequestMeta meta = {
        profile : [PROFILE_BASE_SUPPLYREQUEST]
    };
    Extension[] extension?;
    Reference deliverFrom?;
    Extension[] modifierExtension?;
    Reference[] reasonReference?;
    code language?;
    Reference deliverTo?;
    CodeableConcept itemCodeableConcept;
    SupplyRequestParameter[] 'parameter?;
    Reference[] supplier?;
    string id?;
    CodeableConcept[] reasonCode?;
    Narrative text?;
    Reference requester?;
    Identifier[] identifier?;
    dateTime authoredOn?;
    Quantity quantity;
    Timing occurrenceTiming?;
    SupplyRequestPriority priority?;
    Reference itemReference;
    Resource[] contained?;
    Period occurrencePeriod?;
    uri implicitRules?;
    dateTime occurrenceDateTime?;
    CodeableConcept category?;
    SupplyRequestStatus status?;
|};

@DataTypeDefinition {
    name: "BaseSupplyRequestMeta",
    baseType: Meta,
    elements: {},
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type BaseSupplyRequestMeta record {|
    *Meta;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)

    id versionId?;
    instant lastUpdated?;
    uri 'source?;
    canonical[] profile = ["http://hl7.org/fhir/StructureDefinition/SupplyRequest"];
    Coding[] security?;
    Coding[] tag?;
|};

# SupplyRequestPriority enum
public enum SupplyRequestPriority {
   CODE_PRIORITY_STAT = "stat",
   CODE_PRIORITY_ROUTINE = "routine",
   CODE_PRIORITY_URGENT = "urgent",
   CODE_PRIORITY_ASAP = "asap"
}

# FHIR SupplyRequestParameter datatype record.
#
# + valueCodeableConcept - The value of the device detail.
# + valueBoolean - The value of the device detail.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A code or string that identifies the device detail being asserted.
# + valueRange - The value of the device detail.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + valueQuantity - The value of the device detail.
@DataTypeDefinition {
    name: "SupplyRequestParameter",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the device detail.",
            path: "SupplyRequest.parameter.value[x]"
        },
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the device detail.",
            path: "SupplyRequest.parameter.value[x]"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "SupplyRequest.parameter.extension"
        },
        "code": {
            name: "code",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code or string that identifies the device detail being asserted.",
            path: "SupplyRequest.parameter.code"
        },
        "valueRange": {
            name: "valueRange",
            dataType: Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the device detail.",
            path: "SupplyRequest.parameter.value[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "SupplyRequest.parameter.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "SupplyRequest.parameter.id"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value of the device detail.",
            path: "SupplyRequest.parameter.value[x]"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type SupplyRequestParameter record {|
    CodeableConcept valueCodeableConcept?;
    boolean valueBoolean?;
    Extension[] extension?;
    CodeableConcept code?;
    Range valueRange?;
    Extension[] modifierExtension?;
    string id?;
    Quantity valueQuantity?;
|};

# SupplyRequestStatus enum
public enum SupplyRequestStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_SUSPENDED = "suspended"
}

