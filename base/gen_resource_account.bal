// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.


public const string PROFILE_BASE_ACCOUNT = "http://hl7.org/fhir/StructureDefinition/Account";
public const RESOURCE_NAME_ACCOUNT = "Account";

# FHIR Account resource record.
#
# + resourceType - The type of the resource describes
# + coverage - The party(s) that are responsible for covering the payment of this account, and what order should they be applied to the account.
# + owner - Indicates the service area, hospital, department, etc. with responsibility for managing the Account.
# + identifier - Unique identifier used to reference the account. Might or might not be intended for human use (e.g. credit card number).
# + partOf - Reference to a parent Account.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + subject - Identifies the entity which incurs the expenses. While the immediate recipients of services or goods might be entities related to the subject, the expenses were ultimately incurred by the subject of the Account.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + description - Provides additional information about what the account tracks and how it is used.
# + guarantor - The parties responsible for balancing the account if other payment options fall short.
# + language - The base language in which the resource is written.
# + 'type - Categorizes the account for reporting and searching purposes.
# + servicePeriod - The date range of services associated with this account.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + name - Name used for the account when displaying it to humans in reports, etc.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + status - Indicates whether the account is presently used/usable or not.
@ResourceDefinition {
    resourceType: "Account",
    baseType: DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/Account",
    elements: {
        "coverage" : {
            name: "coverage",
            dataType: AccountCoverage,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Account.coverage"
        },
        "owner" : {
            name: "owner",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Account.owner"
        },
        "identifier" : {
            name: "identifier",
            dataType: Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Account.identifier"
        },
        "partOf" : {
            name: "partOf",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Account.partOf"
        },
        "extension" : {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Account.extension"
        },
        "subject" : {
            name: "subject",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Account.subject"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Account.modifierExtension"
        },
        "description" : {
            name: "description",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Account.description"
        },
        "guarantor" : {
            name: "guarantor",
            dataType: AccountGuarantor,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Account.guarantor"
        },
        "language" : {
            name: "language",
            dataType: code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Account.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "type" : {
            name: "type",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Account.type",
            valueSet: "http://hl7.org/fhir/ValueSet/account-type"
        },
        "servicePeriod" : {
            name: "servicePeriod",
            dataType: Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "Account.servicePeriod"
        },
        "contained" : {
            name: "contained",
            dataType: Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Account.contained"
        },
        "meta" : {
            name: "meta",
            dataType: Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "Account.meta"
        },
        "name" : {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Account.name"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Account.implicitRules"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Account.id"
        },
        "text" : {
            name: "text",
            dataType: Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Account.text"
        },
        "status" : {
            name: "status",
            dataType: AccountStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "Account.status",
            valueSet: "http://hl7.org/fhir/ValueSet/account-status|4.0.1"
        }
    },
    serializers: {
        'xml: fhirResourceXMLSerializer,
        'json: fhirResourceJsonSerializer
    }
}
public type Account record {|
    *DomainResource;

    RESOURCE_NAME_ACCOUNT resourceType = RESOURCE_NAME_ACCOUNT;

    BaseAccountMeta meta = {
        profile : [PROFILE_BASE_ACCOUNT]
    };
    AccountCoverage[] coverage?;
    Reference owner?;
    Identifier[] identifier?;
    Reference partOf?;
    Extension[] extension?;
    Reference[] subject?;
    Extension[] modifierExtension?;
    string description?;
    AccountGuarantor[] guarantor?;
    code language?;
    CodeableConcept 'type?;
    Period servicePeriod?;
    Resource[] contained?;
    string name?;
    uri implicitRules?;
    string id?;
    Narrative text?;
    AccountStatus status;
|};

@DataTypeDefinition {
    name: "BaseAccountMeta",
    baseType: Meta,
    elements: {},
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type BaseAccountMeta record {|
    *Meta;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)

    id versionId?;
    instant lastUpdated?;
    uri 'source?;
    canonical[] profile = ["http://hl7.org/fhir/StructureDefinition/Account"];
    Coding[] security?;
    Coding[] tag?;
|};

# AccountStatus enum
public enum AccountStatus {
   CODE_STATUS_INACTIVE = "inactive",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error",
   CODE_STATUS_ON_HOLD = "on-hold",
   CODE_STATUS_UNKNOWN = "unknown"
}

# FHIR AccountCoverage datatype record.
#
# + coverage - The party(s) that contribute to payment (or part of) of the charges applied to this account (including self-pay). A coverage may only be responsible for specific types of charges, and the sequence of the coverages in the account could be important when processing billing.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + priority - The priority of the coverage in the context of this account.
@DataTypeDefinition {
    name: "AccountCoverage",
    baseType: (),
    elements: {
        "coverage": {
            name: "coverage",
            dataType: Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "The party(s) that contribute to payment (or part of) of the charges applied to this account (including self-pay). A coverage may only be responsible for specific types of charges, and the sequence of the coverages in the account could be important when processing billing.",
            path: "Account.coverage.coverage"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Account.coverage.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Account.coverage.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Account.coverage.id"
        },
        "priority": {
            name: "priority",
            dataType: positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The priority of the coverage in the context of this account.",
            path: "Account.coverage.priority"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type AccountCoverage record {|
    Reference coverage;
    Extension[] extension?;
    Extension[] modifierExtension?;
    string id?;
    positiveInt priority?;
|};

# FHIR AccountGuarantor datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - The timeframe during which the guarantor accepts responsibility for the account.
# + onHold - A guarantor may be placed on credit hold or otherwise have their role temporarily suspended.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + party - The entity who is responsible.
@DataTypeDefinition {
    name: "AccountGuarantor",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Account.guarantor.extension"
        },
        "period": {
            name: "period",
            dataType: Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The timeframe during which the guarantor accepts responsibility for the account.",
            path: "Account.guarantor.period"
        },
        "onHold": {
            name: "onHold",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "A guarantor may be placed on credit hold or otherwise have their role temporarily suspended.",
            path: "Account.guarantor.onHold"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Account.guarantor.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Account.guarantor.id"
        },
        "party": {
            name: "party",
            dataType: Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "The entity who is responsible.",
            path: "Account.guarantor.party"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type AccountGuarantor record {|
    Extension[] extension?;
    Period period?;
    boolean onHold?;
    Extension[] modifierExtension?;
    string id?;
    Reference party;
|};

