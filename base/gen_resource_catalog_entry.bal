// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.


public const string PROFILE_BASE_CATALOGENTRY = "http://hl7.org/fhir/StructureDefinition/CatalogEntry";
public const RESOURCE_NAME_CATALOGENTRY = "CatalogEntry";

# FHIR CatalogEntry resource record.
#
# + resourceType - The type of the resource describes
# + additionalClassification - User for example for ATC classification, or.
# + identifier - Used in supporting different identifiers for the same product, e.g. manufacturer code and retailer code.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + relatedEntry - Used for example, to point to a substance, or to a device used to administer a medication.
# + orderable - Whether the entry represents an orderable item.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - The base language in which the resource is written.
# + additionalIdentifier - Used in supporting related concepts, e.g. NDC to RxNorm.
# + classification - Classes of devices, or ATC for medication.
# + 'type - The type of item - medication, device, service, protocol or other.
# + validityPeriod - The time period in which this catalog entry is expected to be active.
# + lastUpdated - Typically date of issue is different from the beginning of the validity. This can be used to see when an item was last updated.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + additionalCharacteristic - Used for examplefor Out of Formulary, or any specifics.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + referencedItem - The item in a catalog or definition.
# + status - Used to support catalog exchange even for unsupported products, e.g. getting list of medications even if not prescribable.
# + validTo - The date until which this catalog entry is expected to be active.
@ResourceDefinition {
    resourceType: "CatalogEntry",
    baseType: DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/CatalogEntry",
    elements: {
        "additionalClassification" : {
            name: "additionalClassification",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CatalogEntry.additionalClassification"
        },
        "identifier" : {
            name: "identifier",
            dataType: Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CatalogEntry.identifier"
        },
        "extension" : {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CatalogEntry.extension"
        },
        "relatedEntry" : {
            name: "relatedEntry",
            dataType: CatalogEntryRelatedEntry,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CatalogEntry.relatedEntry"
        },
        "orderable" : {
            name: "orderable",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            path: "CatalogEntry.orderable"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CatalogEntry.modifierExtension"
        },
        "language" : {
            name: "language",
            dataType: code,
            min: 0,
            max: 1,
            isArray: false,
            path: "CatalogEntry.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "additionalIdentifier" : {
            name: "additionalIdentifier",
            dataType: Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CatalogEntry.additionalIdentifier"
        },
        "classification" : {
            name: "classification",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CatalogEntry.classification"
        },
        "type" : {
            name: "type",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "CatalogEntry.type"
        },
        "validityPeriod" : {
            name: "validityPeriod",
            dataType: Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "CatalogEntry.validityPeriod"
        },
        "lastUpdated" : {
            name: "lastUpdated",
            dataType: dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "CatalogEntry.lastUpdated"
        },
        "contained" : {
            name: "contained",
            dataType: Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CatalogEntry.contained"
        },
        "meta" : {
            name: "meta",
            dataType: Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "CatalogEntry.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "CatalogEntry.implicitRules"
        },
        "additionalCharacteristic" : {
            name: "additionalCharacteristic",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "CatalogEntry.additionalCharacteristic"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "CatalogEntry.id"
        },
        "text" : {
            name: "text",
            dataType: Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "CatalogEntry.text"
        },
        "referencedItem" : {
            name: "referencedItem",
            dataType: Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "CatalogEntry.referencedItem"
        },
        "status" : {
            name: "status",
            dataType: CatalogEntryStatus,
            min: 0,
            max: 1,
            isArray: false,
            path: "CatalogEntry.status",
            valueSet: "http://hl7.org/fhir/ValueSet/publication-status|4.0.1"
        },
        "validTo" : {
            name: "validTo",
            dataType: dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "CatalogEntry.validTo"
        }
    },
    serializers: {
        'xml: fhirResourceXMLSerializer,
        'json: fhirResourceJsonSerializer
    }
}
public type CatalogEntry record {|
    *DomainResource;

    RESOURCE_NAME_CATALOGENTRY resourceType = RESOURCE_NAME_CATALOGENTRY;

    BaseCatalogEntryMeta meta = {
        profile : [PROFILE_BASE_CATALOGENTRY]
    };
    CodeableConcept[] additionalClassification?;
    Identifier[] identifier?;
    Extension[] extension?;
    CatalogEntryRelatedEntry[] relatedEntry?;
    boolean orderable;
    Extension[] modifierExtension?;
    code language?;
    Identifier[] additionalIdentifier?;
    CodeableConcept[] classification?;
    CodeableConcept 'type?;
    Period validityPeriod?;
    dateTime lastUpdated?;
    Resource[] contained?;
    uri implicitRules?;
    CodeableConcept[] additionalCharacteristic?;
    string id?;
    Narrative text?;
    Reference referencedItem;
    CatalogEntryStatus status?;
    dateTime validTo?;
|};

@DataTypeDefinition {
    name: "BaseCatalogEntryMeta",
    baseType: Meta,
    elements: {},
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type BaseCatalogEntryMeta record {|
    *Meta;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)

    id versionId?;
    instant lastUpdated?;
    uri 'source?;
    canonical[] profile = ["http://hl7.org/fhir/StructureDefinition/CatalogEntry"];
    Coding[] security?;
    Coding[] tag?;
|};

# CatalogEntryRelatedEntryRelationtype enum
public enum CatalogEntryRelatedEntryRelationtype {
   CODE_RELATIONTYPE_IS_REPLACED_BY = "is-replaced-by",
   CODE_RELATIONTYPE_TRIGGERS = "triggers"
}

# CatalogEntryStatus enum
public enum CatalogEntryStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_RETIRED = "retired",
   CODE_STATUS_UNKNOWN = "unknown"
}

# FHIR CatalogEntryRelatedEntry datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + item - The reference to the related item.
# + relationtype - The type of relation to the related item: child, parent, packageContent, containerPackage, usedIn, uses, requires, etc.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@DataTypeDefinition {
    name: "CatalogEntryRelatedEntry",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "CatalogEntry.relatedEntry.extension"
        },
        "item": {
            name: "item",
            dataType: Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "The reference to the related item.",
            path: "CatalogEntry.relatedEntry.item"
        },
        "relationtype": {
            name: "relationtype",
            dataType: CatalogEntryRelatedEntryRelationtype,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of relation to the related item: child, parent, packageContent, containerPackage, usedIn, uses, requires, etc.",
            path: "CatalogEntry.relatedEntry.relationtype"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "CatalogEntry.relatedEntry.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "CatalogEntry.relatedEntry.id"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type CatalogEntryRelatedEntry record {|
    Extension[] extension?;
    Reference item;
    CatalogEntryRelatedEntryRelationtype relationtype;
    Extension[] modifierExtension?;
    string id?;
|};

