// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.


public const string PROFILE_BASE_MEDICINALPRODUCTINGREDIENT = "http://hl7.org/fhir/StructureDefinition/MedicinalProductIngredient";
public const RESOURCE_NAME_MEDICINALPRODUCTINGREDIENT = "MedicinalProductIngredient";

# FHIR MedicinalProductIngredient resource record.
#
# + resourceType - The type of the resource describes
# + identifier - The identifier(s) of this Ingredient that are assigned by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + role - Ingredient role e.g. Active ingredient, excipient.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + substance - The ingredient substance.
# + language - The base language in which the resource is written.
# + allergenicIndicator - If the ingredient is a known or suspected allergen.
# + manufacturer - Manufacturer of this Ingredient.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + specifiedSubstance - A specified substance that comprises this ingredient.
@ResourceDefinition {
    resourceType: "MedicinalProductIngredient",
    baseType: DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/MedicinalProductIngredient",
    elements: {
        "identifier" : {
            name: "identifier",
            dataType: Identifier,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProductIngredient.identifier"
        },
        "extension" : {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProductIngredient.extension"
        },
        "role" : {
            name: "role",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            path: "MedicinalProductIngredient.role"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProductIngredient.modifierExtension"
        },
        "substance" : {
            name: "substance",
            dataType: MedicinalProductIngredientSubstance,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProductIngredient.substance"
        },
        "language" : {
            name: "language",
            dataType: code,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProductIngredient.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "allergenicIndicator" : {
            name: "allergenicIndicator",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProductIngredient.allergenicIndicator"
        },
        "manufacturer" : {
            name: "manufacturer",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProductIngredient.manufacturer"
        },
        "contained" : {
            name: "contained",
            dataType: Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProductIngredient.contained"
        },
        "meta" : {
            name: "meta",
            dataType: Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProductIngredient.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProductIngredient.implicitRules"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProductIngredient.id"
        },
        "text" : {
            name: "text",
            dataType: Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProductIngredient.text"
        },
        "specifiedSubstance" : {
            name: "specifiedSubstance",
            dataType: MedicinalProductIngredientSpecifiedSubstance,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProductIngredient.specifiedSubstance"
        }
    },
    serializers: {
        'xml: fhirResourceXMLSerializer,
        'json: fhirResourceJsonSerializer
    }
}
public type MedicinalProductIngredient record {|
    *DomainResource;

    RESOURCE_NAME_MEDICINALPRODUCTINGREDIENT resourceType = RESOURCE_NAME_MEDICINALPRODUCTINGREDIENT;

    BaseMedicinalProductIngredientMeta meta = {
        profile : [PROFILE_BASE_MEDICINALPRODUCTINGREDIENT]
    };
    Identifier identifier?;
    Extension[] extension?;
    CodeableConcept role;
    Extension[] modifierExtension?;
    MedicinalProductIngredientSubstance substance?;
    code language?;
    boolean allergenicIndicator?;
    Reference[] manufacturer?;
    Resource[] contained?;
    uri implicitRules?;
    string id?;
    Narrative text?;
    MedicinalProductIngredientSpecifiedSubstance[] specifiedSubstance?;
|};

@DataTypeDefinition {
    name: "BaseMedicinalProductIngredientMeta",
    baseType: Meta,
    elements: {},
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type BaseMedicinalProductIngredientMeta record {|
    *Meta;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)

    id versionId?;
    instant lastUpdated?;
    uri 'source?;
    canonical[] profile = ["http://hl7.org/fhir/StructureDefinition/MedicinalProductIngredient"];
    Coding[] security?;
    Coding[] tag?;
|};

# FHIR MedicinalProductIngredientSpecifiedSubstanceStrengthReferenceStrength datatype record.
#
# + country - The country or countries for which the strength range applies.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + strength - Strength expressed in terms of a reference substance.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + substance - Relevant reference substance.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + strengthLowLimit - Strength expressed in terms of a reference substance.
# + measurementPoint - For when strength is measured at a particular point or distance.
@DataTypeDefinition {
    name: "MedicinalProductIngredientSpecifiedSubstanceStrengthReferenceStrength",
    baseType: (),
    elements: {
        "country": {
            name: "country",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The country or countries for which the strength range applies.",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.country"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.extension"
        },
        "strength": {
            name: "strength",
            dataType: Ratio,
            min: 1,
            max: 1,
            isArray: false,
            description: "Strength expressed in terms of a reference substance.",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strength"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.modifierExtension"
        },
        "substance": {
            name: "substance",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Relevant reference substance.",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.substance"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.id"
        },
        "strengthLowLimit": {
            name: "strengthLowLimit",
            dataType: Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "Strength expressed in terms of a reference substance.",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strengthLowLimit"
        },
        "measurementPoint": {
            name: "measurementPoint",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "For when strength is measured at a particular point or distance.",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.measurementPoint"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicinalProductIngredientSpecifiedSubstanceStrengthReferenceStrength record {|
    CodeableConcept[] country?;
    Extension[] extension?;
    Ratio strength;
    Extension[] modifierExtension?;
    CodeableConcept substance?;
    string id?;
    Ratio strengthLowLimit?;
    string measurementPoint?;
|};

# FHIR MedicinalProductIngredientSpecifiedSubstanceStrength datatype record.
#
# + concentrationLowLimit - A lower limit for the strength per unitary volume (or mass), for when there is a range. The concentration attribute then becomes the upper limit.
# + presentation - The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item.
# + country - The country or countries for which the strength range applies.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + referenceStrength - Strength expressed in terms of a reference substance.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + concentration - The strength per unitary volume (or mass).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + measurementPoint - For when strength is measured at a particular point or distance.
# + presentationLowLimit - A lower limit for the quantity of substance in the unit of presentation. For use when there is a range of strengths, this is the lower limit, with the presentation attribute becoming the upper limit.
@DataTypeDefinition {
    name: "MedicinalProductIngredientSpecifiedSubstanceStrength",
    baseType: (),
    elements: {
        "concentrationLowLimit": {
            name: "concentrationLowLimit",
            dataType: Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "A lower limit for the strength per unitary volume (or mass), for when there is a range. The concentration attribute then becomes the upper limit.",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.concentrationLowLimit"
        },
        "presentation": {
            name: "presentation",
            dataType: Ratio,
            min: 1,
            max: 1,
            isArray: false,
            description: "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item.",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.presentation"
        },
        "country": {
            name: "country",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The country or countries for which the strength range applies.",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.country"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.extension"
        },
        "referenceStrength": {
            name: "referenceStrength",
            dataType: MedicinalProductIngredientSpecifiedSubstanceStrengthReferenceStrength,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Strength expressed in terms of a reference substance.",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.modifierExtension"
        },
        "concentration": {
            name: "concentration",
            dataType: Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "The strength per unitary volume (or mass).",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.concentration"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.id"
        },
        "measurementPoint": {
            name: "measurementPoint",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "For when strength is measured at a particular point or distance.",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.measurementPoint"
        },
        "presentationLowLimit": {
            name: "presentationLowLimit",
            dataType: Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "A lower limit for the quantity of substance in the unit of presentation. For use when there is a range of strengths, this is the lower limit, with the presentation attribute becoming the upper limit.",
            path: "MedicinalProductIngredient.specifiedSubstance.strength.presentationLowLimit"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicinalProductIngredientSpecifiedSubstanceStrength record {|
    Ratio concentrationLowLimit?;
    Ratio presentation;
    CodeableConcept[] country?;
    Extension[] extension?;
    MedicinalProductIngredientSpecifiedSubstanceStrengthReferenceStrength[] referenceStrength?;
    Extension[] modifierExtension?;
    Ratio concentration?;
    string id?;
    string measurementPoint?;
    Ratio presentationLowLimit?;
|};

# FHIR MedicinalProductIngredientSubstance datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - The ingredient substance.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@DataTypeDefinition {
    name: "MedicinalProductIngredientSubstance",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicinalProductIngredient.substance.extension"
        },
        "code": {
            name: "code",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The ingredient substance.",
            path: "MedicinalProductIngredient.substance.code"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicinalProductIngredient.substance.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicinalProductIngredient.substance.id"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicinalProductIngredientSubstance record {|
    Extension[] extension?;
    CodeableConcept code;
    Extension[] modifierExtension?;
    string id?;
|};

# FHIR MedicinalProductIngredientSpecifiedSubstance datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - The specified substance.
# + strength - Quantity of the substance or specified substance present in the manufactured item or pharmaceutical product.
# + confidentiality - Confidentiality level of the specified substance as the ingredient.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + group - The group of specified substance, e.g. group 1 to 4.
@DataTypeDefinition {
    name: "MedicinalProductIngredientSpecifiedSubstance",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicinalProductIngredient.specifiedSubstance.extension"
        },
        "code": {
            name: "code",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The specified substance.",
            path: "MedicinalProductIngredient.specifiedSubstance.code"
        },
        "strength": {
            name: "strength",
            dataType: MedicinalProductIngredientSpecifiedSubstanceStrength,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Quantity of the substance or specified substance present in the manufactured item or pharmaceutical product.",
            path: "MedicinalProductIngredient.specifiedSubstance.strength"
        },
        "confidentiality": {
            name: "confidentiality",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Confidentiality level of the specified substance as the ingredient.",
            path: "MedicinalProductIngredient.specifiedSubstance.confidentiality"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicinalProductIngredient.specifiedSubstance.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicinalProductIngredient.specifiedSubstance.id"
        },
        "group": {
            name: "group",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The group of specified substance, e.g. group 1 to 4.",
            path: "MedicinalProductIngredient.specifiedSubstance.group"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicinalProductIngredientSpecifiedSubstance record {|
    Extension[] extension?;
    CodeableConcept code;
    MedicinalProductIngredientSpecifiedSubstanceStrength[] strength?;
    CodeableConcept confidentiality?;
    Extension[] modifierExtension?;
    string id?;
    CodeableConcept group;
|};

