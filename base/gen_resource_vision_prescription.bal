// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;

public const string PROFILE_BASE_VISIONPRESCRIPTION = "http://hl7.org/fhir/StructureDefinition/VisionPrescription";
public const RESOURCE_NAME_VISIONPRESCRIPTION = "VisionPrescription";

# FHIR VisionPrescription resource record.
#
# + resourceType - The type of the resource describes
# + prescriber - The healthcare professional responsible for authorizing the prescription.
# + identifier - A unique identifier assigned to this vision prescription.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + created - The date this resource was created.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - The base language in which the resource is written.
# + encounter - A reference to a resource that identifies the particular occurrence of contact between patient and health care provider during which the prescription was issued.
# + lensSpecification - Contain the details of the individual lens specifications and serves as the authorization for the fullfillment by certified professionals.
# + dateWritten - The date (and perhaps time) when the prescription was written.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + patient - A resource reference to the person to whom the vision prescription applies.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + status - The status of the resource instance.
@ResourceDefinition {
    resourceType: "VisionPrescription",
    baseType: DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/VisionPrescription",
    elements: {
        "prescriber" : {
            name: "prescriber",
            dataType: Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "VisionPrescription.prescriber"
        },
        "identifier" : {
            name: "identifier",
            dataType: Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "VisionPrescription.identifier"
        },
        "extension" : {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "VisionPrescription.extension"
        },
        "created" : {
            name: "created",
            dataType: dateTime,
            min: 1,
            max: 1,
            isArray: false,
            path: "VisionPrescription.created"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "VisionPrescription.modifierExtension"
        },
        "language" : {
            name: "language",
            dataType: code,
            min: 0,
            max: 1,
            isArray: false,
            path: "VisionPrescription.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "encounter" : {
            name: "encounter",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "VisionPrescription.encounter"
        },
        "lensSpecification" : {
            name: "lensSpecification",
            dataType: VisionPrescriptionLensSpecification,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "VisionPrescription.lensSpecification"
        },
        "dateWritten" : {
            name: "dateWritten",
            dataType: dateTime,
            min: 1,
            max: 1,
            isArray: false,
            path: "VisionPrescription.dateWritten"
        },
        "contained" : {
            name: "contained",
            dataType: Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "VisionPrescription.contained"
        },
        "meta" : {
            name: "meta",
            dataType: Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "VisionPrescription.meta"
        },
        "patient" : {
            name: "patient",
            dataType: Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "VisionPrescription.patient"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "VisionPrescription.implicitRules"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "VisionPrescription.id"
        },
        "text" : {
            name: "text",
            dataType: Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "VisionPrescription.text"
        },
        "status" : {
            name: "status",
            dataType: VisionPrescriptionStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "VisionPrescription.status",
            valueSet: "http://hl7.org/fhir/ValueSet/fm-status|4.0.1"
        }
    },
    serializers: {
        'xml: fhirResourceXMLSerializer,
        'json: fhirResourceJsonSerializer
    }
}
public type VisionPrescription record {|
    *DomainResource;

    RESOURCE_NAME_VISIONPRESCRIPTION resourceType = RESOURCE_NAME_VISIONPRESCRIPTION;

    BaseVisionPrescriptionMeta meta = {
        profile : [PROFILE_BASE_VISIONPRESCRIPTION]
    };
    Reference prescriber;
    Identifier[] identifier?;
    Extension[] extension?;
    dateTime created;
    Extension[] modifierExtension?;
    code language?;
    Reference encounter?;
    @constraint:Array {
       minLength: 1
    }
    VisionPrescriptionLensSpecification[] lensSpecification;
    dateTime dateWritten;
    Resource[] contained?;
    Reference patient;
    uri implicitRules?;
    string id?;
    Narrative text?;
    VisionPrescriptionStatus status;
|};

@DataTypeDefinition {
    name: "BaseVisionPrescriptionMeta",
    baseType: Meta,
    elements: {},
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type BaseVisionPrescriptionMeta record {|
    *Meta;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)

    id versionId?;
    instant lastUpdated?;
    uri 'source?;
    canonical[] profile = ["http://hl7.org/fhir/StructureDefinition/VisionPrescription"];
    Coding[] security?;
    Coding[] tag?;
|};

# VisionPrescriptionLensSpecificationEye enum
public enum VisionPrescriptionLensSpecificationEye {
   CODE_EYE_LEFT = "left",
   CODE_EYE_RIGHT = "right"
}

# VisionPrescriptionStatus enum
public enum VisionPrescriptionStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_CANCELLED = "cancelled",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error"
}

# FHIR VisionPrescriptionLensSpecification datatype record.
#
# + add - Power adjustment for multifocal lenses measured in dioptres (0.25 units).
# + note - Notes for special requirements such as coatings and lens materials.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + product - Identifies the type of vision correction product which is required for the patient.
# + backCurve - Back curvature measured in millimetres.
# + color - Special color or pattern.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + axis - Adjustment for astigmatism measured in integer degrees.
# + duration - The recommended maximum wear period for the lens.
# + eye - The eye for which the lens specification applies.
# + diameter - Contact lens diameter measured in millimetres.
# + sphere - Lens power measured in dioptres (0.25 units).
# + cylinder - Power adjustment for astigmatism measured in dioptres (0.25 units).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + power - Contact lens power measured in dioptres (0.25 units).
# + brand - Brand recommendations or restrictions.
# + prism - Allows for adjustment on two axis.
@DataTypeDefinition {
    name: "VisionPrescriptionLensSpecification",
    baseType: (),
    elements: {
        "add": {
            name: "add",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "Power adjustment for multifocal lenses measured in dioptres (0.25 units).",
            path: "VisionPrescription.lensSpecification.add"
        },
        "note": {
            name: "note",
            dataType: Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Notes for special requirements such as coatings and lens materials.",
            path: "VisionPrescription.lensSpecification.note"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "VisionPrescription.lensSpecification.extension"
        },
        "product": {
            name: "product",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Identifies the type of vision correction product which is required for the patient.",
            path: "VisionPrescription.lensSpecification.product"
        },
        "backCurve": {
            name: "backCurve",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "Back curvature measured in millimetres.",
            path: "VisionPrescription.lensSpecification.backCurve"
        },
        "color": {
            name: "color",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Special color or pattern.",
            path: "VisionPrescription.lensSpecification.color"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "VisionPrescription.lensSpecification.modifierExtension"
        },
        "axis": {
            name: "axis",
            dataType: integer,
            min: 0,
            max: 1,
            isArray: false,
            description: "Adjustment for astigmatism measured in integer degrees.",
            path: "VisionPrescription.lensSpecification.axis"
        },
        "duration": {
            name: "duration",
            dataType: Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The recommended maximum wear period for the lens.",
            path: "VisionPrescription.lensSpecification.duration"
        },
        "eye": {
            name: "eye",
            dataType: VisionPrescriptionLensSpecificationEye,
            min: 1,
            max: 1,
            isArray: false,
            description: "The eye for which the lens specification applies.",
            path: "VisionPrescription.lensSpecification.eye"
        },
        "diameter": {
            name: "diameter",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "Contact lens diameter measured in millimetres.",
            path: "VisionPrescription.lensSpecification.diameter"
        },
        "sphere": {
            name: "sphere",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "Lens power measured in dioptres (0.25 units).",
            path: "VisionPrescription.lensSpecification.sphere"
        },
        "cylinder": {
            name: "cylinder",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "Power adjustment for astigmatism measured in dioptres (0.25 units).",
            path: "VisionPrescription.lensSpecification.cylinder"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "VisionPrescription.lensSpecification.id"
        },
        "power": {
            name: "power",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "Contact lens power measured in dioptres (0.25 units).",
            path: "VisionPrescription.lensSpecification.power"
        },
        "brand": {
            name: "brand",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Brand recommendations or restrictions.",
            path: "VisionPrescription.lensSpecification.brand"
        },
        "prism": {
            name: "prism",
            dataType: VisionPrescriptionLensSpecificationPrism,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Allows for adjustment on two axis.",
            path: "VisionPrescription.lensSpecification.prism"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type VisionPrescriptionLensSpecification record {|
    decimal add?;
    Annotation[] note?;
    Extension[] extension?;
    CodeableConcept product;
    decimal backCurve?;
    string color?;
    Extension[] modifierExtension?;
    integer axis?;
    Quantity duration?;
    VisionPrescriptionLensSpecificationEye eye;
    decimal diameter?;
    decimal sphere?;
    decimal cylinder?;
    string id?;
    decimal power?;
    string brand?;
    VisionPrescriptionLensSpecificationPrism[] prism?;
|};

# FHIR VisionPrescriptionLensSpecificationPrism datatype record.
#
# + amount - Amount of prism to compensate for eye alignment in fractional units.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + base - The relative base, or reference lens edge, for the prism.
@DataTypeDefinition {
    name: "VisionPrescriptionLensSpecificationPrism",
    baseType: (),
    elements: {
        "amount": {
            name: "amount",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Amount of prism to compensate for eye alignment in fractional units.",
            path: "VisionPrescription.lensSpecification.prism.amount"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "VisionPrescription.lensSpecification.prism.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "VisionPrescription.lensSpecification.prism.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "VisionPrescription.lensSpecification.prism.id"
        },
        "base": {
            name: "base",
            dataType: VisionPrescriptionLensSpecificationPrismBase,
            min: 1,
            max: 1,
            isArray: false,
            description: "The relative base, or reference lens edge, for the prism.",
            path: "VisionPrescription.lensSpecification.prism.base"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type VisionPrescriptionLensSpecificationPrism record {|
    decimal amount;
    Extension[] extension?;
    Extension[] modifierExtension?;
    string id?;
    VisionPrescriptionLensSpecificationPrismBase base;
|};

# VisionPrescriptionLensSpecificationPrismBase enum
public enum VisionPrescriptionLensSpecificationPrismBase {
   CODE_BASE_IN = "in",
   CODE_BASE_UP = "up",
   CODE_BASE_DOWN = "down",
   CODE_BASE_OUT = "out"
}

