// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;

public const string PROFILE_BASE_OPERATIONOUTCOME = "http://hl7.org/fhir/StructureDefinition/OperationOutcome";
public const RESOURCE_NAME_OPERATIONOUTCOME = "OperationOutcome";

# FHIR OperationOutcome resource record.
#
# + resourceType - The type of the resource describes
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + issue - An error, warning, or information message that results from a system action.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + language - The base language in which the resource is written.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
@ResourceDefinition {
    resourceType: "OperationOutcome",
    baseType: DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/OperationOutcome",
    elements: {
        "contained" : {
            name: "contained",
            dataType: Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "OperationOutcome.contained"
        },
        "extension" : {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "OperationOutcome.extension"
        },
        "issue" : {
            name: "issue",
            dataType: OperationOutcomeIssue,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "OperationOutcome.issue"
        },
        "meta" : {
            name: "meta",
            dataType: Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "OperationOutcome.meta"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "OperationOutcome.modifierExtension"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "OperationOutcome.implicitRules"
        },
        "language" : {
            name: "language",
            dataType: code,
            min: 0,
            max: 1,
            isArray: false,
            path: "OperationOutcome.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "OperationOutcome.id"
        },
        "text" : {
            name: "text",
            dataType: Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "OperationOutcome.text"
        }
    },
    serializers: {
        'xml: fhirResourceXMLSerializer,
        'json: fhirResourceJsonSerializer
    }
}
public type OperationOutcome record {|
    *DomainResource;

    RESOURCE_NAME_OPERATIONOUTCOME resourceType = RESOURCE_NAME_OPERATIONOUTCOME;

    BaseOperationOutcomeMeta meta = {
        profile : [PROFILE_BASE_OPERATIONOUTCOME]
    };
    Resource[] contained?;
    Extension[] extension?;
    @constraint:Array {
       minLength: 1
    }
    OperationOutcomeIssue[] issue;
    Extension[] modifierExtension?;
    uri implicitRules?;
    code language?;
    string id?;
    Narrative text?;
|};

@DataTypeDefinition {
    name: "BaseOperationOutcomeMeta",
    baseType: Meta,
    elements: {},
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type BaseOperationOutcomeMeta record {|
    *Meta;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)

    id versionId?;
    instant lastUpdated?;
    uri 'source?;
    canonical[] profile = ["http://hl7.org/fhir/StructureDefinition/OperationOutcome"];
    Coding[] security?;
    Coding[] tag?;
|};

# OperationOutcomeIssueSeverity enum
public enum OperationOutcomeIssueSeverity {
   CODE_SEVERITY_WARNING = "warning",
   CODE_SEVERITY_INFORMATION = "information",
   CODE_SEVERITY_ERROR = "error",
   CODE_SEVERITY_FATAL = "fatal"
}

# FHIR OperationOutcomeIssue datatype record.
#
# + severity - Indicates whether the issue indicates a variation from successful processing.
# + diagnostics - Additional diagnostic information about the issue.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element.
# + expression - A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + details - Additional details about the error. This may be a text description of the error or a system code that identifies the error.
# + location - This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. For resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised. For HTTP errors, will be 'http.' + the parameter name.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@DataTypeDefinition {
    name: "OperationOutcomeIssue",
    baseType: (),
    elements: {
        "severity": {
            name: "severity",
            dataType: OperationOutcomeIssueSeverity,
            min: 1,
            max: 1,
            isArray: false,
            description: "Indicates whether the issue indicates a variation from successful processing.",
            path: "OperationOutcome.issue.severity"
        },
        "diagnostics": {
            name: "diagnostics",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional diagnostic information about the issue.",
            path: "OperationOutcome.issue.diagnostics"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "OperationOutcome.issue.extension"
        },
        "code": {
            name: "code",
            dataType: code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element.",
            path: "OperationOutcome.issue.code"
        },
        "expression": {
            name: "expression",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.",
            path: "OperationOutcome.issue.expression"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "OperationOutcome.issue.modifierExtension"
        },
        "details": {
            name: "details",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional details about the error. This may be a text description of the error or a system code that identifies the error.",
            path: "OperationOutcome.issue.details"
        },
        "location": {
            name: "location",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. For resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised. For HTTP errors, will be 'http.' + the parameter name.",
            path: "OperationOutcome.issue.location"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "OperationOutcome.issue.id"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type OperationOutcomeIssue record {|
    OperationOutcomeIssueSeverity severity;
    string diagnostics?;
    Extension[] extension?;
    code code;
    string[] expression?;
    Extension[] modifierExtension?;
    CodeableConcept details?;
    string[] location?;
    string id?;
|};

