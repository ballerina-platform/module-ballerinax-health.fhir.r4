// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.


public const string PROFILE_BASE_RISKEVIDENCESYNTHESIS = "http://hl7.org/fhir/StructureDefinition/RiskEvidenceSynthesis";
public const RESOURCE_NAME_RISKEVIDENCESYNTHESIS = "RiskEvidenceSynthesis";

# FHIR RiskEvidenceSynthesis resource record.
#
# + resourceType - The type of the resource describes
# + date - The date (and optionally time) when the risk evidence synthesis was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the risk evidence synthesis changes.
# + note - A human-readable string to clarify or explain concepts about the resource.
# + copyright - A copyright statement relating to the risk evidence synthesis and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the risk evidence synthesis.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + approvalDate - The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.
# + jurisdiction - A legal or geographic region in which the risk evidence synthesis is intended to be used.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + description - A free text natural language description of the risk evidence synthesis from a consumer's perspective.
# + language - The base language in which the resource is written.
# + sampleSize - A description of the size of the sample involved in the synthesis.
# + title - A short, descriptive, user-friendly title for the risk evidence synthesis.
# + studyType - Type of study eg randomized trial.
# + contact - Contact details to assist a user in finding and communicating with the publisher.
# + endorser - An individual or organization responsible for officially endorsing the content for use in some setting.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + riskEstimate - The estimated risk of the outcome.
# + outcome - A reference to a EvidenceVariable resomece that defines the outcome for the research.
# + editor - An individual or organization primarily responsible for internal coherence of the content.
# + identifier - A formal identifier that is used to identify this risk evidence synthesis when it is represented in other formats, or referenced in a specification, model, design or an instance.
# + relatedArtifact - Related artifacts such as additional documentation, justification, or bibliographic references.
# + effectivePeriod - The period during which the risk evidence synthesis content was or is planned to be in active use.
# + author - An individiual or organization primarily involved in the creation and maintenance of the content.
# + certainty - A description of the certainty of the risk estimate.
# + reviewer - An individual or organization primarily responsible for review of some aspect of the content.
# + 'version - The identifier that is used to identify this version of the risk evidence synthesis when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the risk evidence synthesis author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
# + url - An absolute URI that is used to identify this risk evidence synthesis when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this risk evidence synthesis is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the risk evidence synthesis is stored on different servers.
# + population - A reference to a EvidenceVariable resource that defines the population for the research.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + exposure - A reference to a EvidenceVariable resource that defines the exposure for the research.
# + lastReviewDate - The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + synthesisType - Type of synthesis eg meta-analysis.
# + name - A natural language name identifying the risk evidence synthesis. This name should be usable as an identifier for the module by machine processing applications such as code generation.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + publisher - The name of the organization or individual that published the risk evidence synthesis.
# + topic - Descriptive topics related to the content of the RiskEvidenceSynthesis. Topics provide a high-level categorization grouping types of EffectEvidenceSynthesiss that can be useful for filtering and searching.
# + useContext - The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate risk evidence synthesis instances.
# + status - The status of this risk evidence synthesis. Enables tracking the life-cycle of the content.
@ResourceDefinition {
    resourceType: "RiskEvidenceSynthesis",
    baseType: DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/RiskEvidenceSynthesis",
    elements: {
        "date" : {
            name: "date",
            dataType: dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.date"
        },
        "note" : {
            name: "note",
            dataType: Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskEvidenceSynthesis.note"
        },
        "copyright" : {
            name: "copyright",
            dataType: markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.copyright"
        },
        "extension" : {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskEvidenceSynthesis.extension"
        },
        "approvalDate" : {
            name: "approvalDate",
            dataType: date,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.approvalDate"
        },
        "jurisdiction" : {
            name: "jurisdiction",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskEvidenceSynthesis.jurisdiction",
            valueSet: "http://hl7.org/fhir/ValueSet/jurisdiction"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskEvidenceSynthesis.modifierExtension"
        },
        "description" : {
            name: "description",
            dataType: markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.description"
        },
        "language" : {
            name: "language",
            dataType: code,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "sampleSize" : {
            name: "sampleSize",
            dataType: RiskEvidenceSynthesisSampleSize,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.sampleSize"
        },
        "title" : {
            name: "title",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.title"
        },
        "studyType" : {
            name: "studyType",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.studyType",
            valueSet: "http://hl7.org/fhir/ValueSet/study-type"
        },
        "contact" : {
            name: "contact",
            dataType: ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskEvidenceSynthesis.contact"
        },
        "endorser" : {
            name: "endorser",
            dataType: ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskEvidenceSynthesis.endorser"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.id"
        },
        "text" : {
            name: "text",
            dataType: Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.text"
        },
        "riskEstimate" : {
            name: "riskEstimate",
            dataType: RiskEvidenceSynthesisRiskEstimate,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.riskEstimate"
        },
        "outcome" : {
            name: "outcome",
            dataType: Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.outcome"
        },
        "editor" : {
            name: "editor",
            dataType: ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskEvidenceSynthesis.editor"
        },
        "identifier" : {
            name: "identifier",
            dataType: Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskEvidenceSynthesis.identifier"
        },
        "relatedArtifact" : {
            name: "relatedArtifact",
            dataType: RelatedArtifact,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskEvidenceSynthesis.relatedArtifact"
        },
        "effectivePeriod" : {
            name: "effectivePeriod",
            dataType: Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.effectivePeriod"
        },
        "author" : {
            name: "author",
            dataType: ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskEvidenceSynthesis.author"
        },
        "certainty" : {
            name: "certainty",
            dataType: RiskEvidenceSynthesisCertainty,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskEvidenceSynthesis.certainty"
        },
        "reviewer" : {
            name: "reviewer",
            dataType: ContactDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskEvidenceSynthesis.reviewer"
        },
        "version" : {
            name: "version",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.version"
        },
        "url" : {
            name: "url",
            dataType: uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.url"
        },
        "population" : {
            name: "population",
            dataType: Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.population"
        },
        "contained" : {
            name: "contained",
            dataType: Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskEvidenceSynthesis.contained"
        },
        "exposure" : {
            name: "exposure",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.exposure"
        },
        "lastReviewDate" : {
            name: "lastReviewDate",
            dataType: date,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.lastReviewDate"
        },
        "meta" : {
            name: "meta",
            dataType: Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.meta"
        },
        "synthesisType" : {
            name: "synthesisType",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.synthesisType",
            valueSet: "http://hl7.org/fhir/ValueSet/synthesis-type"
        },
        "name" : {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.name"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.implicitRules"
        },
        "publisher" : {
            name: "publisher",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.publisher"
        },
        "topic" : {
            name: "topic",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskEvidenceSynthesis.topic",
            valueSet: "http://hl7.org/fhir/ValueSet/definition-topic"
        },
        "useContext" : {
            name: "useContext",
            dataType: UsageContext,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RiskEvidenceSynthesis.useContext"
        },
        "status" : {
            name: "status",
            dataType: RiskEvidenceSynthesisStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "RiskEvidenceSynthesis.status",
            valueSet: "http://hl7.org/fhir/ValueSet/publication-status|4.0.1"
        }
    },
    serializers: {
        'xml: fhirResourceXMLSerializer,
        'json: fhirResourceJsonSerializer
    }
}
public type RiskEvidenceSynthesis record {|
    *DomainResource;

    RESOURCE_NAME_RISKEVIDENCESYNTHESIS resourceType = RESOURCE_NAME_RISKEVIDENCESYNTHESIS;

    BaseRiskEvidenceSynthesisMeta meta = {
        profile : [PROFILE_BASE_RISKEVIDENCESYNTHESIS]
    };
    dateTime date?;
    Annotation[] note?;
    markdown copyright?;
    Extension[] extension?;
    date approvalDate?;
    CodeableConcept[] jurisdiction?;
    Extension[] modifierExtension?;
    markdown description?;
    code language?;
    RiskEvidenceSynthesisSampleSize sampleSize?;
    string title?;
    CodeableConcept studyType?;
    ContactDetail[] contact?;
    ContactDetail[] endorser?;
    string id?;
    Narrative text?;
    RiskEvidenceSynthesisRiskEstimate riskEstimate?;
    Reference outcome;
    ContactDetail[] editor?;
    Identifier[] identifier?;
    RelatedArtifact[] relatedArtifact?;
    Period effectivePeriod?;
    ContactDetail[] author?;
    RiskEvidenceSynthesisCertainty[] certainty?;
    ContactDetail[] reviewer?;
    string 'version?;
    uri url?;
    Reference population;
    Resource[] contained?;
    Reference exposure?;
    date lastReviewDate?;
    CodeableConcept synthesisType?;
    string name?;
    uri implicitRules?;
    string publisher?;
    CodeableConcept[] topic?;
    UsageContext[] useContext?;
    RiskEvidenceSynthesisStatus status;
|};

@DataTypeDefinition {
    name: "BaseRiskEvidenceSynthesisMeta",
    baseType: Meta,
    elements: {},
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type BaseRiskEvidenceSynthesisMeta record {|
    *Meta;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)

    id versionId?;
    instant lastUpdated?;
    uri 'source?;
    canonical[] profile = ["http://hl7.org/fhir/StructureDefinition/RiskEvidenceSynthesis"];
    Coding[] security?;
    Coding[] tag?;
|};

# FHIR RiskEvidenceSynthesisRiskEstimate datatype record.
#
# + numeratorCount - The number of group members with the outcome of interest.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + unitOfMeasure - Specifies the UCUM unit for the outcome.
# + denominatorCount - The sample size for the group that was measured for this risk estimate.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + precisionEstimate - A description of the precision of the estimate for the effect.
# + description - Human-readable summary of risk estimate.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Examples include proportion and mean.
# + value - The point estimate of the risk estimate.
@DataTypeDefinition {
    name: "RiskEvidenceSynthesisRiskEstimate",
    baseType: (),
    elements: {
        "numeratorCount": {
            name: "numeratorCount",
            dataType: integer,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of group members with the outcome of interest.",
            path: "RiskEvidenceSynthesis.riskEstimate.numeratorCount"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RiskEvidenceSynthesis.riskEstimate.extension"
        },
        "unitOfMeasure": {
            name: "unitOfMeasure",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Specifies the UCUM unit for the outcome.",
            path: "RiskEvidenceSynthesis.riskEstimate.unitOfMeasure"
        },
        "denominatorCount": {
            name: "denominatorCount",
            dataType: integer,
            min: 0,
            max: 1,
            isArray: false,
            description: "The sample size for the group that was measured for this risk estimate.",
            path: "RiskEvidenceSynthesis.riskEstimate.denominatorCount"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RiskEvidenceSynthesis.riskEstimate.modifierExtension"
        },
        "precisionEstimate": {
            name: "precisionEstimate",
            dataType: RiskEvidenceSynthesisRiskEstimatePrecisionEstimate,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A description of the precision of the estimate for the effect.",
            path: "RiskEvidenceSynthesis.riskEstimate.precisionEstimate"
        },
        "description": {
            name: "description",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Human-readable summary of risk estimate.",
            path: "RiskEvidenceSynthesis.riskEstimate.description"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RiskEvidenceSynthesis.riskEstimate.id"
        },
        "type": {
            name: "type",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Examples include proportion and mean.",
            path: "RiskEvidenceSynthesis.riskEstimate.type"
        },
        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "The point estimate of the risk estimate.",
            path: "RiskEvidenceSynthesis.riskEstimate.value"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type RiskEvidenceSynthesisRiskEstimate record {|
    integer numeratorCount?;
    Extension[] extension?;
    CodeableConcept unitOfMeasure?;
    integer denominatorCount?;
    Extension[] modifierExtension?;
    RiskEvidenceSynthesisRiskEstimatePrecisionEstimate[] precisionEstimate?;
    string description?;
    string id?;
    CodeableConcept 'type?;
    decimal value?;
|};

# FHIR RiskEvidenceSynthesisRiskEstimatePrecisionEstimate datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + level - Use 95 for a 95% confidence interval.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + 'from - Lower bound of confidence interval.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + to - Upper bound of confidence interval.
# + 'type - Examples include confidence interval and interquartile range.
@DataTypeDefinition {
    name: "RiskEvidenceSynthesisRiskEstimatePrecisionEstimate",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RiskEvidenceSynthesis.riskEstimate.precisionEstimate.extension"
        },
        "level": {
            name: "level",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "Use 95 for a 95% confidence interval.",
            path: "RiskEvidenceSynthesis.riskEstimate.precisionEstimate.level"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RiskEvidenceSynthesis.riskEstimate.precisionEstimate.modifierExtension"
        },
        "from": {
            name: "from",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "Lower bound of confidence interval.",
            path: "RiskEvidenceSynthesis.riskEstimate.precisionEstimate.from"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RiskEvidenceSynthesis.riskEstimate.precisionEstimate.id"
        },
        "to": {
            name: "to",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "Upper bound of confidence interval.",
            path: "RiskEvidenceSynthesis.riskEstimate.precisionEstimate.to"
        },
        "type": {
            name: "type",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Examples include confidence interval and interquartile range.",
            path: "RiskEvidenceSynthesis.riskEstimate.precisionEstimate.type"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type RiskEvidenceSynthesisRiskEstimatePrecisionEstimate record {|
    Extension[] extension?;
    decimal level?;
    Extension[] modifierExtension?;
    decimal 'from?;
    string id?;
    decimal to?;
    CodeableConcept 'type?;
|};

# FHIR RiskEvidenceSynthesisCertainty datatype record.
#
# + note - A human-readable string to clarify or explain concepts about the resource.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + rating - A rating of the certainty of the effect estimate.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + certaintySubcomponent - A description of a component of the overall certainty.
@DataTypeDefinition {
    name: "RiskEvidenceSynthesisCertainty",
    baseType: (),
    elements: {
        "note": {
            name: "note",
            dataType: Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A human-readable string to clarify or explain concepts about the resource.",
            path: "RiskEvidenceSynthesis.certainty.note"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RiskEvidenceSynthesis.certainty.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RiskEvidenceSynthesis.certainty.modifierExtension"
        },
        "rating": {
            name: "rating",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A rating of the certainty of the effect estimate.",
            path: "RiskEvidenceSynthesis.certainty.rating"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RiskEvidenceSynthesis.certainty.id"
        },
        "certaintySubcomponent": {
            name: "certaintySubcomponent",
            dataType: RiskEvidenceSynthesisCertaintyCertaintySubcomponent,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A description of a component of the overall certainty.",
            path: "RiskEvidenceSynthesis.certainty.certaintySubcomponent"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type RiskEvidenceSynthesisCertainty record {|
    Annotation[] note?;
    Extension[] extension?;
    Extension[] modifierExtension?;
    CodeableConcept[] rating?;
    string id?;
    RiskEvidenceSynthesisCertaintyCertaintySubcomponent[] certaintySubcomponent?;
|};

# RiskEvidenceSynthesisStatus enum
public enum RiskEvidenceSynthesisStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_RETIRED = "retired",
   CODE_STATUS_UNKNOWN = "unknown"
}

# FHIR RiskEvidenceSynthesisSampleSize datatype record.
#
# + numberOfParticipants - Number of participants included in this evidence synthesis.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + description - Human-readable summary of sample size.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + numberOfStudies - Number of studies included in this evidence synthesis.
@DataTypeDefinition {
    name: "RiskEvidenceSynthesisSampleSize",
    baseType: (),
    elements: {
        "numberOfParticipants": {
            name: "numberOfParticipants",
            dataType: integer,
            min: 0,
            max: 1,
            isArray: false,
            description: "Number of participants included in this evidence synthesis.",
            path: "RiskEvidenceSynthesis.sampleSize.numberOfParticipants"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RiskEvidenceSynthesis.sampleSize.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RiskEvidenceSynthesis.sampleSize.modifierExtension"
        },
        "description": {
            name: "description",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Human-readable summary of sample size.",
            path: "RiskEvidenceSynthesis.sampleSize.description"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RiskEvidenceSynthesis.sampleSize.id"
        },
        "numberOfStudies": {
            name: "numberOfStudies",
            dataType: integer,
            min: 0,
            max: 1,
            isArray: false,
            description: "Number of studies included in this evidence synthesis.",
            path: "RiskEvidenceSynthesis.sampleSize.numberOfStudies"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type RiskEvidenceSynthesisSampleSize record {|
    integer numberOfParticipants?;
    Extension[] extension?;
    Extension[] modifierExtension?;
    string description?;
    string id?;
    integer numberOfStudies?;
|};

# FHIR RiskEvidenceSynthesisCertaintyCertaintySubcomponent datatype record.
#
# + note - A human-readable string to clarify or explain concepts about the resource.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + rating - A rating of a subcomponent of rating certainty.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Type of subcomponent of certainty rating.
@DataTypeDefinition {
    name: "RiskEvidenceSynthesisCertaintyCertaintySubcomponent",
    baseType: (),
    elements: {
        "note": {
            name: "note",
            dataType: Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A human-readable string to clarify or explain concepts about the resource.",
            path: "RiskEvidenceSynthesis.certainty.certaintySubcomponent.note"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RiskEvidenceSynthesis.certainty.certaintySubcomponent.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RiskEvidenceSynthesis.certainty.certaintySubcomponent.modifierExtension"
        },
        "rating": {
            name: "rating",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A rating of a subcomponent of rating certainty.",
            path: "RiskEvidenceSynthesis.certainty.certaintySubcomponent.rating"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RiskEvidenceSynthesis.certainty.certaintySubcomponent.id"
        },
        "type": {
            name: "type",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Type of subcomponent of certainty rating.",
            path: "RiskEvidenceSynthesis.certainty.certaintySubcomponent.type"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type RiskEvidenceSynthesisCertaintyCertaintySubcomponent record {|
    Annotation[] note?;
    Extension[] extension?;
    Extension[] modifierExtension?;
    CodeableConcept[] rating?;
    string id?;
    CodeableConcept 'type?;
|};

