// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;

public const string PROFILE_BASE_MEDICINALPRODUCT = "http://hl7.org/fhir/StructureDefinition/MedicinalProduct";
public const RESOURCE_NAME_MEDICINALPRODUCT = "MedicinalProduct";

# FHIR MedicinalProduct resource record.
#
# + resourceType - The type of the resource describes
# + attachedDocument - Supporting documentation, typically for regulatory submission.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + crossReference - Reference to another product, e.g. for linking authorised to investigational product.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + pharmaceuticalProduct - Pharmaceutical aspects of product.
# + language - The base language in which the resource is written.
# + 'type - Regulatory type, e.g. Investigational or Authorized.
# + marketingStatus - Marketing status of the medicinal product, in contrast to marketing authorizaton.
# + masterFile - A master file for to the medicinal product (e.g. Pharmacovigilance System Master File).
# + productClassification - Allows the product to be classified by various systems.
# + contact - A product specific contact, person (in a role), or an organization.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + paediatricUseIndicator - If authorised for use in children.
# + identifier - Business identifier for this product. Could be an MPID.
# + manufacturingBusinessOperation - An operation applied to the product, for manufacturing or adminsitrative purpose.
# + additionalMonitoringIndicator - Whether the Medicinal Product is subject to additional monitoring for regulatory reasons.
# + packagedMedicinalProduct - Package representation for the product.
# + specialMeasures - Whether the Medicinal Product is subject to special measures for regulatory reasons.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + legalStatusOfSupply - The legal status of supply of the medicinal product as classified by the regulator.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + domain - If this medicine applies to human or veterinary uses.
# + name - The product's name, including full name and possibly coded parts.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + specialDesignation - Indicates if the medicinal product has an orphan designation for the treatment of a rare disease.
# + clinicalTrial - Clinical trials or studies that this product is involved in.
# + combinedPharmaceuticalDoseForm - The dose form for a single part product, or combined form of a multiple part product.
@ResourceDefinition {
    resourceType: "MedicinalProduct",
    baseType: DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/MedicinalProduct",
    elements: {
        "attachedDocument" : {
            name: "attachedDocument",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.attachedDocument"
        },
        "extension" : {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.extension"
        },
        "crossReference" : {
            name: "crossReference",
            dataType: Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.crossReference"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.modifierExtension"
        },
        "pharmaceuticalProduct" : {
            name: "pharmaceuticalProduct",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.pharmaceuticalProduct"
        },
        "language" : {
            name: "language",
            dataType: code,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProduct.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "type" : {
            name: "type",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProduct.type"
        },
        "marketingStatus" : {
            name: "marketingStatus",
            dataType: MarketingStatus,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.marketingStatus"
        },
        "masterFile" : {
            name: "masterFile",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.masterFile"
        },
        "productClassification" : {
            name: "productClassification",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.productClassification"
        },
        "contact" : {
            name: "contact",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.contact"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProduct.id"
        },
        "text" : {
            name: "text",
            dataType: Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProduct.text"
        },
        "paediatricUseIndicator" : {
            name: "paediatricUseIndicator",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProduct.paediatricUseIndicator"
        },
        "identifier" : {
            name: "identifier",
            dataType: Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.identifier"
        },
        "manufacturingBusinessOperation" : {
            name: "manufacturingBusinessOperation",
            dataType: MedicinalProductManufacturingBusinessOperation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.manufacturingBusinessOperation"
        },
        "additionalMonitoringIndicator" : {
            name: "additionalMonitoringIndicator",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProduct.additionalMonitoringIndicator"
        },
        "packagedMedicinalProduct" : {
            name: "packagedMedicinalProduct",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.packagedMedicinalProduct"
        },
        "specialMeasures" : {
            name: "specialMeasures",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.specialMeasures"
        },
        "contained" : {
            name: "contained",
            dataType: Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.contained"
        },
        "legalStatusOfSupply" : {
            name: "legalStatusOfSupply",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProduct.legalStatusOfSupply"
        },
        "meta" : {
            name: "meta",
            dataType: Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProduct.meta"
        },
        "domain" : {
            name: "domain",
            dataType: Coding,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProduct.domain"
        },
        "name" : {
            name: "name",
            dataType: MedicinalProductName,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.name"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProduct.implicitRules"
        },
        "specialDesignation" : {
            name: "specialDesignation",
            dataType: MedicinalProductSpecialDesignation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.specialDesignation"
        },
        "clinicalTrial" : {
            name: "clinicalTrial",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicinalProduct.clinicalTrial"
        },
        "combinedPharmaceuticalDoseForm" : {
            name: "combinedPharmaceuticalDoseForm",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicinalProduct.combinedPharmaceuticalDoseForm"
        }
    },
    serializers: {
        'xml: fhirResourceXMLSerializer,
        'json: fhirResourceJsonSerializer
    }
}
public type MedicinalProduct record {|
    *DomainResource;

    RESOURCE_NAME_MEDICINALPRODUCT resourceType = RESOURCE_NAME_MEDICINALPRODUCT;

    BaseMedicinalProductMeta meta = {
        profile : [PROFILE_BASE_MEDICINALPRODUCT]
    };
    Reference[] attachedDocument?;
    Extension[] extension?;
    Identifier[] crossReference?;
    Extension[] modifierExtension?;
    Reference[] pharmaceuticalProduct?;
    code language?;
    CodeableConcept 'type?;
    MarketingStatus[] marketingStatus?;
    Reference[] masterFile?;
    CodeableConcept[] productClassification?;
    Reference[] contact?;
    string id?;
    Narrative text?;
    CodeableConcept paediatricUseIndicator?;
    Identifier[] identifier?;
    MedicinalProductManufacturingBusinessOperation[] manufacturingBusinessOperation?;
    CodeableConcept additionalMonitoringIndicator?;
    Reference[] packagedMedicinalProduct?;
    string[] specialMeasures?;
    Resource[] contained?;
    CodeableConcept legalStatusOfSupply?;
    Coding domain?;
    @constraint:Array {
       minLength: 1
    }
    MedicinalProductName[] name;
    uri implicitRules?;
    MedicinalProductSpecialDesignation[] specialDesignation?;
    Reference[] clinicalTrial?;
    CodeableConcept combinedPharmaceuticalDoseForm?;
|};

@DataTypeDefinition {
    name: "BaseMedicinalProductMeta",
    baseType: Meta,
    elements: {},
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type BaseMedicinalProductMeta record {|
    *Meta;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)

    id versionId?;
    instant lastUpdated?;
    uri 'source?;
    canonical[] profile = ["http://hl7.org/fhir/StructureDefinition/MedicinalProduct"];
    Coding[] security?;
    Coding[] tag?;
|};

# FHIR MedicinalProductNameCountryLanguage datatype record.
#
# + country - Country code for where this name applies.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + jurisdiction - Jurisdiction code for where this name applies.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - Language code for this name.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@DataTypeDefinition {
    name: "MedicinalProductNameCountryLanguage",
    baseType: (),
    elements: {
        "country": {
            name: "country",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Country code for where this name applies.",
            path: "MedicinalProduct.name.countryLanguage.country"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicinalProduct.name.countryLanguage.extension"
        },
        "jurisdiction": {
            name: "jurisdiction",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Jurisdiction code for where this name applies.",
            path: "MedicinalProduct.name.countryLanguage.jurisdiction"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicinalProduct.name.countryLanguage.modifierExtension"
        },
        "language": {
            name: "language",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Language code for this name.",
            path: "MedicinalProduct.name.countryLanguage.language"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicinalProduct.name.countryLanguage.id"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicinalProductNameCountryLanguage record {|
    CodeableConcept country;
    Extension[] extension?;
    CodeableConcept jurisdiction?;
    Extension[] modifierExtension?;
    CodeableConcept language;
    string id?;
|};

# FHIR MedicinalProductSpecialDesignation datatype record.
#
# + date - Date when the designation was granted.
# + identifier - Identifier for the designation, or procedure number.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + species - Animal species for which this applies.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + intendedUse - The intended use of the product, e.g. prevention, treatment.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + indicationReference - Condition for which the medicinal use applies.
# + 'type - The type of special designation, e.g. orphan drug, minor use.
# + indicationCodeableConcept - Condition for which the medicinal use applies.
# + status - For example granted, pending, expired or withdrawn.
@DataTypeDefinition {
    name: "MedicinalProductSpecialDesignation",
    baseType: (),
    elements: {
        "date": {
            name: "date",
            dataType: dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "Date when the designation was granted.",
            path: "MedicinalProduct.specialDesignation.date"
        },
        "identifier": {
            name: "identifier",
            dataType: Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifier for the designation, or procedure number.",
            path: "MedicinalProduct.specialDesignation.identifier"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicinalProduct.specialDesignation.extension"
        },
        "species": {
            name: "species",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Animal species for which this applies.",
            path: "MedicinalProduct.specialDesignation.species"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicinalProduct.specialDesignation.modifierExtension"
        },
        "intendedUse": {
            name: "intendedUse",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The intended use of the product, e.g. prevention, treatment.",
            path: "MedicinalProduct.specialDesignation.intendedUse"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicinalProduct.specialDesignation.id"
        },
        "indicationReference": {
            name: "indicationReference",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Condition for which the medicinal use applies.",
            path: "MedicinalProduct.specialDesignation.indication[x]"
        },
        "type": {
            name: "type",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of special designation, e.g. orphan drug, minor use.",
            path: "MedicinalProduct.specialDesignation.type"
        },
        "indicationCodeableConcept": {
            name: "indicationCodeableConcept",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Condition for which the medicinal use applies.",
            path: "MedicinalProduct.specialDesignation.indication[x]"
        },
        "status": {
            name: "status",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "For example granted, pending, expired or withdrawn.",
            path: "MedicinalProduct.specialDesignation.status"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicinalProductSpecialDesignation record {|
    dateTime date?;
    Identifier[] identifier?;
    Extension[] extension?;
    CodeableConcept species?;
    Extension[] modifierExtension?;
    CodeableConcept intendedUse?;
    string id?;
    Reference indicationReference?;
    CodeableConcept 'type?;
    CodeableConcept indicationCodeableConcept?;
    CodeableConcept status?;
|};

# FHIR MedicinalProductName datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + countryLanguage - Country where the name applies.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + namePart - Coding words or phrases of the name.
# + productName - The full product name.
@DataTypeDefinition {
    name: "MedicinalProductName",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicinalProduct.name.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicinalProduct.name.modifierExtension"
        },
        "countryLanguage": {
            name: "countryLanguage",
            dataType: MedicinalProductNameCountryLanguage,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Country where the name applies.",
            path: "MedicinalProduct.name.countryLanguage"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicinalProduct.name.id"
        },
        "namePart": {
            name: "namePart",
            dataType: MedicinalProductNameNamePart,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Coding words or phrases of the name.",
            path: "MedicinalProduct.name.namePart"
        },
        "productName": {
            name: "productName",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The full product name.",
            path: "MedicinalProduct.name.productName"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicinalProductName record {|
    Extension[] extension?;
    Extension[] modifierExtension?;
    MedicinalProductNameCountryLanguage[] countryLanguage?;
    string id?;
    MedicinalProductNameNamePart[] namePart?;
    string productName;
|};

# FHIR MedicinalProductNameNamePart datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + part - A fragment of a product name.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Idenifying type for this part of the name (e.g. strength part).
@DataTypeDefinition {
    name: "MedicinalProductNameNamePart",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicinalProduct.name.namePart.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicinalProduct.name.namePart.modifierExtension"
        },
        "part": {
            name: "part",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "A fragment of a product name.",
            path: "MedicinalProduct.name.namePart.part"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicinalProduct.name.namePart.id"
        },
        "type": {
            name: "type",
            dataType: Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Idenifying type for this part of the name (e.g. strength part).",
            path: "MedicinalProduct.name.namePart.type"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicinalProductNameNamePart record {|
    Extension[] extension?;
    Extension[] modifierExtension?;
    string part;
    string id?;
    Coding 'type;
|};

# FHIR MedicinalProductManufacturingBusinessOperation datatype record.
#
# + confidentialityIndicator - To indicate if this proces is commercially confidential.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + authorisationReferenceNumber - Regulatory authorization reference number.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + regulator - A regulator which oversees the operation.
# + operationType - The type of manufacturing operation.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + effectiveDate - Regulatory authorization date.
# + manufacturer - The manufacturer or establishment associated with the process.
@DataTypeDefinition {
    name: "MedicinalProductManufacturingBusinessOperation",
    baseType: (),
    elements: {
        "confidentialityIndicator": {
            name: "confidentialityIndicator",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "To indicate if this proces is commercially confidential.",
            path: "MedicinalProduct.manufacturingBusinessOperation.confidentialityIndicator"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicinalProduct.manufacturingBusinessOperation.extension"
        },
        "authorisationReferenceNumber": {
            name: "authorisationReferenceNumber",
            dataType: Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "Regulatory authorization reference number.",
            path: "MedicinalProduct.manufacturingBusinessOperation.authorisationReferenceNumber"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicinalProduct.manufacturingBusinessOperation.modifierExtension"
        },
        "regulator": {
            name: "regulator",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "A regulator which oversees the operation.",
            path: "MedicinalProduct.manufacturingBusinessOperation.regulator"
        },
        "operationType": {
            name: "operationType",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of manufacturing operation.",
            path: "MedicinalProduct.manufacturingBusinessOperation.operationType"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicinalProduct.manufacturingBusinessOperation.id"
        },
        "effectiveDate": {
            name: "effectiveDate",
            dataType: dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "Regulatory authorization date.",
            path: "MedicinalProduct.manufacturingBusinessOperation.effectiveDate"
        },
        "manufacturer": {
            name: "manufacturer",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The manufacturer or establishment associated with the process.",
            path: "MedicinalProduct.manufacturingBusinessOperation.manufacturer"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicinalProductManufacturingBusinessOperation record {|
    CodeableConcept confidentialityIndicator?;
    Extension[] extension?;
    Identifier authorisationReferenceNumber?;
    Extension[] modifierExtension?;
    Reference regulator?;
    CodeableConcept operationType?;
    string id?;
    dateTime effectiveDate?;
    Reference[] manufacturer?;
|};

