// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.


public const string PROFILE_BASE_REQUESTGROUP = "http://hl7.org/fhir/StructureDefinition/RequestGroup";
public const RESOURCE_NAME_REQUESTGROUP = "RequestGroup";

# FHIR RequestGroup resource record.
#
# + resourceType - The type of the resource describes
# + note - Provides a mechanism to communicate additional information about the response.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A code that identifies what the overall request group is.
# + subject - The subject for which the request group was created.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + reasonReference - Indicates another resource whose existence justifies this request group.
# + language - The base language in which the resource is written.
# + instantiatesUri - A URL referencing an externally defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.
# + action - The actions, if any, produced by the evaluation of the artifact.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + reasonCode - Describes the reason for the request group in coded or textual form.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + basedOn - A plan, proposal or order that is fulfilled in whole or in part by this request.
# + identifier - Allows a service to provide a unique, business identifier for the request.
# + authoredOn - Indicates when the request group was created.
# + author - Provides a reference to the author of the request group.
# + replaces - Completed or terminated request(s) whose function is taken by this new request.
# + encounter - Describes the context of the request group, if any.
# + instantiatesCanonical - A canonical URL referencing a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.
# + priority - Indicates how quickly the request should be addressed with respect to other requests.
# + intent - Indicates the level of authority/intentionality associated with the request and where the request fits into the workflow chain.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + groupIdentifier - A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition, prescription or similar form.
# + status - The current state of the request. For request groups, the status reflects the status of all the requests in the group.
@ResourceDefinition {
    resourceType: "RequestGroup",
    baseType: DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/RequestGroup",
    elements: {
        "note" : {
            name: "note",
            dataType: Annotation,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestGroup.note"
        },
        "extension" : {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestGroup.extension"
        },
        "code" : {
            name: "code",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestGroup.code"
        },
        "subject" : {
            name: "subject",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestGroup.subject"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestGroup.modifierExtension"
        },
        "reasonReference" : {
            name: "reasonReference",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestGroup.reasonReference"
        },
        "language" : {
            name: "language",
            dataType: code,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestGroup.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "instantiatesUri" : {
            name: "instantiatesUri",
            dataType: uri,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestGroup.instantiatesUri"
        },
        "action" : {
            name: "action",
            dataType: RequestGroupAction,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestGroup.action"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestGroup.id"
        },
        "reasonCode" : {
            name: "reasonCode",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestGroup.reasonCode"
        },
        "text" : {
            name: "text",
            dataType: Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestGroup.text"
        },
        "basedOn" : {
            name: "basedOn",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestGroup.basedOn"
        },
        "identifier" : {
            name: "identifier",
            dataType: Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestGroup.identifier"
        },
        "authoredOn" : {
            name: "authoredOn",
            dataType: dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestGroup.authoredOn"
        },
        "author" : {
            name: "author",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestGroup.author"
        },
        "replaces" : {
            name: "replaces",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestGroup.replaces"
        },
        "encounter" : {
            name: "encounter",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestGroup.encounter"
        },
        "instantiatesCanonical" : {
            name: "instantiatesCanonical",
            dataType: canonical,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestGroup.instantiatesCanonical"
        },
        "priority" : {
            name: "priority",
            dataType: RequestGroupActionPriority,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestGroup.priority",
            valueSet: "http://hl7.org/fhir/ValueSet/request-priority|4.0.1"
        },
        "intent" : {
            name: "intent",
            dataType: RequestGroupIntent,
            min: 1,
            max: 1,
            isArray: false,
            path: "RequestGroup.intent",
            valueSet: "http://hl7.org/fhir/ValueSet/request-intent|4.0.1"
        },
        "contained" : {
            name: "contained",
            dataType: Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "RequestGroup.contained"
        },
        "meta" : {
            name: "meta",
            dataType: Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestGroup.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestGroup.implicitRules"
        },
        "groupIdentifier" : {
            name: "groupIdentifier",
            dataType: Identifier,
            min: 0,
            max: 1,
            isArray: false,
            path: "RequestGroup.groupIdentifier"
        },
        "status" : {
            name: "status",
            dataType: RequestGroupStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "RequestGroup.status",
            valueSet: "http://hl7.org/fhir/ValueSet/request-status|4.0.1"
        }
    },
    serializers: {
        'xml: fhirResourceXMLSerializer,
        'json: fhirResourceJsonSerializer
    }
}
public type RequestGroup record {|
    *DomainResource;

    RESOURCE_NAME_REQUESTGROUP resourceType = RESOURCE_NAME_REQUESTGROUP;

    BaseRequestGroupMeta meta = {
        profile : [PROFILE_BASE_REQUESTGROUP]
    };
    Annotation[] note?;
    Extension[] extension?;
    CodeableConcept code?;
    Reference subject?;
    Extension[] modifierExtension?;
    Reference[] reasonReference?;
    code language?;
    uri[] instantiatesUri?;
    RequestGroupAction[] action?;
    string id?;
    CodeableConcept[] reasonCode?;
    Narrative text?;
    Reference[] basedOn?;
    Identifier[] identifier?;
    dateTime authoredOn?;
    Reference author?;
    Reference[] replaces?;
    Reference encounter?;
    canonical[] instantiatesCanonical?;
    RequestGroupActionPriority priority?;
    RequestGroupIntent intent;
    Resource[] contained?;
    uri implicitRules?;
    Identifier groupIdentifier?;
    RequestGroupStatus status;
|};

@DataTypeDefinition {
    name: "BaseRequestGroupMeta",
    baseType: Meta,
    elements: {},
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type BaseRequestGroupMeta record {|
    *Meta;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)

    id versionId?;
    instant lastUpdated?;
    uri 'source?;
    canonical[] profile = ["http://hl7.org/fhir/StructureDefinition/RequestGroup"];
    Coding[] security?;
    Coding[] tag?;
|};

# RequestGroupIntent enum
public enum RequestGroupIntent {
   CODE_INTENT_PROPOSAL = "proposal",
   CODE_INTENT_INSTANCE_ORDER = "instance-order",
   CODE_INTENT_FILLER_ORDER = "filler-order",
   CODE_INTENT_ORIGINAL_ORDER = "original-order",
   CODE_INTENT_REFLEX_ORDER = "reflex-order",
   CODE_INTENT_PLAN = "plan",
   CODE_INTENT_DIRECTIVE = "directive",
   CODE_INTENT_ORDER = "order",
   CODE_INTENT_OPTION = "option"
}

# RequestGroupActionGroupingBehavior enum
public enum RequestGroupActionGroupingBehavior {
   CODE_GROUPINGBEHAVIOR_VISUAL_GROUP = "visual-group",
   CODE_GROUPINGBEHAVIOR_SENTENCE_GROUP = "sentence-group",
   CODE_GROUPINGBEHAVIOR_LOGICAL_GROUP = "logical-group"
}

# FHIR RequestGroupActionCondition datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + expression - An expression that returns true or false, indicating whether or not the condition is satisfied.
# + kind - The kind of condition.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@DataTypeDefinition {
    name: "RequestGroupActionCondition",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RequestGroup.action.condition.extension"
        },
        "expression": {
            name: "expression",
            dataType: Expression,
            min: 0,
            max: 1,
            isArray: false,
            description: "An expression that returns true or false, indicating whether or not the condition is satisfied.",
            path: "RequestGroup.action.condition.expression"
        },
        "kind": {
            name: "kind",
            dataType: RequestGroupActionConditionKind,
            min: 1,
            max: 1,
            isArray: false,
            description: "The kind of condition.",
            path: "RequestGroup.action.condition.kind"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RequestGroup.action.condition.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RequestGroup.action.condition.id"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type RequestGroupActionCondition record {|
    Extension[] extension?;
    Expression expression?;
    RequestGroupActionConditionKind kind;
    Extension[] modifierExtension?;
    string id?;
|};

# RequestGroupStatus enum
public enum RequestGroupStatus {
   CODE_STATUS_DRAFT = "draft",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_COMPLETED = "completed",
   CODE_STATUS_REVOKED = "revoked",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error",
   CODE_STATUS_ON_HOLD = "on-hold",
   CODE_STATUS_UNKNOWN = "unknown"
}

# RequestGroupActionPriority enum
public enum RequestGroupActionPriority {
   CODE_PRIORITY_STAT = "stat",
   CODE_PRIORITY_ROUTINE = "routine",
   CODE_PRIORITY_URGENT = "urgent",
   CODE_PRIORITY_ASAP = "asap"
}

# RequestGroupActionConditionKind enum
public enum RequestGroupActionConditionKind {
   CODE_KIND_STOP = "stop",
   CODE_KIND_START = "start",
   CODE_KIND_APPLICABILITY = "applicability"
}

# FHIR RequestGroupAction datatype record.
#
# + cardinalityBehavior - Defines whether the action can be selected multiple times.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A code that provides meaning for the action or action group. For example, a section may have a LOINC code for a section of a documentation template.
# + prefix - A user-visible prefix for the action.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + description - A short description of the action used to provide a summary to display to the user.
# + title - The title of the action displayed to a user.
# + 'type - The type of action to perform (create, update, remove).
# + groupingBehavior - Defines the grouping behavior for the action and its children.
# + participant - The participant that should perform or be responsible for this action.
# + timingAge - An optional value describing when the action should be performed.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + relatedAction - A relationship to another action such as 'before' or '30-60 minutes after start of'.
# + timingDuration - An optional value describing when the action should be performed.
# + textEquivalent - A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that might not be capable of interpreting it dynamically.
# + timingTiming - An optional value describing when the action should be performed.
# + 'resource - The resource that is the target of the action (e.g. CommunicationRequest).
# + timingPeriod - An optional value describing when the action should be performed.
# + documentation - Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.
# + priority - Indicates how quickly the action should be addressed with respect to other actions.
# + requiredBehavior - Defines expectations around whether an action is required.
# + condition - An expression that describes applicability criteria, or start/stop conditions for the action.
# + selectionBehavior - Defines the selection behavior for the action and its children.
# + timingRange - An optional value describing when the action should be performed.
# + precheckBehavior - Defines whether the action should usually be preselected.
# + timingDateTime - An optional value describing when the action should be performed.
@DataTypeDefinition {
    name: "RequestGroupAction",
    baseType: (),
    elements: {
        "cardinalityBehavior": {
            name: "cardinalityBehavior",
            dataType: RequestGroupActionCardinalityBehavior,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines whether the action can be selected multiple times.",
            path: "RequestGroup.action.cardinalityBehavior"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RequestGroup.action.extension"
        },
        "code": {
            name: "code",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A code that provides meaning for the action or action group. For example, a section may have a LOINC code for a section of a documentation template.",
            path: "RequestGroup.action.code"
        },
        "prefix": {
            name: "prefix",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A user-visible prefix for the action.",
            path: "RequestGroup.action.prefix"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RequestGroup.action.modifierExtension"
        },
        "description": {
            name: "description",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A short description of the action used to provide a summary to display to the user.",
            path: "RequestGroup.action.description"
        },
        "title": {
            name: "title",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The title of the action displayed to a user.",
            path: "RequestGroup.action.title"
        },
        "type": {
            name: "type",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of action to perform (create, update, remove).",
            path: "RequestGroup.action.type"
        },
        "groupingBehavior": {
            name: "groupingBehavior",
            dataType: RequestGroupActionGroupingBehavior,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines the grouping behavior for the action and its children.",
            path: "RequestGroup.action.groupingBehavior"
        },
        "participant": {
            name: "participant",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The participant that should perform or be responsible for this action.",
            path: "RequestGroup.action.participant"
        },
        "timingAge": {
            name: "timingAge",
            dataType: Age,
            min: 0,
            max: 1,
            isArray: false,
            description: "An optional value describing when the action should be performed.",
            path: "RequestGroup.action.timing[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RequestGroup.action.id"
        },
        "relatedAction": {
            name: "relatedAction",
            dataType: RequestGroupActionRelatedAction,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A relationship to another action such as 'before' or '30-60 minutes after start of'.",
            path: "RequestGroup.action.relatedAction"
        },
        "timingDuration": {
            name: "timingDuration",
            dataType: Duration,
            min: 0,
            max: 1,
            isArray: false,
            description: "An optional value describing when the action should be performed.",
            path: "RequestGroup.action.timing[x]"
        },
        "textEquivalent": {
            name: "textEquivalent",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that might not be capable of interpreting it dynamically.",
            path: "RequestGroup.action.textEquivalent"
        },
        "timingTiming": {
            name: "timingTiming",
            dataType: Timing,
            min: 0,
            max: 1,
            isArray: false,
            description: "An optional value describing when the action should be performed.",
            path: "RequestGroup.action.timing[x]"
        },
        "resource": {
            name: "resource",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The resource that is the target of the action (e.g. CommunicationRequest).",
            path: "RequestGroup.action.resource"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "An optional value describing when the action should be performed.",
            path: "RequestGroup.action.timing[x]"
        },
        "documentation": {
            name: "documentation",
            dataType: RelatedArtifact,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.",
            path: "RequestGroup.action.documentation"
        },
        "priority": {
            name: "priority",
            dataType: RequestGroupActionPriority,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates how quickly the action should be addressed with respect to other actions.",
            path: "RequestGroup.action.priority"
        },
        "requiredBehavior": {
            name: "requiredBehavior",
            dataType: RequestGroupActionRequiredBehavior,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines expectations around whether an action is required.",
            path: "RequestGroup.action.requiredBehavior"
        },
        "condition": {
            name: "condition",
            dataType: RequestGroupActionCondition,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An expression that describes applicability criteria, or start/stop conditions for the action.",
            path: "RequestGroup.action.condition"
        },
        "selectionBehavior": {
            name: "selectionBehavior",
            dataType: RequestGroupActionSelectionBehavior,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines the selection behavior for the action and its children.",
            path: "RequestGroup.action.selectionBehavior"
        },
        "timingRange": {
            name: "timingRange",
            dataType: Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "An optional value describing when the action should be performed.",
            path: "RequestGroup.action.timing[x]"
        },
        "precheckBehavior": {
            name: "precheckBehavior",
            dataType: RequestGroupActionPrecheckBehavior,
            min: 0,
            max: 1,
            isArray: false,
            description: "Defines whether the action should usually be preselected.",
            path: "RequestGroup.action.precheckBehavior"
        },
        "timingDateTime": {
            name: "timingDateTime",
            dataType: dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "An optional value describing when the action should be performed.",
            path: "RequestGroup.action.timing[x]"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type RequestGroupAction record {|
    RequestGroupActionCardinalityBehavior cardinalityBehavior?;
    Extension[] extension?;
    CodeableConcept[] code?;
    string prefix?;
    Extension[] modifierExtension?;
    string description?;
    string title?;
    CodeableConcept 'type?;
    RequestGroupActionGroupingBehavior groupingBehavior?;
    Reference[] participant?;
    Age timingAge?;
    string id?;
    RequestGroupActionRelatedAction[] relatedAction?;
    Duration timingDuration?;
    string textEquivalent?;
    Timing timingTiming?;
    Reference 'resource?;
    Period timingPeriod?;
    RelatedArtifact[] documentation?;
    RequestGroupActionPriority priority?;
    RequestGroupActionRequiredBehavior requiredBehavior?;
    RequestGroupActionCondition[] condition?;
    RequestGroupActionSelectionBehavior selectionBehavior?;
    Range timingRange?;
    RequestGroupActionPrecheckBehavior precheckBehavior?;
    dateTime timingDateTime?;
|};

# FHIR RequestGroupActionRelatedAction datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + actionId - The element id of the action this is related to.
# + offsetDuration - A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.
# + offsetRange - A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + relationship - The relationship of this action to the related action.
@DataTypeDefinition {
    name: "RequestGroupActionRelatedAction",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "RequestGroup.action.relatedAction.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "RequestGroup.action.relatedAction.modifierExtension"
        },
        "actionId": {
            name: "actionId",
            dataType: id,
            min: 1,
            max: 1,
            isArray: false,
            description: "The element id of the action this is related to.",
            path: "RequestGroup.action.relatedAction.actionId"
        },
        "offsetDuration": {
            name: "offsetDuration",
            dataType: Duration,
            min: 0,
            max: 1,
            isArray: false,
            description: "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
            path: "RequestGroup.action.relatedAction.offset[x]"
        },
        "offsetRange": {
            name: "offsetRange",
            dataType: Range,
            min: 0,
            max: 1,
            isArray: false,
            description: "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
            path: "RequestGroup.action.relatedAction.offset[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "RequestGroup.action.relatedAction.id"
        },
        "relationship": {
            name: "relationship",
            dataType: RequestGroupActionRelatedActionRelationship,
            min: 1,
            max: 1,
            isArray: false,
            description: "The relationship of this action to the related action.",
            path: "RequestGroup.action.relatedAction.relationship"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type RequestGroupActionRelatedAction record {|
    Extension[] extension?;
    Extension[] modifierExtension?;
    id actionId;
    Duration offsetDuration?;
    Range offsetRange?;
    string id?;
    RequestGroupActionRelatedActionRelationship relationship;
|};

# RequestGroupActionRequiredBehavior enum
public enum RequestGroupActionRequiredBehavior {
   CODE_REQUIREDBEHAVIOR_COULD = "could",
   CODE_REQUIREDBEHAVIOR_MUST = "must",
   CODE_REQUIREDBEHAVIOR_MUST_UNLESS_DOCUMENTED = "must-unless-documented"
}

# RequestGroupActionSelectionBehavior enum
public enum RequestGroupActionSelectionBehavior {
   CODE_SELECTIONBEHAVIOR_ALL = "all",
   CODE_SELECTIONBEHAVIOR_EXACTLY_ONE = "exactly-one",
   CODE_SELECTIONBEHAVIOR_AT_MOST_ONE = "at-most-one",
   CODE_SELECTIONBEHAVIOR_ALL_OR_NONE = "all-or-none",
   CODE_SELECTIONBEHAVIOR_ANY = "any",
   CODE_SELECTIONBEHAVIOR_ONE_OR_MORE = "one-or-more"
}

# RequestGroupActionPrecheckBehavior enum
public enum RequestGroupActionPrecheckBehavior {
   CODE_PRECHECKBEHAVIOR_NO = "no",
   CODE_PRECHECKBEHAVIOR_YES = "yes"
}

# RequestGroupActionRelatedActionRelationship enum
public enum RequestGroupActionRelatedActionRelationship {
   CODE_RELATIONSHIP_AFTER_END = "after-end",
   CODE_RELATIONSHIP_BEFORE = "before",
   CODE_RELATIONSHIP_CONCURRENT_WITH_START = "concurrent-with-start",
   CODE_RELATIONSHIP_CONCURRENT = "concurrent",
   CODE_RELATIONSHIP_BEFORE_END = "before-end",
   CODE_RELATIONSHIP_AFTER = "after",
   CODE_RELATIONSHIP_CONCURRENT_WITH_END = "concurrent-with-end",
   CODE_RELATIONSHIP_AFTER_START = "after-start",
   CODE_RELATIONSHIP_BEFORE_START = "before-start"
}

# RequestGroupActionCardinalityBehavior enum
public enum RequestGroupActionCardinalityBehavior {
   CODE_CARDINALITYBEHAVIOR_SINGLE = "single",
   CODE_CARDINALITYBEHAVIOR_MULTIPLE = "multiple"
}

