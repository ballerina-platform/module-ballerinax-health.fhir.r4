// Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;

public const string PROFILE_BASE_MEDICATIONKNOWLEDGE = "http://hl7.org/fhir/StructureDefinition/MedicationKnowledge";
public const RESOURCE_NAME_MEDICATIONKNOWLEDGE = "MedicationKnowledge";

# FHIR MedicationKnowledge resource record.
#
# + resourceType - The type of the resource describes
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - A code that specifies this medication, or a textual description if no code is available. Usage note: This could be a standard medication code such as a code from RxNorm, SNOMED CT, IDMP etc. It could also be a national or local formulary code, optionally with translations to other code systems.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + regulatory - Regulatory information about a medication.
# + medicineClassification - Categorization of the medication within a formulary or classification system.
# + associatedMedication - Associated or related medications. For example, if the medication is a branded product (e.g. Crestor), this is the Therapeutic Moeity (e.g. Rosuvastatin) or if this is a generic medication (e.g. Rosuvastatin), this would link to a branded product (e.g. Crestor).
# + language - The base language in which the resource is written.
# + manufacturer - Describes the details of the manufacturer of the medication product. This is not intended to represent the distributor of a medication product.
# + synonym - Additional names for a medication, for example, the name(s) given to a medication in different countries. For example, acetaminophen and paracetamol or salbutamol and albuterol.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + relatedMedicationKnowledge - Associated or related knowledge about a medication.
# + productType - Category of the medication or product (e.g. branded product, therapeutic moeity, generic product, innovator product, etc.).
# + administrationGuidelines - Guidelines for the administration of the medication.
# + contraindication - Potential clinical issue with or between medication(s) (for example, drug-drug interaction, drug-disease contraindication, drug-allergy interaction, etc.).
# + amount - Specific amount of the drug in the packaged product. For example, when specifying a product that has the same strength (For example, Insulin glargine 100 unit per mL solution for injection), this attribute provides additional clarification of the package amount (For example, 3 mL, 10mL, etc.).
# + intendedRoute - The intended or approved route of administration.
# + cost - The price of the medication.
# + ingredient - Identifies a particular constituent of interest in the product.
# + preparationInstruction - The instructions for preparing the medication.
# + packaging - Information that only applies to packages (not products).
# + monitoringProgram - The program under which the medication is reviewed.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + drugCharacteristic - Specifies descriptive properties of the medicine, such as color, shape, imprints, etc.
# + doseForm - Describes the form of the item. Powder; tablets; capsule.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + monograph - Associated documentation about the medication.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + kinetics - The time course of drug absorption, distribution, metabolism and excretion of a medication from the body.
# + status - A code to indicate if the medication is in active use. The status refers to the validity about the information of the medication and not to its medicinal properties.
@ResourceDefinition {
    resourceType: "MedicationKnowledge",
    baseType: DomainResource,
    profile: "http://hl7.org/fhir/StructureDefinition/MedicationKnowledge",
    elements: {
        "extension" : {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.extension"
        },
        "code" : {
            name: "code",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.code",
            valueSet: "http://hl7.org/fhir/ValueSet/medication-codes"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.modifierExtension"
        },
        "regulatory" : {
            name: "regulatory",
            dataType: MedicationKnowledgeRegulatory,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.regulatory"
        },
        "medicineClassification" : {
            name: "medicineClassification",
            dataType: MedicationKnowledgeMedicineClassification,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.medicineClassification"
        },
        "associatedMedication" : {
            name: "associatedMedication",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.associatedMedication"
        },
        "language" : {
            name: "language",
            dataType: code,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "manufacturer" : {
            name: "manufacturer",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.manufacturer"
        },
        "synonym" : {
            name: "synonym",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.synonym"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.id"
        },
        "text" : {
            name: "text",
            dataType: Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.text"
        },
        "relatedMedicationKnowledge" : {
            name: "relatedMedicationKnowledge",
            dataType: MedicationKnowledgeRelatedMedicationKnowledge,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.relatedMedicationKnowledge"
        },
        "productType" : {
            name: "productType",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.productType"
        },
        "administrationGuidelines" : {
            name: "administrationGuidelines",
            dataType: MedicationKnowledgeAdministrationGuidelines,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.administrationGuidelines"
        },
        "contraindication" : {
            name: "contraindication",
            dataType: Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.contraindication"
        },
        "amount" : {
            name: "amount",
            dataType: Quantity,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.amount"
        },
        "intendedRoute" : {
            name: "intendedRoute",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.intendedRoute",
            valueSet: "http://hl7.org/fhir/ValueSet/route-codes"
        },
        "cost" : {
            name: "cost",
            dataType: MedicationKnowledgeCost,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.cost"
        },
        "ingredient" : {
            name: "ingredient",
            dataType: MedicationKnowledgeIngredient,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.ingredient"
        },
        "preparationInstruction" : {
            name: "preparationInstruction",
            dataType: markdown,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.preparationInstruction"
        },
        "packaging" : {
            name: "packaging",
            dataType: MedicationKnowledgePackaging,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.packaging"
        },
        "monitoringProgram" : {
            name: "monitoringProgram",
            dataType: MedicationKnowledgeMonitoringProgram,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.monitoringProgram"
        },
        "contained" : {
            name: "contained",
            dataType: Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.contained"
        },
        "drugCharacteristic" : {
            name: "drugCharacteristic",
            dataType: MedicationKnowledgeDrugCharacteristic,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.drugCharacteristic"
        },
        "doseForm" : {
            name: "doseForm",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.doseForm",
            valueSet: "http://hl7.org/fhir/ValueSet/medication-form-codes"
        },
        "meta" : {
            name: "meta",
            dataType: Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.meta"
        },
        "monograph" : {
            name: "monograph",
            dataType: MedicationKnowledgeMonograph,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.monograph"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.implicitRules"
        },
        "kinetics" : {
            name: "kinetics",
            dataType: MedicationKnowledgeKinetics,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "MedicationKnowledge.kinetics"
        },
        "status" : {
            name: "status",
            dataType: MedicationKnowledgeStatus,
            min: 0,
            max: 1,
            isArray: false,
            path: "MedicationKnowledge.status",
            valueSet: "http://hl7.org/fhir/ValueSet/medicationknowledge-status|4.0.1"
        }
    },
    serializers: {
        'xml: fhirResourceXMLSerializer,
        'json: fhirResourceJsonSerializer
    }
}
public type MedicationKnowledge record {|
    *DomainResource;

    RESOURCE_NAME_MEDICATIONKNOWLEDGE resourceType = RESOURCE_NAME_MEDICATIONKNOWLEDGE;

    BaseMedicationKnowledgeMeta meta = {
        profile : [PROFILE_BASE_MEDICATIONKNOWLEDGE]
    };
    Extension[] extension?;
    CodeableConcept code?;
    Extension[] modifierExtension?;
    MedicationKnowledgeRegulatory[] regulatory?;
    MedicationKnowledgeMedicineClassification[] medicineClassification?;
    Reference[] associatedMedication?;
    code language?;
    Reference manufacturer?;
    string[] synonym?;
    string id?;
    Narrative text?;
    MedicationKnowledgeRelatedMedicationKnowledge[] relatedMedicationKnowledge?;
    CodeableConcept[] productType?;
    MedicationKnowledgeAdministrationGuidelines[] administrationGuidelines?;
    Reference[] contraindication?;
    Quantity amount?;
    CodeableConcept[] intendedRoute?;
    MedicationKnowledgeCost[] cost?;
    MedicationKnowledgeIngredient[] ingredient?;
    markdown preparationInstruction?;
    MedicationKnowledgePackaging packaging?;
    MedicationKnowledgeMonitoringProgram[] monitoringProgram?;
    Resource[] contained?;
    MedicationKnowledgeDrugCharacteristic[] drugCharacteristic?;
    CodeableConcept doseForm?;
    MedicationKnowledgeMonograph[] monograph?;
    uri implicitRules?;
    MedicationKnowledgeKinetics[] kinetics?;
    MedicationKnowledgeStatus status?;
|};

@DataTypeDefinition {
    name: "BaseMedicationKnowledgeMeta",
    baseType: Meta,
    elements: {},
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type BaseMedicationKnowledgeMeta record {|
    *Meta;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)

    id versionId?;
    instant lastUpdated?;
    uri 'source?;
    canonical[] profile = ["http://hl7.org/fhir/StructureDefinition/MedicationKnowledge"];
    Coding[] security?;
    Coding[] tag?;
|};

# FHIR MedicationKnowledgeAdministrationGuidelinesPatientCharacteristics datatype record.
#
# + characteristicQuantity - Specific characteristic that is relevant to the administration guideline (e.g. height, weight, gender).
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + value - The specific characteristic (e.g. height, weight, gender, etc.).
# + characteristicCodeableConcept - Specific characteristic that is relevant to the administration guideline (e.g. height, weight, gender).
@DataTypeDefinition {
    name: "MedicationKnowledgeAdministrationGuidelinesPatientCharacteristics",
    baseType: (),
    elements: {
        "characteristicQuantity": {
            name: "characteristicQuantity",
            dataType: Quantity,
            min: 1,
            max: 1,
            isArray: false,
            description: "Specific characteristic that is relevant to the administration guideline (e.g. height, weight, gender).",
            path: "MedicationKnowledge.administrationGuidelines.patientCharacteristics.characteristic[x]"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.administrationGuidelines.patientCharacteristics.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.administrationGuidelines.patientCharacteristics.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.administrationGuidelines.patientCharacteristics.id"
        },
        "value": {
            name: "value",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The specific characteristic (e.g. height, weight, gender, etc.).",
            path: "MedicationKnowledge.administrationGuidelines.patientCharacteristics.value"
        },
        "characteristicCodeableConcept": {
            name: "characteristicCodeableConcept",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Specific characteristic that is relevant to the administration guideline (e.g. height, weight, gender).",
            path: "MedicationKnowledge.administrationGuidelines.patientCharacteristics.characteristic[x]"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeAdministrationGuidelinesPatientCharacteristics record {|
    Quantity characteristicQuantity;
    Extension[] extension?;
    Extension[] modifierExtension?;
    string id?;
    string[] value?;
    CodeableConcept characteristicCodeableConcept;
|};

# FHIR MedicationKnowledgeKinetics datatype record.
#
# + areaUnderCurve - The drug concentration measured at certain discrete points in time.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + halfLifePeriod - The time required for any specified property (e.g., the concentration of a substance in the body) to decrease by half.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + lethalDose50 - The median lethal dose of a drug.
@DataTypeDefinition {
    name: "MedicationKnowledgeKinetics",
    baseType: (),
    elements: {
        "areaUnderCurve": {
            name: "areaUnderCurve",
            dataType: Quantity,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The drug concentration measured at certain discrete points in time.",
            path: "MedicationKnowledge.kinetics.areaUnderCurve"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.kinetics.extension"
        },
        "halfLifePeriod": {
            name: "halfLifePeriod",
            dataType: Duration,
            min: 0,
            max: 1,
            isArray: false,
            description: "The time required for any specified property (e.g., the concentration of a substance in the body) to decrease by half.",
            path: "MedicationKnowledge.kinetics.halfLifePeriod"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.kinetics.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.kinetics.id"
        },
        "lethalDose50": {
            name: "lethalDose50",
            dataType: Quantity,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The median lethal dose of a drug.",
            path: "MedicationKnowledge.kinetics.lethalDose50"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeKinetics record {|
    Quantity[] areaUnderCurve?;
    Extension[] extension?;
    Duration halfLifePeriod?;
    Extension[] modifierExtension?;
    string id?;
    Quantity[] lethalDose50?;
|};

# FHIR MedicationKnowledgeRegulatoryMaxDispense datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - The period that applies to the maximum number of units.
# + quantity - The maximum number of units of the medication that can be dispensed.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@DataTypeDefinition {
    name: "MedicationKnowledgeRegulatoryMaxDispense",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.regulatory.maxDispense.extension"
        },
        "period": {
            name: "period",
            dataType: Duration,
            min: 0,
            max: 1,
            isArray: false,
            description: "The period that applies to the maximum number of units.",
            path: "MedicationKnowledge.regulatory.maxDispense.period"
        },
        "quantity": {
            name: "quantity",
            dataType: Quantity,
            min: 1,
            max: 1,
            isArray: false,
            description: "The maximum number of units of the medication that can be dispensed.",
            path: "MedicationKnowledge.regulatory.maxDispense.quantity"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.regulatory.maxDispense.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.regulatory.maxDispense.id"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeRegulatoryMaxDispense record {|
    Extension[] extension?;
    Duration period?;
    Quantity quantity;
    Extension[] modifierExtension?;
    string id?;
|};

# FHIR MedicationKnowledgeMonograph datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'source - Associated documentation about the medication.
# + 'type - The category of documentation about the medication. (e.g. professional monograph, patient education monograph).
@DataTypeDefinition {
    name: "MedicationKnowledgeMonograph",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.monograph.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.monograph.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.monograph.id"
        },
        "source": {
            name: "source",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Associated documentation about the medication.",
            path: "MedicationKnowledge.monograph.source"
        },
        "type": {
            name: "type",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The category of documentation about the medication. (e.g. professional monograph, patient education monograph).",
            path: "MedicationKnowledge.monograph.type"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeMonograph record {|
    Extension[] extension?;
    Extension[] modifierExtension?;
    string id?;
    Reference 'source?;
    CodeableConcept 'type?;
|};

# FHIR MedicationKnowledgeIngredient datatype record.
#
# + itemReference - The actual ingredient - either a substance (simple ingredient) or another medication.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + strength - Specifies how many (or how much) of the items there are in this Medication. For example, 250 mg per tablet. This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet.
# + itemCodeableConcept - The actual ingredient - either a substance (simple ingredient) or another medication.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + isActive - Indication of whether this ingredient affects the therapeutic action of the drug.
@DataTypeDefinition {
    name: "MedicationKnowledgeIngredient",
    baseType: (),
    elements: {
        "itemReference": {
            name: "itemReference",
            dataType: Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "The actual ingredient - either a substance (simple ingredient) or another medication.",
            path: "MedicationKnowledge.ingredient.item[x]"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.ingredient.extension"
        },
        "strength": {
            name: "strength",
            dataType: Ratio,
            min: 0,
            max: 1,
            isArray: false,
            description: "Specifies how many (or how much) of the items there are in this Medication. For example, 250 mg per tablet. This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet.",
            path: "MedicationKnowledge.ingredient.strength"
        },
        "itemCodeableConcept": {
            name: "itemCodeableConcept",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The actual ingredient - either a substance (simple ingredient) or another medication.",
            path: "MedicationKnowledge.ingredient.item[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.ingredient.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.ingredient.id"
        },
        "isActive": {
            name: "isActive",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indication of whether this ingredient affects the therapeutic action of the drug.",
            path: "MedicationKnowledge.ingredient.isActive"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeIngredient record {|
    Reference itemReference;
    Extension[] extension?;
    Ratio strength?;
    CodeableConcept itemCodeableConcept;
    Extension[] modifierExtension?;
    string id?;
    boolean isActive?;
|};

# FHIR MedicationKnowledgeMedicineClassification datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + classification - Specific category assigned to the medication (e.g. anti-infective, anti-hypertensive, antibiotic, etc.).
# + 'type - The type of category for the medication (for example, therapeutic classification, therapeutic sub-classification).
@DataTypeDefinition {
    name: "MedicationKnowledgeMedicineClassification",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.medicineClassification.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.medicineClassification.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.medicineClassification.id"
        },
        "classification": {
            name: "classification",
            dataType: CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Specific category assigned to the medication (e.g. anti-infective, anti-hypertensive, antibiotic, etc.).",
            path: "MedicationKnowledge.medicineClassification.classification"
        },
        "type": {
            name: "type",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of category for the medication (for example, therapeutic classification, therapeutic sub-classification).",
            path: "MedicationKnowledge.medicineClassification.type"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeMedicineClassification record {|
    Extension[] extension?;
    Extension[] modifierExtension?;
    string id?;
    CodeableConcept[] classification?;
    CodeableConcept 'type;
|};

# FHIR MedicationKnowledgeCost datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + cost - The price of the medication.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'source - The source or owner that assigns the price to the medication.
# + 'type - The category of the cost information. For example, manufacturers' cost, patient cost, claim reimbursement cost, actual acquisition cost.
@DataTypeDefinition {
    name: "MedicationKnowledgeCost",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.cost.extension"
        },
        "cost": {
            name: "cost",
            dataType: Money,
            min: 1,
            max: 1,
            isArray: false,
            description: "The price of the medication.",
            path: "MedicationKnowledge.cost.cost"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.cost.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.cost.id"
        },
        "source": {
            name: "source",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The source or owner that assigns the price to the medication.",
            path: "MedicationKnowledge.cost.source"
        },
        "type": {
            name: "type",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The category of the cost information. For example, manufacturers' cost, patient cost, claim reimbursement cost, actual acquisition cost.",
            path: "MedicationKnowledge.cost.type"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeCost record {|
    Extension[] extension?;
    Money cost;
    Extension[] modifierExtension?;
    string id?;
    string 'source?;
    CodeableConcept 'type;
|};

# FHIR MedicationKnowledgeAdministrationGuidelines datatype record.
#
# + dosage - Dosage for the medication for the specific guidelines.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + indicationReference - Indication for use that apply to the specific administration guidelines.
# + patientCharacteristics - Characteristics of the patient that are relevant to the administration guidelines (for example, height, weight, gender, etc.).
# + indicationCodeableConcept - Indication for use that apply to the specific administration guidelines.
@DataTypeDefinition {
    name: "MedicationKnowledgeAdministrationGuidelines",
    baseType: (),
    elements: {
        "dosage": {
            name: "dosage",
            dataType: MedicationKnowledgeAdministrationGuidelinesDosage,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Dosage for the medication for the specific guidelines.",
            path: "MedicationKnowledge.administrationGuidelines.dosage"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.administrationGuidelines.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.administrationGuidelines.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.administrationGuidelines.id"
        },
        "indicationReference": {
            name: "indicationReference",
            dataType: Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indication for use that apply to the specific administration guidelines.",
            path: "MedicationKnowledge.administrationGuidelines.indication[x]"
        },
        "patientCharacteristics": {
            name: "patientCharacteristics",
            dataType: MedicationKnowledgeAdministrationGuidelinesPatientCharacteristics,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Characteristics of the patient that are relevant to the administration guidelines (for example, height, weight, gender, etc.).",
            path: "MedicationKnowledge.administrationGuidelines.patientCharacteristics"
        },
        "indicationCodeableConcept": {
            name: "indicationCodeableConcept",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indication for use that apply to the specific administration guidelines.",
            path: "MedicationKnowledge.administrationGuidelines.indication[x]"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeAdministrationGuidelines record {|
    MedicationKnowledgeAdministrationGuidelinesDosage[] dosage?;
    Extension[] extension?;
    Extension[] modifierExtension?;
    string id?;
    Reference indicationReference?;
    MedicationKnowledgeAdministrationGuidelinesPatientCharacteristics[] patientCharacteristics?;
    CodeableConcept indicationCodeableConcept?;
|};

# FHIR MedicationKnowledgeMonitoringProgram datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + name - Name of the reviewing program.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Type of program under which the medication is monitored.
@DataTypeDefinition {
    name: "MedicationKnowledgeMonitoringProgram",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.monitoringProgram.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.monitoringProgram.modifierExtension"
        },
        "name": {
            name: "name",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Name of the reviewing program.",
            path: "MedicationKnowledge.monitoringProgram.name"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.monitoringProgram.id"
        },
        "type": {
            name: "type",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Type of program under which the medication is monitored.",
            path: "MedicationKnowledge.monitoringProgram.type"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeMonitoringProgram record {|
    Extension[] extension?;
    Extension[] modifierExtension?;
    string name?;
    string id?;
    CodeableConcept 'type?;
|};

# FHIR MedicationKnowledgeDrugCharacteristic datatype record.
#
# + valueCodeableConcept - Description of the characteristic.
# + valueBase64Binary - Description of the characteristic.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + valueString - Description of the characteristic.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - A code specifying which characteristic of the medicine is being described (for example, colour, shape, imprint).
# + valueQuantity - Description of the characteristic.
@DataTypeDefinition {
    name: "MedicationKnowledgeDrugCharacteristic",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Description of the characteristic.",
            path: "MedicationKnowledge.drugCharacteristic.value[x]"
        },
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: base64Binary,
            min: 0,
            max: 1,
            isArray: false,
            description: "Description of the characteristic.",
            path: "MedicationKnowledge.drugCharacteristic.value[x]"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.drugCharacteristic.extension"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Description of the characteristic.",
            path: "MedicationKnowledge.drugCharacteristic.value[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.drugCharacteristic.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.drugCharacteristic.id"
        },
        "type": {
            name: "type",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code specifying which characteristic of the medicine is being described (for example, colour, shape, imprint).",
            path: "MedicationKnowledge.drugCharacteristic.type"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Description of the characteristic.",
            path: "MedicationKnowledge.drugCharacteristic.value[x]"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeDrugCharacteristic record {|
    CodeableConcept valueCodeableConcept?;
    base64Binary valueBase64Binary?;
    Extension[] extension?;
    string valueString?;
    Extension[] modifierExtension?;
    string id?;
    CodeableConcept 'type?;
    Quantity valueQuantity?;
|};

# FHIR MedicationKnowledgeRegulatory datatype record.
#
# + schedule - Specifies the schedule of a medication in jurisdiction.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + substitution - Specifies if changes are allowed when dispensing a medication from a regulatory perspective.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + maxDispense - The maximum number of units of the medication that can be dispensed in a period.
# + regulatoryAuthority - The authority that is specifying the regulations.
@DataTypeDefinition {
    name: "MedicationKnowledgeRegulatory",
    baseType: (),
    elements: {
        "schedule": {
            name: "schedule",
            dataType: MedicationKnowledgeRegulatorySchedule,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Specifies the schedule of a medication in jurisdiction.",
            path: "MedicationKnowledge.regulatory.schedule"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.regulatory.extension"
        },
        "substitution": {
            name: "substitution",
            dataType: MedicationKnowledgeRegulatorySubstitution,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Specifies if changes are allowed when dispensing a medication from a regulatory perspective.",
            path: "MedicationKnowledge.regulatory.substitution"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.regulatory.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.regulatory.id"
        },
        "maxDispense": {
            name: "maxDispense",
            dataType: MedicationKnowledgeRegulatoryMaxDispense,
            min: 0,
            max: 1,
            isArray: false,
            description: "The maximum number of units of the medication that can be dispensed in a period.",
            path: "MedicationKnowledge.regulatory.maxDispense"
        },
        "regulatoryAuthority": {
            name: "regulatoryAuthority",
            dataType: Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "The authority that is specifying the regulations.",
            path: "MedicationKnowledge.regulatory.regulatoryAuthority"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeRegulatory record {|
    MedicationKnowledgeRegulatorySchedule[] schedule?;
    Extension[] extension?;
    MedicationKnowledgeRegulatorySubstitution[] substitution?;
    Extension[] modifierExtension?;
    string id?;
    MedicationKnowledgeRegulatoryMaxDispense maxDispense?;
    Reference regulatoryAuthority;
|};

# FHIR MedicationKnowledgeRegulatorySchedule datatype record.
#
# + schedule - Specifies the specific drug schedule.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@DataTypeDefinition {
    name: "MedicationKnowledgeRegulatorySchedule",
    baseType: (),
    elements: {
        "schedule": {
            name: "schedule",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Specifies the specific drug schedule.",
            path: "MedicationKnowledge.regulatory.schedule.schedule"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.regulatory.schedule.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.regulatory.schedule.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.regulatory.schedule.id"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeRegulatorySchedule record {|
    CodeableConcept schedule;
    Extension[] extension?;
    Extension[] modifierExtension?;
    string id?;
|};

# FHIR MedicationKnowledgePackaging datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of product units the package would contain if fully loaded.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - A code that defines the specific type of packaging that the medication can be found in (e.g. blister sleeve, tube, bottle).
@DataTypeDefinition {
    name: "MedicationKnowledgePackaging",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.packaging.extension"
        },
        "quantity": {
            name: "quantity",
            dataType: Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of product units the package would contain if fully loaded.",
            path: "MedicationKnowledge.packaging.quantity"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.packaging.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.packaging.id"
        },
        "type": {
            name: "type",
            dataType: CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code that defines the specific type of packaging that the medication can be found in (e.g. blister sleeve, tube, bottle).",
            path: "MedicationKnowledge.packaging.type"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgePackaging record {|
    Extension[] extension?;
    Quantity quantity?;
    Extension[] modifierExtension?;
    string id?;
    CodeableConcept 'type?;
|};

# FHIR MedicationKnowledgeRegulatorySubstitution datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + allowed - Specifies if regulation allows for changes in the medication when dispensing.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Specifies the type of substitution allowed.
@DataTypeDefinition {
    name: "MedicationKnowledgeRegulatorySubstitution",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.regulatory.substitution.extension"
        },
        "allowed": {
            name: "allowed",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Specifies if regulation allows for changes in the medication when dispensing.",
            path: "MedicationKnowledge.regulatory.substitution.allowed"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.regulatory.substitution.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.regulatory.substitution.id"
        },
        "type": {
            name: "type",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Specifies the type of substitution allowed.",
            path: "MedicationKnowledge.regulatory.substitution.type"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeRegulatorySubstitution record {|
    Extension[] extension?;
    boolean allowed;
    Extension[] modifierExtension?;
    string id?;
    CodeableConcept 'type;
|};

# FHIR MedicationKnowledgeRelatedMedicationKnowledge datatype record.
#
# + reference - Associated documentation about the associated medication knowledge.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The category of the associated medication knowledge reference.
@DataTypeDefinition {
    name: "MedicationKnowledgeRelatedMedicationKnowledge",
    baseType: (),
    elements: {
        "reference": {
            name: "reference",
            dataType: Reference,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Associated documentation about the associated medication knowledge.",
            path: "MedicationKnowledge.relatedMedicationKnowledge.reference"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.relatedMedicationKnowledge.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.relatedMedicationKnowledge.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.relatedMedicationKnowledge.id"
        },
        "type": {
            name: "type",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The category of the associated medication knowledge reference.",
            path: "MedicationKnowledge.relatedMedicationKnowledge.type"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeRelatedMedicationKnowledge record {|
    @constraint:Array {
       minLength: 1
    }
    Reference[] reference;
    Extension[] extension?;
    Extension[] modifierExtension?;
    string id?;
    CodeableConcept 'type;
|};

# MedicationKnowledgeStatus enum
public enum MedicationKnowledgeStatus {
   CODE_STATUS_INACTIVE = "inactive",
   CODE_STATUS_ACTIVE = "active",
   CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error"
}

# FHIR MedicationKnowledgeAdministrationGuidelinesDosage datatype record.
#
# + dosage - Dosage for the medication for the specific guidelines.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The type of dosage (for example, prophylaxis, maintenance, therapeutic, etc.).
@DataTypeDefinition {
    name: "MedicationKnowledgeAdministrationGuidelinesDosage",
    baseType: (),
    elements: {
        "dosage": {
            name: "dosage",
            dataType: Dosage,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Dosage for the medication for the specific guidelines.",
            path: "MedicationKnowledge.administrationGuidelines.dosage.dosage"
        },
        "extension": {
            name: "extension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "MedicationKnowledge.administrationGuidelines.dosage.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MedicationKnowledge.administrationGuidelines.dosage.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MedicationKnowledge.administrationGuidelines.dosage.id"
        },
        "type": {
            name: "type",
            dataType: CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of dosage (for example, prophylaxis, maintenance, therapeutic, etc.).",
            path: "MedicationKnowledge.administrationGuidelines.dosage.type"
        }
    },
    serializers: {
        'xml: complexDataTypeXMLSerializer,
        'json: complexDataTypeJsonSerializer
    }
}
public type MedicationKnowledgeAdministrationGuidelinesDosage record {|
    @constraint:Array {
       minLength: 1
    }
    Dosage[] dosage;
    Extension[] extension?;
    Extension[] modifierExtension?;
    string id?;
    CodeableConcept 'type;
|};

