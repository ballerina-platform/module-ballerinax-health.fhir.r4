// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//
// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r4;

public const string PROFILE_BASE_HREXPATIENTDEMOGRAPHICS = "http://hl7.org/fhir/us/davinci-hrex/StructureDefinition/hrex-patient-demographics";
public const RESOURCE_NAME_HREXPATIENTDEMOGRAPHICS = "Patient";

# FHIR HRexPatientDemographics resource record.
#
# + resourceType - The type of the resource describes
# + extension - An Extension
# + gender - Administrative Gender - the gender that the patient is considered to have for administration and record keeping purposes.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + link - Link to another patient resource that concerns the same actual patient.
# + language - The base language in which the resource is written.
# + contact - A contact party (e.g. guardian, partner, friend) for the patient.
# + deceasedDateTime - Indicates if the individual is deceased or not.
# + generalPractitioner - Patient's nominated care provider.
# + telecom - A contact detail (e.g. a telephone number or an email address) by which the individual may be contacted.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + communication - A language which may be used to communicate with the patient about his or her health.
# + identifier - An identifier for this patient.
# * identifier Slicings
# 1) HRexPatientDemographicsIdentifierUmb: Unique Member Identifier. This is required to be present for the 'new' coverage and be absent for the 'old' coverage.
#       - min = 0
#       - max = 1
#
# + address - An address for the individual.
# + multipleBirthBoolean - Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer).
# + active - Whether this patient record is in active use. Many systems use this property to mark as non-current patients, such as those that have not been seen for a period of time based on an organization's business rules. It is often used to filter patient lists to exclude inactive patients Deceased patients may also be marked as inactive for the same reasons, but may be active for some time after death.
# + photo - Image of the patient.
# + birthDate - The date of birth for the individual.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + deceasedBoolean - Indicates if the individual is deceased or not.
# + managingOrganization - Organization that is the custodian of the patient record.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + multipleBirthInteger - Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer).
# + name - A name associated with the individual.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + maritalStatus - This field contains a patient's most recent marital (civil) status.
@r4:ResourceDefinition {
    resourceType: "Patient",
    baseType: r4:DomainResource,
    profile: "http://hl7.org/fhir/us/davinci-hrex/StructureDefinition/hrex-patient-demographics",
    elements: {
        "extension" : {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.extension"
        },
        "gender" : {
            name: "gender",
            dataType: HRexPatientDemographicsGender,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.gender",
            valueSet: "http://hl7.org/fhir/ValueSet/administrative-gender"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.modifierExtension"
        },
        "link" : {
            name: "link",
            dataType: HRexPatientDemographicsLink,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.link"
        },
        "language" : {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "contact" : {
            name: "contact",
            dataType: HRexPatientDemographicsContact,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.contact"
        },
        "deceasedDateTime" : {
            name: "deceasedDateTime",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.deceased[x]"
        },
        "generalPractitioner" : {
            name: "generalPractitioner",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.generalPractitioner"
        },
        "telecom" : {
            name: "telecom",
            dataType: r4:ContactPoint,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.telecom"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.id"
        },
        "text" : {
            name: "text",
            dataType: r4:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.text"
        },
        "communication" : {
            name: "communication",
            dataType: HRexPatientDemographicsCommunication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.communication"
        },
        "identifier" : {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.identifier"
        },
        "address" : {
            name: "address",
            dataType: HRexPatientDemographicsAddress,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.address"
        },
        "multipleBirthBoolean" : {
            name: "multipleBirthBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.multipleBirth[x]"
        },
        "active" : {
            name: "active",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.active"
        },
        "photo" : {
            name: "photo",
            dataType: r4:Attachment,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.photo"
        },
        "birthDate" : {
            name: "birthDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            path: "Patient.birthDate"
        },
        "contained" : {
            name: "contained",
            dataType: r4:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.contained"
        },
        "deceasedBoolean" : {
            name: "deceasedBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.deceased[x]"
        },
        "managingOrganization" : {
            name: "managingOrganization",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.managingOrganization"
        },
        "meta" : {
            name: "meta",
            dataType: r4:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.meta"
        },
        "multipleBirthInteger" : {
            name: "multipleBirthInteger",
            dataType: r4:integer,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.multipleBirth[x]"
        },
        "name" : {
            name: "name",
            dataType: HRexPatientDemographicsName,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Patient.name"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.implicitRules"
        },
        "maritalStatus" : {
            name: "maritalStatus",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Patient.maritalStatus",
            valueSet: "http://hl7.org/fhir/ValueSet/marital-status"
        }
    },
    serializers: {
        'xml: r4:fhirResourceXMLSerializer,
        'json: r4:fhirResourceJsonSerializer
    }
}
public type HRexPatientDemographics record {|
    *r4:DomainResource;

    RESOURCE_NAME_HREXPATIENTDEMOGRAPHICS resourceType = RESOURCE_NAME_HREXPATIENTDEMOGRAPHICS;

    r4:Extension[] extension?;
    HRexPatientDemographicsGender gender?;
    r4:Extension[] modifierExtension?;
    HRexPatientDemographicsLink[] link?;
    r4:code language?;
    HRexPatientDemographicsContact[] contact?;
    r4:dateTime deceasedDateTime?;
    r4:Reference[] generalPractitioner?;
    r4:ContactPoint[] telecom?;
    string id?;
    r4:Narrative text?;
    HRexPatientDemographicsCommunication[] communication?;
    r4:Identifier[] identifier?;
    HRexPatientDemographicsAddress[] address?;
    boolean multipleBirthBoolean?;
    boolean active?;
    r4:Attachment[] photo?;
    r4:date birthDate;
    r4:Resource[] contained?;
    boolean deceasedBoolean?;
    r4:Reference managingOrganization?;
    r4:Meta meta?;
    r4:integer multipleBirthInteger?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Patient.name constraint. This field must be an array containing at least one item."
        }
    }
    HRexPatientDemographicsName[] name;
    r4:uri implicitRules?;
    r4:CodeableConcept maritalStatus?;
    r4:Element ...;
|};

# HRexPatientDemographicsContactGender enum
public enum HRexPatientDemographicsContactGender {
   CODE_GENDER_OTHER = "other",
   CODE_GENDER_FEMALE = "female",
   CODE_GENDER_MALE = "male",
   CODE_GENDER_UNKNOWN = "unknown"
}

# FHIR HRexPatientDemographicsName datatype record.
#
# + given - Given name.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Indicates the period of time when this name was valid for the named person.
# + prefix - Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.
# + use - Identifies the purpose for this name.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts.
# + family - The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father.
# + suffix - Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.
@r4:DataTypeDefinition {
    name: "HRexPatientDemographicsName",
    baseType: (),
    elements: {
        "given": {
            name: "given",
            dataType: string,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Given name.",
            path: "Patient.name.given"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Patient.name.extension"
        },
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates the period of time when this name was valid for the named person.",
            path: "Patient.name.period"
        },
        "prefix": {
            name: "prefix",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.",
            path: "Patient.name.prefix"
        },
        "use": {
            name: "use",
            dataType: HRexPatientDemographicsNameUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "Identifies the purpose for this name.",
            path: "Patient.name.use"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Patient.name.id"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts.",
            path: "Patient.name.text"
        },
        "family": {
            name: "family",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father.",
            path: "Patient.name.family"
        },
        "suffix": {
            name: "suffix",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.",
            path: "Patient.name.suffix"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HRexPatientDemographicsName record {|
    *r4:HumanName;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Patient.name.given constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Patient.name.given constraint. This field must be an array containing at most one item."
        }
    }
    string[] given;
    r4:Extension[] extension?;
    r4:Period period?;
    string[] prefix?;
    HRexPatientDemographicsNameUse use?;
    string id?;
    string text?;
    string family;
    string[] suffix?;
|};

# HRexPatientDemographicsAddressUse enum
public enum HRexPatientDemographicsAddressUse {
   CODE_USE_TEMP = "temp",
   CODE_USE_WORK = "work",
   CODE_USE_OLD = "old",
   CODE_USE_HOME = "home",
   CODE_USE_BILLING = "billing"
}

# HRexPatientDemographicsNameUse enum
public enum HRexPatientDemographicsNameUse {
   CODE_USE_MAIDEN = "maiden",
   CODE_USE_TEMP = "temp",
   CODE_USE_USUAL = "usual",
   CODE_USE_OLD = "old",
   CODE_USE_NICKNAME = "nickname",
   CODE_USE_OFFICIAL = "official",
   CODE_USE_ANONYMOUS = "anonymous"
}

# FHIR HRexPatientDemographicsAddress datatype record.
#
# + country - Country - a nation as commonly understood or generally accepted.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Time period when address was/is in use.
# + city - The name of the city, town, suburb, village or other community or delivery center.
# + line - This component contains the house number, apartment number, street name, street direction, P.O. Box number, delivery hints, and similar address information.
# + use - The purpose of this address.
# + district - The name of the administrative area (county).
# + postalCode - A postal code designating a region defined by the postal service.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + state - Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes).
# + text - Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts.
# + 'type - Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.
@r4:DataTypeDefinition {
    name: "HRexPatientDemographicsAddress",
    baseType: (),
    elements: {
        "country": {
            name: "country",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Country - a nation as commonly understood or generally accepted.",
            path: "Patient.address.country"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Patient.address.extension"
        },
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period when address was/is in use.",
            path: "Patient.address.period"
        },
        "city": {
            name: "city",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The name of the city, town, suburb, village or other community or delivery center.",
            path: "Patient.address.city"
        },
        "line": {
            name: "line",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "This component contains the house number, apartment number, street name, street direction, P.O. Box number, delivery hints, and similar address information.",
            path: "Patient.address.line"
        },
        "use": {
            name: "use",
            dataType: HRexPatientDemographicsAddressUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this address.",
            path: "Patient.address.use"
        },
        "district": {
            name: "district",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The name of the administrative area (county).",
            path: "Patient.address.district"
        },
        "postalCode": {
            name: "postalCode",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A postal code designating a region defined by the postal service.",
            path: "Patient.address.postalCode"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Patient.address.id"
        },
        "state": {
            name: "state",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes).",
            path: "Patient.address.state"
        },
        "text": {
            name: "text",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts.",
            path: "Patient.address.text"
        },
        "type": {
            name: "type",
            dataType: HRexPatientDemographicsAddressType,
            min: 0,
            max: 1,
            isArray: false,
            description: "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.",
            path: "Patient.address.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HRexPatientDemographicsAddress record {|
    *r4:Address;

    string country?;
    r4:Extension[] extension?;
    r4:Period period?;
    string city?;
    string[] line?;
    HRexPatientDemographicsAddressUse use?;
    string district?;
    string postalCode?;
    string id?;
    string state?;
    string text?;
    HRexPatientDemographicsAddressType 'type?;
|};

# FHIR HRexPatientDemographicsIdentifierUmb datatype record.
#
# + 'type - A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.
@r4:DataTypeDefinition {
    name: "HRexPatientDemographicsIdentifierUmb",
    baseType: (),
    elements: {
        "type": {
            name: "type",
            dataType: HRexPatientDemographicsIdentifierType,
            min: 1,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "Patient.identifier.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HRexPatientDemographicsIdentifierUmb record {|
    *r4:Identifier;

    HRexPatientDemographicsIdentifierType 'type;
|};

# HRexPatientDemographicsAddressType enum
public enum HRexPatientDemographicsAddressType {
   CODE_TYPE_POSTAL = "postal",
   CODE_TYPE_PHYSICAL = "physical",
   CODE_TYPE_BOTH = "both"
}

# FHIR HRexPatientDemographicsLink datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + other - The other patient resource that the link refers to.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The type of link between this patient resource and another patient resource.
@r4:DataTypeDefinition {
    name: "HRexPatientDemographicsLink",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Patient.link.extension"
        },
        "other": {
            name: "other",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "The other patient resource that the link refers to.",
            path: "Patient.link.other"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Patient.link.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Patient.link.id"
        },
        "type": {
            name: "type",
            dataType: HRexPatientDemographicsLinkType,
            min: 1,
            max: 1,
            isArray: false,
            description: "The type of link between this patient resource and another patient resource.",
            path: "Patient.link.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HRexPatientDemographicsLink record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Reference other;
    r4:Extension[] modifierExtension?;
    string id?;
    HRexPatientDemographicsLinkType 'type;
|};

# FHIR HRexPatientDemographicsCommunication datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. 'en' for English, or 'en-US' for American English versus 'en-EN' for England English.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + preferred - Indicates whether or not the patient prefers this language (over other languages he masters up a certain level).
@r4:DataTypeDefinition {
    name: "HRexPatientDemographicsCommunication",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Patient.communication.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Patient.communication.modifierExtension"
        },
        "language": {
            name: "language",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. 'en' for English, or 'en-US' for American English versus 'en-EN' for England English.",
            path: "Patient.communication.language"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Patient.communication.id"
        },
        "preferred": {
            name: "preferred",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates whether or not the patient prefers this language (over other languages he masters up a certain level).",
            path: "Patient.communication.preferred"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HRexPatientDemographicsCommunication record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept language;
    string id?;
    boolean preferred?;
|};

# FHIR HRexPatientDemographicsIdentifierType datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "HRexPatientDemographicsIdentifierType",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: HRexPatientDemographicsIdentifierTypeCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Patient.identifier.type.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HRexPatientDemographicsIdentifierType record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.Patient.identifier.type.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.Patient.identifier.type.coding constraint. This field must be an array containing at most one item."
        }
    }
    HRexPatientDemographicsIdentifierTypeCoding[] coding;
|};

# FHIR HRexPatientDemographicsContact datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - The period during which this contact person or organization is valid to be contacted relating to this patient.
# + address - Address for the contact person.
# + gender - Administrative Gender - the gender that the contact person is considered to have for administration and record keeping purposes.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + organization - Organization on behalf of which the contact is acting or for which the contact is working.
# + name - A name associated with the contact person.
# + telecom - A contact detail for the person, e.g. a telephone number or an email address.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + relationship - The nature of the relationship between the patient and the contact person.
@r4:DataTypeDefinition {
    name: "HRexPatientDemographicsContact",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Patient.contact.extension"
        },
        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The period during which this contact person or organization is valid to be contacted relating to this patient.",
            path: "Patient.contact.period"
        },
        "address": {
            name: "address",
            dataType: r4:Address,
            min: 0,
            max: 1,
            isArray: false,
            description: "Address for the contact person.",
            path: "Patient.contact.address"
        },
        "gender": {
            name: "gender",
            dataType: HRexPatientDemographicsContactGender,
            min: 0,
            max: 1,
            isArray: false,
            description: "Administrative Gender - the gender that the contact person is considered to have for administration and record keeping purposes.",
            path: "Patient.contact.gender"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Patient.contact.modifierExtension"
        },
        "organization": {
            name: "organization",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization on behalf of which the contact is acting or for which the contact is working.",
            path: "Patient.contact.organization"
        },
        "name": {
            name: "name",
            dataType: r4:HumanName,
            min: 0,
            max: 1,
            isArray: false,
            description: "A name associated with the contact person.",
            path: "Patient.contact.name"
        },
        "telecom": {
            name: "telecom",
            dataType: r4:ContactPoint,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A contact detail for the person, e.g. a telephone number or an email address.",
            path: "Patient.contact.telecom"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Patient.contact.id"
        },
        "relationship": {
            name: "relationship",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The nature of the relationship between the patient and the contact person.",
            path: "Patient.contact.relationship"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HRexPatientDemographicsContact record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Period period?;
    r4:Address address?;
    HRexPatientDemographicsContactGender gender?;
    r4:Extension[] modifierExtension?;
    r4:Reference organization?;
    r4:HumanName name?;
    r4:ContactPoint[] telecom?;
    string id?;
    r4:CodeableConcept[] relationship?;
|};

# HRexPatientDemographicsGender enum
public enum HRexPatientDemographicsGender {
   CODE_GENDER_OTHER = "other",
   CODE_GENDER_FEMALE = "female",
   CODE_GENDER_MALE = "male",
   CODE_GENDER_UNKNOWN = "unknown"
}

# HRexPatientDemographicsLinkType enum
public enum HRexPatientDemographicsLinkType {
   CODE_TYPE_REFER = "refer",
   CODE_TYPE_REPLACES = "replaces",
   CODE_TYPE_SEEALSO = "seealso",
   CODE_TYPE_REPLACED_BY = "replaced-by"
}

# FHIR HRexPatientDemographicsIdentifierTypeCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "HRexPatientDemographicsIdentifierTypeCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Patient.identifier.type.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Patient.identifier.type.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HRexPatientDemographicsIdentifierTypeCoding record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/davinci-hrex/CodeSystem/hrex-temp";
    r4:code code = "UMB";
|};

