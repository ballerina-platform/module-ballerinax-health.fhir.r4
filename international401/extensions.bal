// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r4;

public type OauthUrisExtensions (OauthUrisToken|OauthUrisRegister|OauthUrisAuthorize|OauthUrisManage);

public type CqfValueFilterExtensions (CqfValueFilterPath|CqfValueFilterComparator|CqfValueFilterSearchParam|CqfValueFilterValue);

public type ConfidentialExtensions (ConfidentialValueCodeableConcept|Confidential);

public type PatientCitizenshipExtensions (PatientCitizenshipPeriod|PatientCitizenshipCode);

public type CodesystemAlternateExtensions (CodesystemAlternateUse|CodesystemAlternateCode);

public type PatientNationalityExtensions (PatientNationalityPeriod|PatientNationalityCode);

public type VersionSpecificUseExtensions (VersionSpecificUseEndFhirVersion|VersionSpecificUseStartFhirVersion);

public type ArtifactassessmentContentExtensions (ArtifactassessmentContentType|ArtifactassessmentContentAuthor|ArtifactassessmentContentQuantity|ArtifactassessmentContentFreeToShare|ArtifactassessmentContentRelatedArtifact|ArtifactassessmentContentComponent|ArtifactassessmentContentInformationType|ArtifactassessmentContentSummary|ArtifactassessmentContentPath|ArtifactassessmentContentClassifier);

public type TranslationExtensions (ExtensionQuantityTranslation|Translation|IsoPQTranslation|TranslationLang|TranslationContent);

public type DosageMinimumGapBetweenDoseExtensions (DosageMinimumGapBetweenDosePrecondition|DosageMinimumGapBetweenDoseDoesNotOccur|DosageMinimumGapBetweenDoseMeetGoal|DosageMinimumGapBetweenDoseCondition|DosageMinimumGapBetweenDoseOffset|DosageMinimumGapBetweenDoseGoal|DosageMinimumGapBetweenDoseTrigger|DosageMinimumGapBetweenDoseWhenTrigger);

public type CqfDefinitionTermExtensions (CqfDefinitionTermDefinition|CqfDefinitionTermTerm);

public type PatientSexParameterForClinicalUseExtensions (PatientSexParameterForClinicalUsePeriod|PatientSexParameterForClinicalUseValue|PatientSexParameterForClinicalUseComment|PatientSexParameterForClinicalUseSupportingInfo);

public type CqfMeasureInfoExtensions (CqfMeasureInfoGroupId|CqfMeasureInfoPopulationId|CqfMeasureInfoMeasure);

public type GoalAcceptanceExtensions (GoalAcceptanceStatus|GoalAcceptancePriority|GoalAcceptanceIndividual);

public type PatientAnimalExtensions (PatientAnimalBreed|PatientAnimalSpecies|PatientAnimalGenderStatus);

public type ValuesetSelectByMapExtensions (ValuesetSelectByMapFilter|ValuesetSelectByMapMap);

public type ResearchStudySiteRecruitmentExtensions (ResearchStudySiteRecruitmentTargetNumber|ResearchStudySiteRecruitmentEligibility|ResearchStudySiteRecruitmentActualNumber);

public type GoalRelationshipExtensions (GoalRelationshipTarget|GoalRelationshipType);

public type ServicerequestGeneticsItemExtensions (ServicerequestGeneticsItemCode|ServicerequestGeneticsItemSpecimen|ServicerequestGeneticsItemGeneticsObservation|ServicerequestGeneticsItemStatus);

public type CqfLogicDefinitionExtensions (CqfLogicDefinitionLibraryName|CqfLogicDefinitionName|CqfLogicDefinitionDisplaySequence|CqfLogicDefinitionDisplayCategory|CqfLogicDefinitionStatement);

public type CqfCertaintyExtensions (CqfCertaintyRater|CqfCertaintyDescription|CqfCertaintyType|CqfCertaintyRating|CqfCertaintyNote);

public type CqfTargetInvariantExtensions (CqfTargetInvariantSeverity|CqfTargetInvariantExpression|CqfTargetInvariantKey|CqfTargetInvariantRequirements);

public type DerivationReferenceExtensions (DerivationReferenceOffset|DerivationReferenceReference|DerivationReferenceLength|DerivationReferencePath);

public type BusinessEventExtensions (BusinessEventValue|BusinessEventDate);

public type CodesystemHistoryExtensions (CodesystemHistoryNotes|CodesystemHistoryDate|CodesystemHistoryAuthor|CodesystemHistoryId|CodesystemHistoryRevision|CodesystemHistoryName);

public type PatientProficiencyExtensions (PatientProficiencyLevel|PatientProficiencyType);

public type ObservationGeneticsVariantExtensions (ObservationGeneticsVariantId|ObservationGeneticsVariantName|ObservationGeneticsVariantType);

public type CapabilitiesExtensions (Capabilities);

public type ValuesetExpandGroupExtensions (ValuesetExpandGroupCode|ValuesetExpandGroupMember|ValuesetExpandGroupDisplay);

public type CapabilitystatementSearchParameterUseExtensions (CapabilitystatementSearchParameterUseAllowRevinclude|CapabilitystatementSearchParameterUseAllowInclude|CapabilitystatementSearchParameterUseRequired);

public type DiagnosticReportGeneticsAnalysisExtensions (DiagnosticReportGeneticsAnalysisInterpretation|DiagnosticReportGeneticsAnalysisType);

public type RegexExtensions (Regex);

public type FamilyMemberHistoryGeneticsSiblingExtensions (FamilyMemberHistoryGeneticsSiblingReference|FamilyMemberHistoryGeneticsSiblingType);

public type HlaGenotypingResultsHaploidExtensions (HlaGenotypingResultsHaploidMethod|HlaGenotypingResultsHaploidLocus|HlaGenotypingResultsHaploidType);

public type StatisticModelIncludeIfExtensions (StatisticModelIncludeIfAttribute|StatisticModelIncludeIfValue);

public type StructuredefinitionXmlTypeExtensions (StructuredefinitionXmlTypeValueString);

public type TargetPathExtensions (RelativeDateTargetPath|CqfRelativeDateTimeTargetPath);

public type QuestionnaireConstraintExtensions (QuestionnaireConstraintSeverity|QuestionnaireConstraintHuman|QuestionnaireConstraintRequirements|QuestionnaireConstraintLocation|QuestionnaireConstraintKey|QuestionnaireConstraintExpression);

public type VariableExtensions (Variable);

public type ObservationGeneticsAminoAcidChangeExtensions (ObservationGeneticsAminoAcidChangeName|ObservationGeneticsAminoAcidChangeType);

public type IndividualGenderIdentityExtensions (IndividualGenderIdentityPeriod|IndividualGenderIdentityValue|IndividualGenderIdentityComment);

public type PackageSourceExtensions (PackageSourceVersion|PackageSourcePackageId|PackageSourceUri);

public type ValuesetUsageExtensions (ValuesetUsageUser|ValuesetUsageUse);

public type QuestionnaireresponseAttesterExtensions (QuestionnaireresponseAttesterTime|QuestionnaireresponseAttesterParty|QuestionnaireresponseAttesterMode);

public type RelativeDateExtensions (RelativeDateTargetPath|CqfRelativeDateTimeRelationship|RelativeDateOffset|RelativeDateTargetReference|RelativeDateTargetCode|CqfRelativeDateTimeOffset|CqfRelativeDateTimeTarget|CqfRelativeDateTimeTargetPath|RelativeDateRelationship);

public type ResearchStudyStudyRegistrationExtensions (ResearchStudyStudyRegistrationActivity|ResearchStudyStudyRegistrationActual|ResearchStudyStudyRegistrationPeriod);

public type ObservationVSubidExtensions (ObservationVSubidGroup|ObservationVSubidOriginalSubIdentifier|ObservationVSubidIdentifier|ObservationVSubidSequence);

public type HlaGenotypingResultsGlstringExtensions (HlaGenotypingResultsGlstringUrl|HlaGenotypingResultsGlstringText);

public type DevicerequestPatientInstructionExtensions (DevicerequestPatientInstructionLang|DevicerequestPatientInstructionContent);

public type ValuesetOtherNameExtensions (ValuesetOtherNameName|ValuesetOtherNamePreferred);

public type OrganizationBrandExtensions (OrganizationBrandBrandLogoLicenseType|OrganizationBrandBrandLogo|OrganizationBrandBrandLogoLicense|OrganizationBrandBrandBundle);

public type VersionSpecificValueExtensions (VersionSpecificValueEndFhirVersion|VersionSpecificValueValue|VersionSpecificValueStartFhirVersion);

public type TargetConstraintExtensions (TargetConstraintExpression|TargetConstraintHuman|TargetConstraintRequirements|TargetConstraintLocation|TargetConstraintKey|TargetConstraintSeverity);

public type IndividualRecordedSexOrGenderExtensions (IndividualRecordedSexOrGenderJurisdiction|IndividualRecordedSexOrGenderComment|IndividualRecordedSexOrGenderSourceField|IndividualRecordedSexOrGenderAcquisitionDate|IndividualRecordedSexOrGenderValue|IndividualRecordedSexOrGenderGenderElementQualifier|IndividualRecordedSexOrGenderEffectivePeriod|IndividualRecordedSexOrGenderSource|IndividualRecordedSexOrGenderSourceDocument|IndividualRecordedSexOrGenderType);

public type ArtifactVersionExtensions (ArtifactVersionAlgorithmValueCoding);

public type TimingDaysOfCycleExtensions (TimingDaysOfCycleDay);

public type SatisfiesRequirementExtensions (SatisfiesRequirementReference|SatisfiesRequirementKey);

public type CqfRelativeDateTimeExtensions (CqfRelativeDateTimeRelationship|CqfRelativeDateTimeOffset|CqfRelativeDateTimeTarget|CqfRelativeDateTimeTargetPath);

public type NoFixedAddressExtensions (NoFixedAddressValueBoolean);

public type StructuredefinitionRdfTypeExtensions (StructuredefinitionRdfTypeValueString);

public type CodesystemOtherNameExtensions (CodesystemOtherNameName|CodesystemOtherNamePreferred);

public type QuestionnaireOptionRestrictionExtensions (QuestionnaireOptionRestrictionOption|QuestionnaireOptionRestrictionExpression);

public type _datatypeExtensions (_datatype);

public type CqfArtifactCommentExtensions (CqfArtifactCommentUser|CqfArtifactCommentText|CqfArtifactCommentTarget|CqfArtifactCommentAuthoredOn|CqfArtifactCommentReference|CqfArtifactCommentType);

public type ObservationGeneticsAncestryExtensions (ObservationGeneticsAncestryName|ObservationGeneticsAncestrySource|ObservationGeneticsAncestryPercentage);

public type ObligationsProfileExtensions (ObligationsProfileActor|ObligationsProfileProfile);

public type ArtifactVersionAlgorithmExtensions (ArtifactVersionAlgorithmValueCoding);

public type DosageConditionsExtensions (DosageConditionsMeetGoal|DosageConditionsTrigger|DosageConditionsWhenTrigger|DosageConditionsGoal|DosageConditionsPrecondition|DosageConditionsCondition|DosageConditionsOffset|DosageConditionsDoesNotOccur);

public type AllergyintoleranceSubstanceExposureRiskExtensions (AllergyintoleranceSubstanceExposureRiskSubstance|AllergyintoleranceSubstanceExposureRiskExposureRisk);

public type DiagnosticReportWorkflowStatusExtensions (DiagnosticReportWorkflowStatusValue|DiagnosticReportWorkflowStatusTimestamp);

public type ObligationExtensions (ObligationElementId|ObligationUsage|Obligation|ObligationsProfileActor|ObligationCode|ObligationDocumentation|ObligationsProfileProfile|ObligationName|ObligationProcess|ObligationActor|ObligationsProfile|ObligationFilterDocumentation|ObligationFilter);

public type DeviceMaintenanceresponsibilityExtensions (DeviceMaintenanceresponsibilityOrganization|DeviceMaintenanceresponsibilityPerson);

public type CapabilitystatementSearchParameterCombinationExtensions (CapabilitystatementSearchParameterCombinationOptional|CapabilitystatementSearchParameterCombinationRequired);

public type DiagnosticReportGeneticsReferencesExtensions (DiagnosticReportGeneticsReferencesType|DiagnosticReportGeneticsReferencesDescription|DiagnosticReportGeneticsReferencesReference);

public type LanguageExtensions (ValuesetOtherTitleLanguage|Language);

public type GeolocationExtensions (Geolocation|GeolocationLongitude|GeolocationLatitude);

public type TerminologyResourceIdentifierMetadataExtensions (TerminologyResourceIdentifierMetadataAuthoritative|TerminologyResourceIdentifierMetadataComment|TerminologyResourceIdentifierMetadataPreferred);

public type OrganizationPortalExtensions (OrganizationPortalPortalDescription|OrganizationPortalPortalEndpoint|OrganizationPortalPortalLogoLicense|OrganizationPortalPortalName|OrganizationPortalPortalUrl|OrganizationPortalPortalLogo|OrganizationPortalPortalLogoLicenseType);

public type AddressOfficialExtensions (AddressOfficialValueCodeableConcept|AddressOfficialValueBoolean);

public type ImplementationguideSourceFileExtensions (ImplementationguideSourceFileLocation|ImplementationguideSourceFileKeepAsResource|ImplementationguideSourceFileFile);

public type CodesystemUsageExtensions (CodesystemUsageUser|CodesystemUsageUse);

public type TimezoneExtensions (Timezone);

public type ObservationGeneticsPhaseSetExtensions (ObservationGeneticsPhaseSetId|ObservationGeneticsPhaseSetMolecularSequence);

public type DisplayExtensions (CqfLogicDefinitionDisplaySequence|QuestionnaireDisplayCategory|CqfLogicDefinitionDisplayCategory|ValuesetExpandGroupDisplay|StructuredefinitionDisplayHint|Display);

public type PatientPreferredPharmacyExtensions (PatientPreferredPharmacyPharmacy|PatientPreferredPharmacyType);

public type FamilyMemberHistoryGeneticsParentExtensions (FamilyMemberHistoryGeneticsParentReference|FamilyMemberHistoryGeneticsParentType);

public type ReplacesExtensions (DiagnosticReportReplaces|RequestReplaces|ObservationReplaces|TaskReplaces|Replaces);

public type IndividualPronounsExtensions (IndividualPronounsComment|IndividualPronounsPeriod|IndividualPronounsValue);

public type MedicationManufacturingBatchExtensions (MedicationManufacturingBatchContainer|MedicationManufacturingBatchAssignedManufacturer|MedicationManufacturingBatchBatchUtilization|MedicationManufacturingBatchExpirationDateClassification|MedicationManufacturingBatchManufacturingDateClassification|MedicationManufacturingBatchLotNumber|MedicationManufacturingBatchType|MedicationManufacturingBatchClosureType|MedicationManufacturingBatchManufacturingDate|MedicationManufacturingBatchBatchQuantity|MedicationManufacturingBatchQuantity|MedicationManufacturingBatchAdditionalInformation|MedicationManufacturingBatchClosureSystemDescription);

public type BiologicallyderivedproductProcessingExtensions (BiologicallyderivedproductProcessingProcedure|BiologicallyderivedproductProcessingDescription|BiologicallyderivedproductProcessingTime|BiologicallyderivedproductProcessingAdditive);

public type NoteExtensions (CodesystemHistoryNotes|Note|CqfCertaintyNote);

public type BiologicallyderivedproductManipulationExtensions (BiologicallyderivedproductManipulationProcedure|BiologicallyderivedproductManipulationTime|BiologicallyderivedproductManipulationDescription);

public type StructuredefinitionJsonTypeExtensions (StructuredefinitionJsonTypeValueString);

public type ValuesetOtherTitleExtensions (ValuesetOtherTitleLanguage|ValuesetOtherTitlePreferred|ValuesetOtherTitleTitle);

public type ObservationGeneticsAlleleExtensions (ObservationGeneticsAlleleName|ObservationGeneticsAlleleState|ObservationGeneticsAlleleFrequency);

@r4:DataTypeDefinition {
    name: "AddressOfficialValueBoolean",
    baseType: (),
    elements: {
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AddressOfficialValueBoolean record {|
    *r4:ExtensionExtension;

|};

@r4:DataTypeDefinition {
    name: "AddressOfficialValueCodeableConcept",
    baseType: (),
    elements: {
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AddressOfficialValueCodeableConcept record {|
    *r4:ExtensionExtension;

|};

@r4:DataTypeDefinition {
    name: "AllergyintoleranceSubstanceExposureRiskExposureRisk",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "exposureRisk.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "exposureRisk.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "exposureRisk.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "exposureRisk.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AllergyintoleranceSubstanceExposureRiskExposureRisk record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "exposureRisk" url = "exposureRisk";
|};

@r4:DataTypeDefinition {
    name: "AllergyintoleranceSubstanceExposureRiskSubstance",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "substance.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "substance.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "substance.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "substance.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AllergyintoleranceSubstanceExposureRiskSubstance record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "substance" url = "substance";
|};

@r4:DataTypeDefinition {
    name: "ArtifactassessmentContentAuthor",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "author.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "author.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "author.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "author.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactassessmentContentAuthor record {|
    *r4:ReferenceExtension;

    r4:Extension[] extension?;
    r4:Reference valueReference?;
    string id?;
    "author" url = "author";
|};

@r4:DataTypeDefinition {
    name: "ArtifactassessmentContentClassifier",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "classifier.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "classifier.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "classifier.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "classifier.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactassessmentContentClassifier record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "classifier" url = "classifier";
|};

@r4:DataTypeDefinition {
    name: "ArtifactassessmentContentComponent",
    baseType: (),
    elements: {
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "component.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "component.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "component.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "component.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactassessmentContentComponent record {|
    *r4:Base64BinaryExtension;

    r4:base64Binary valueBase64Binary?;
    r4:Extension[] extension?;
    string id?;
    "component" url = "component";
|};

@r4:DataTypeDefinition {
    name: "ArtifactassessmentContentFreeToShare",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "freeToShare.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "freeToShare.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "freeToShare.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "freeToShare.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactassessmentContentFreeToShare record {|
    *r4:BooleanExtension;

    boolean valueBoolean?;
    r4:Extension[] extension?;
    string id?;
    "freeToShare" url = "freeToShare";
|};

@r4:DataTypeDefinition {
    name: "ArtifactassessmentContentInformationType",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "informationType.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "informationType.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "informationType.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "informationType.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactassessmentContentInformationType record {|
    *r4:CodeExtension;

    r4:Extension[] extension?;
    r4:code valueCode?;
    string id?;
    "informationType" url = "informationType";
|};

@r4:DataTypeDefinition {
    name: "ArtifactassessmentContentPath",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "path.extension"
        },

        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "path.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "path.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "path.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactassessmentContentPath record {|
    *r4:UriExtension;

    r4:Extension[] extension?;
    r4:uri valueUri?;
    string id?;
    "path" url = "path";
|};

@r4:DataTypeDefinition {
    name: "ArtifactassessmentContentQuantity",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "quantity.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "quantity.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "quantity.url"
        },

        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "quantity.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactassessmentContentQuantity record {|
    *r4:QuantityExtension;

    r4:Extension[] extension?;
    string id?;
    "quantity" url = "quantity";
    r4:Quantity valueQuantity?;
|};

@r4:DataTypeDefinition {
    name: "ArtifactassessmentContentRelatedArtifact",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "relatedArtifact.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "relatedArtifact.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "relatedArtifact.url"
        },

        "valueRelatedArtifact": {
            name: "valueRelatedArtifact",
            dataType: r4:RelatedArtifact,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "relatedArtifact.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactassessmentContentRelatedArtifact record {|
    *r4:RelatedArtifactExtension;

    r4:Extension[] extension?;
    string id?;
    "relatedArtifact" url = "relatedArtifact";
    r4:RelatedArtifact valueRelatedArtifact?;
|};

@r4:DataTypeDefinition {
    name: "ArtifactassessmentContentSummary",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "summary.extension"
        },

        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "summary.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "summary.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "summary.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactassessmentContentSummary record {|
    *r4:MarkdownExtension;

    r4:Extension[] extension?;
    r4:markdown valueMarkdown?;
    string id?;
    "summary" url = "summary";
|};

@r4:DataTypeDefinition {
    name: "ArtifactassessmentContentType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "type.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "type.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "type.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactassessmentContentType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    r4:Extension[] extension?;
    string id?;
    "type" url = "type";
|};

@r4:DataTypeDefinition {
    name: "ArtifactVersionAlgorithmValueCoding",
    baseType: (),
    elements: {
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactVersionAlgorithmValueCoding record {|
    *r4:ExtensionExtension;

|};

@r4:DataTypeDefinition {
    name: "BiologicallyderivedproductManipulationDescription",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "description.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "description.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "description.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "description.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BiologicallyderivedproductManipulationDescription record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "description" url = "description";
|};

@r4:DataTypeDefinition {
    name: "BiologicallyderivedproductManipulationProcedure",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "procedure.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "procedure.id"
        },

        "valueCodeableReference": {
            name: "valueCodeableReference",
            dataType: r4:CodeableReference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "procedure.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "procedure.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BiologicallyderivedproductManipulationProcedure record {|
    *r4:CodeableReferenceExtension;

    string id?;
    r4:CodeableReference valueCodeableReference;
    "procedure" url = "procedure";
|};

@r4:DataTypeDefinition {
    name: "BiologicallyderivedproductManipulationTime",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "time[x].extension"
        },

        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "time[x].value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "time[x].id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "time[x].url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BiologicallyderivedproductManipulationTime record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    string id?;
    "timex" url = "timex";
|};

@r4:DataTypeDefinition {
    name: "BiologicallyderivedproductProcessingAdditive",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "additive.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "additive.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "additive.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "additive.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BiologicallyderivedproductProcessingAdditive record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    string id?;
    "additive" url = "additive";
|};

@r4:DataTypeDefinition {
    name: "BiologicallyderivedproductProcessingDescription",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "description.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "description.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "description.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "description.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BiologicallyderivedproductProcessingDescription record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "description" url = "description";
|};

@r4:DataTypeDefinition {
    name: "BiologicallyderivedproductProcessingProcedure",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "procedure.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "procedure.id"
        },

        "valueCodeableReference": {
            name: "valueCodeableReference",
            dataType: r4:CodeableReference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "procedure.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "procedure.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BiologicallyderivedproductProcessingProcedure record {|
    *r4:CodeableReferenceExtension;

    string id?;
    r4:CodeableReference valueCodeableReference;
    "procedure" url = "procedure";
|};

@r4:DataTypeDefinition {
    name: "BiologicallyderivedproductProcessingTime",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "time[x].extension"
        },

        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "time[x].value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "time[x].id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "time[x].url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BiologicallyderivedproductProcessingTime record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    string id?;
    "timex" url = "timex";
|};

@r4:DataTypeDefinition {
    name: "BusinessEventDate",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "date.extension"
        },

        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "date.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "date.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "date.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BusinessEventDate record {|
    *r4:DateTimeExtension;

    r4:Extension[] extension?;
    r4:dateTime valueDateTime;
    string id?;
    "date" url = "date";
|};

@r4:DataTypeDefinition {
    name: "BusinessEventValue",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "value.extension"
        },

        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "value.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "value.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BusinessEventValue record {|
    *r4:Base64BinaryExtension;

    r4:CodeableConcept valueCodeableConcept;
    r4:Extension[] extension?;
    r4:dateTime valueDateTime;
    string id?;
    "value" url = "value";
|};

@r4:DataTypeDefinition {
    name: "CapabilitystatementSearchParameterCombinationOptional",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "optional.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "optional.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "optional.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "optional.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CapabilitystatementSearchParameterCombinationOptional record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "optional" url = "optional";
|};

@r4:DataTypeDefinition {
    name: "CapabilitystatementSearchParameterCombinationRequired",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "required.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "required.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "required.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "required.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CapabilitystatementSearchParameterCombinationRequired record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "required" url = "required";
|};

@r4:DataTypeDefinition {
    name: "CapabilitystatementSearchParameterUseAllowInclude",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "allow-include.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "allow-include.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "allow-include.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "allow-include.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CapabilitystatementSearchParameterUseAllowInclude record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    string id?;
    "allow-include" url = "allow-include";
|};

@r4:DataTypeDefinition {
    name: "CapabilitystatementSearchParameterUseAllowRevinclude",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "allow-revinclude.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "allow-revinclude.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "allow-revinclude.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "allow-revinclude.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CapabilitystatementSearchParameterUseAllowRevinclude record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    string id?;
    "allow-revinclude" url = "allow-revinclude";
|};

@r4:DataTypeDefinition {
    name: "CapabilitystatementSearchParameterUseRequired",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "required.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "required.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "required.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "required.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CapabilitystatementSearchParameterUseRequired record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    string id?;
    "allow-standalone" url = "allow-standalone";
|};

@r4:DataTypeDefinition {
    name: "CodesystemAlternateCode",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "code.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "code.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "code.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "code.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemAlternateCode record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "code" url = "code";
|};

@r4:DataTypeDefinition {
    name: "CodesystemAlternateUse",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "use.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "use.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "use.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "use.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemAlternateUse record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    string id?;
    "use" url = "use";
|};

@r4:DataTypeDefinition {
    name: "CodesystemHistoryAuthor",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "author.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "author.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "author.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "author.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemHistoryAuthor record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "author" url = "author";
|};

@r4:DataTypeDefinition {
    name: "CodesystemHistoryDate",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "date.extension"
        },

        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "date.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "date.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "date.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemHistoryDate record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    string id?;
    "date" url = "date";
|};

@r4:DataTypeDefinition {
    name: "CodesystemHistoryId",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "id.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "id.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "id.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemHistoryId record {|
    *r4:StringExtension;

    string valueString;
    "id" url = "id";
|};

@r4:DataTypeDefinition {
    name: "CodesystemHistoryName",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "name.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "name.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "name.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "name.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemHistoryName record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "name" url = "name";
|};

@r4:DataTypeDefinition {
    name: "CodesystemHistoryNotes",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "notes.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "notes.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "notes.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "notes.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemHistoryNotes record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "notes" url = "notes";
|};

@r4:DataTypeDefinition {
    name: "CodesystemHistoryRevision",
    baseType: (),
    elements: {
        "date": {
            name: "date",
            dataType: r4:Extension,
            min: 1,
            max: 1,
            isArray: true,
            description: "Date the change took place.",
            path: "revision.date"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "revision.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "revision.extension"
        },

        "notes": {
            name: "notes",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Description of exactly what was changed and how.",
            path: "revision.notes"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "revision.value[x]"
        },

        "author": {
            name: "author",
            dataType: r4:Extension,
            min: 1,
            max: 1,
            isArray: true,
            description: "Person or device responsible for the change.",
            path: "revision.author"
        },

        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "revision.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "revision.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "revision.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemHistoryRevision record {|
    *r4:Base64BinaryExtension;

    r4:Extension[] date;
    r4:Extension[] extension;
    r4:Extension[] notes?;
    string valueString;
    r4:Extension[] author;
    r4:dateTime valueDateTime;
    string id?;
    "date" url = "date";
|};

@r4:DataTypeDefinition {
    name: "CodesystemOtherNameName",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "name.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "name.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "name.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "name.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemOtherNameName record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "name" url = "name";
|};

@r4:DataTypeDefinition {
    name: "CodesystemOtherNamePreferred",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "preferred.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "preferred.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "preferred.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "preferred.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemOtherNamePreferred record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    string id?;
    "preferred" url = "preferred";
|};

@r4:DataTypeDefinition {
    name: "CodesystemUsageUse",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "use.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "use.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "use.id"
        },

        "user": {
            name: "user",
            dataType: r4:Extension,
            min: 1,
            max: 1,
            isArray: true,
            description: "This is most likely to be an organization but can be an individual. It would not be a program, that information should be recorded in the usage.use.",
            path: "use.user"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "use.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemUsageUse record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    r4:Extension[] user;
    "user" url = "user";
|};

@r4:DataTypeDefinition {
    name: "CodesystemUsageUser",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "user.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "user.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "user.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "user.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemUsageUser record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "user" url = "user";
|};

@r4:DataTypeDefinition {
    name: "ConfidentialValueCodeableConcept",
    baseType: (),
    elements: {
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ConfidentialValueCodeableConcept record {|
    *r4:ExtensionExtension;

|};

@r4:DataTypeDefinition {
    name: "CqfArtifactCommentAuthoredOn",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "authoredOn.extension"
        },

        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "authoredOn.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "authoredOn.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "authoredOn.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfArtifactCommentAuthoredOn record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    string id?;
    "authoredOn" url = "authoredOn";
|};

@r4:DataTypeDefinition {
    name: "CqfArtifactCommentReference",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "reference.extension"
        },

        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "reference.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "reference.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "reference.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfArtifactCommentReference record {|
    *r4:UriExtension;

    r4:uri valueUri;
    string id?;
    "reference" url = "reference";
|};

@r4:DataTypeDefinition {
    name: "CqfArtifactCommentTarget",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "target.extension"
        },

        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "target.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "target.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "target.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfArtifactCommentTarget record {|
    *r4:UriExtension;

    r4:uri valueUri;
    string id?;
    "target" url = "target";
|};

@r4:DataTypeDefinition {
    name: "CqfArtifactCommentText",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "text.extension"
        },

        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "text.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "text.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "text.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfArtifactCommentText record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    string id?;
    "text" url = "text";
|};

@r4:DataTypeDefinition {
    name: "CqfArtifactCommentType",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "type.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "type.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfArtifactCommentType record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "type" url = "type";
|};

@r4:DataTypeDefinition {
    name: "CqfArtifactCommentUser",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "user.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "user.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "user.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "user.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfArtifactCommentUser record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "user" url = "user";
|};

@r4:DataTypeDefinition {
    name: "CqfCertaintyDescription",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "description.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "description.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "description.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "description.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfCertaintyDescription record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "description" url = "description";
|};

@r4:DataTypeDefinition {
    name: "CqfCertaintyNote",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "note.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "note.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "note.url"
        },

        "valueAnnotation": {
            name: "valueAnnotation",
            dataType: r4:Annotation,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "note.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfCertaintyNote record {|
    *r4:AnnotationExtension;

    string id?;
    "note" url = "note";
    r4:Annotation valueAnnotation;
|};

@r4:DataTypeDefinition {
    name: "CqfCertaintyRater",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "rater.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "rater.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "rater.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "rater.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfCertaintyRater record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "rater" url = "rater";
|};

@r4:DataTypeDefinition {
    name: "CqfCertaintyRating",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "rating.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "rating.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "rating.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "rating.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfCertaintyRating record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "rating" url = "rating";
|};

@r4:DataTypeDefinition {
    name: "CqfCertaintyType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "type.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "type.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfCertaintyType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "type" url = "type";
|};

@r4:DataTypeDefinition {
    name: "CqfDefinitionTermDefinition",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "definition.extension"
        },

        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "definition.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "definition.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "definition.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfDefinitionTermDefinition record {|
    *r4:MarkdownExtension;

    r4:Extension[] extension?;
    r4:markdown valueMarkdown?;
    string id?;
    "definition" url = "definition";
|};

@r4:DataTypeDefinition {
    name: "CqfDefinitionTermTerm",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "term.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "term.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "term.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "term.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfDefinitionTermTerm record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    string id?;
    "term" url = "term";
|};

@r4:DataTypeDefinition {
    name: "CqfLogicDefinitionDisplayCategory",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "displayCategory.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "displayCategory.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "displayCategory.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "displayCategory.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfLogicDefinitionDisplayCategory record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "displayCategory" url = "displayCategory";
|};

@r4:DataTypeDefinition {
    name: "CqfLogicDefinitionDisplaySequence",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "displaySequence.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "displaySequence.id"
        },

        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "displaySequence.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "displaySequence.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfLogicDefinitionDisplaySequence record {|
    *r4:IntegerExtension;

    string id?;
    r4:integer valueInteger;
    "displaySequence" url = "displaySequence";
|};

@r4:DataTypeDefinition {
    name: "CqfLogicDefinitionLibraryName",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "libraryName.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "libraryName.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "libraryName.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "libraryName.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfLogicDefinitionLibraryName record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "libraryName" url = "libraryName";
|};

@r4:DataTypeDefinition {
    name: "CqfLogicDefinitionName",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "name.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "name.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "name.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "name.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfLogicDefinitionName record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "name" url = "name";
|};

@r4:DataTypeDefinition {
    name: "CqfLogicDefinitionStatement",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "statement.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "statement.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "statement.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "statement.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfLogicDefinitionStatement record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "statement" url = "statement";
|};

@r4:DataTypeDefinition {
    name: "CqfMeasureInfoGroupId",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "groupId.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "groupId.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "groupId.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "groupId.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfMeasureInfoGroupId record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "groupId" url = "groupId";
|};

@r4:DataTypeDefinition {
    name: "CqfMeasureInfoMeasure",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "measure.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "measure.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "measure.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "measure.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfMeasureInfoMeasure record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    string id?;
    "measure" url = "measure";
|};

@r4:DataTypeDefinition {
    name: "CqfMeasureInfoPopulationId",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "populationId.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "populationId.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "populationId.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "populationId.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfMeasureInfoPopulationId record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "populationId" url = "populationId";
|};

@r4:DataTypeDefinition {
    name: "CqfRelativeDateTimeOffset",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "offset.extension"
        },

        "valueDuration": {
            name: "valueDuration",
            dataType: r4:Duration,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "offset.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "offset.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "offset.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfRelativeDateTimeOffset record {|
    *r4:DurationExtension;

    r4:Duration valueDuration;
    string id?;
    "offset" url = "offset";
|};

@r4:DataTypeDefinition {
    name: "CqfRelativeDateTimeRelationship",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "relationship.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "relationship.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "relationship.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "relationship.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfRelativeDateTimeRelationship record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "relationship" url = "relationship";
|};

@r4:DataTypeDefinition {
    name: "CqfRelativeDateTimeTarget",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "target.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "target.value[x]"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "target.value[x]"
        },

        "targetPath": {
            name: "targetPath",
            dataType: r4:Extension,
            min: 1,
            max: 1,
            isArray: true,
            description: "The path to the element that defines the effective period for the event that the date/time value is relative to.",
            path: "target.targetPath"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "target.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "target.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfRelativeDateTimeTarget record {|
    *r4:StringExtension;

    r4:Reference valueReference;
    string valueString;
    r4:Extension[] targetPath;
    string id?;
    "target" url = "target";
|};

@r4:DataTypeDefinition {
    name: "CqfRelativeDateTimeTargetPath",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "targetPath.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "targetPath.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "targetPath.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "targetPath.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfRelativeDateTimeTargetPath record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "targetPath" url = "targetPath";
|};

@r4:DataTypeDefinition {
    name: "CqfTargetInvariantExpression",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "expression.extension"
        },

        "valueExpression": {
            name: "valueExpression",
            dataType: r4:Expression,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "expression.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "expression.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "expression.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfTargetInvariantExpression record {|
    *r4:ExpressionExtension;

    r4:Expression valueExpression;
    string id?;
    "expression" url = "expression";
|};

@r4:DataTypeDefinition {
    name: "CqfTargetInvariantKey",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "key.extension"
        },

        "valueId": {
            name: "valueId",
            dataType: r4:id,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "key.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "key.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "key.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfTargetInvariantKey record {|
    *r4:IdExtension;

    r4:id valueId;
    string id?;
    "key" url = "key";
|};

@r4:DataTypeDefinition {
    name: "CqfTargetInvariantRequirements",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "requirements.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "requirements.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "requirements.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "requirements.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfTargetInvariantRequirements record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "requirements" url = "requirements";
|};

@r4:DataTypeDefinition {
    name: "CqfTargetInvariantSeverity",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "severity.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "severity.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "severity.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "severity.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfTargetInvariantSeverity record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "severity" url = "severity";
|};

@r4:DataTypeDefinition {
    name: "CqfValueFilterComparator",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "comparator.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "comparator.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "comparator.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "comparator.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfValueFilterComparator record {|
    *r4:CodeExtension;

    r4:Extension[] extension?;
    r4:code valueCode?;
    string id?;
    "comparator" url = "comparator";
|};

@r4:DataTypeDefinition {
    name: "CqfValueFilterPath",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "path.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "path.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "path.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "path.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfValueFilterPath record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    string id?;
    "path" url = "path";
|};

@r4:DataTypeDefinition {
    name: "CqfValueFilterSearchParam",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "searchParam.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "searchParam.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "searchParam.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "searchParam.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfValueFilterSearchParam record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString?;
    string id?;
    "searchParam" url = "searchParam";
|};

@r4:DataTypeDefinition {
    name: "CqfValueFilterValue",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "value.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "value.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "value.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfValueFilterValue record {|
    *r4:Base64BinaryExtension;

    boolean valueBoolean?;
    r4:Extension[] extension?;
    string valueString?;
    r4:code valueCode?;
    string id?;
    "value" url = "value";
|};

@r4:DataTypeDefinition {
    name: "DerivationReferenceLength",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "length.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "length.id"
        },

        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "length.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "length.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DerivationReferenceLength record {|
    *r4:IntegerExtension;

    string id?;
    r4:integer valueInteger;
    "length" url = "length";
|};

@r4:DataTypeDefinition {
    name: "DerivationReferenceOffset",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "offset.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "offset.id"
        },

        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "offset.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "offset.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DerivationReferenceOffset record {|
    *r4:IntegerExtension;

    string id?;
    r4:integer valueInteger;
    "offset" url = "offset";
|};

@r4:DataTypeDefinition {
    name: "DerivationReferencePath",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "path.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "path.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "path.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "path.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DerivationReferencePath record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "path" url = "path";
|};

@r4:DataTypeDefinition {
    name: "DerivationReferenceReference",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "reference.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "reference.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "reference.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "reference.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DerivationReferenceReference record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    string id?;
    "reference" url = "reference";
|};

@r4:DataTypeDefinition {
    name: "DeviceMaintenanceresponsibilityOrganization",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "organization.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "organization.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "organization.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "organization.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DeviceMaintenanceresponsibilityOrganization record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference?;
    string id?;
    "organization" url = "organization";
|};

@r4:DataTypeDefinition {
    name: "DeviceMaintenanceresponsibilityPerson",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "person.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "person.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "person.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "person.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DeviceMaintenanceresponsibilityPerson record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference?;
    string id?;
    "person" url = "person";
|};

@r4:DataTypeDefinition {
    name: "DevicerequestPatientInstructionContent",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "content.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "content.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "content.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "content.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DevicerequestPatientInstructionContent record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "content" url = "content";
|};

@r4:DataTypeDefinition {
    name: "DevicerequestPatientInstructionLang",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "lang.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "lang.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "lang.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "lang.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DevicerequestPatientInstructionLang record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "lang" url = "lang";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportGeneticsAnalysisInterpretation",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "interpretation.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "interpretation.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "interpretation.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "interpretation.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportGeneticsAnalysisInterpretation record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "interpretation" url = "interpretation";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportGeneticsAnalysisType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "type.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "type.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportGeneticsAnalysisType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "type" url = "type";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportGeneticsReferencesDescription",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "description.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "description.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "description.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "description.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportGeneticsReferencesDescription record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "description" url = "description";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportGeneticsReferencesReference",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "reference.extension"
        },

        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "reference.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "reference.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "reference.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportGeneticsReferencesReference record {|
    *r4:UriExtension;

    r4:uri valueUri;
    string id?;
    "reference" url = "reference";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportGeneticsReferencesType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "type.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "type.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportGeneticsReferencesType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "type" url = "type";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportWorkflowStatusTimestamp",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "timestamp.extension"
        },

        "valueInstant": {
            name: "valueInstant",
            dataType: r4:instant,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "timestamp.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "timestamp.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "timestamp.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportWorkflowStatusTimestamp record {|
    *r4:InstantExtension;

    r4:instant valueInstant;
    string id?;
    "timestamp" url = "timestamp";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportWorkflowStatusValue",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "value.extension"
        },

        "valueInstant": {
            name: "valueInstant",
            dataType: r4:instant,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "value.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "value.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportWorkflowStatusValue record {|
    *r4:Base64BinaryExtension;

    r4:CodeableConcept valueCodeableConcept;
    r4:base64Binary valueBase64Binary?;
    r4:instant valueInstant;
    string id?;
    "value" url = "value";
|};

@r4:DataTypeDefinition {
    name: "DosageConditionsCondition",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "condition.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "condition.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "condition.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "condition.value[x]"
        },

        "precondition": {
            name: "precondition",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A condition that must (or must not) be present for the dosage instructions to be followed.",
            path: "condition.precondition"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "condition.id"
        },

        "doesNotOccur": {
            name: "doesNotOccur",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "If set to 'true', indicates that the condition must not be present for the dosage instructions to be followed.",
            path: "condition.doesNotOccur"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "condition.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageConditionsCondition record {|
    *r4:Base64BinaryExtension;

    boolean valueBoolean;
    r4:Extension[] extension;
    r4:Reference valueReference;
    r4:Extension[] precondition?;
    string id?;
    r4:Extension[] doesNotOccur?;
    "doesNotOccur" url = "doesNotOccur";
|};

@r4:DataTypeDefinition {
    name: "DosageConditionsDoesNotOccur",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "doesNotOccur.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "doesNotOccur.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "doesNotOccur.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "doesNotOccur.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageConditionsDoesNotOccur record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    string id?;
    "doesNotOccur" url = "doesNotOccur";
|};

@r4:DataTypeDefinition {
    name: "DosageConditionsGoal",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "goal.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "goal.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "goal.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "goal.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageConditionsGoal record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "goal" url = "goal";
|};

@r4:DataTypeDefinition {
    name: "DosageConditionsMeetGoal",
    baseType: (),
    elements: {
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "meetGoal.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "meetGoal.extension"
        },

        "goal": {
            name: "goal",
            dataType: r4:Extension,
            min: 1,
            max: 1,
            isArray: true,
            description: "The specific goal to meet to follow the dosage instructions.",
            path: "meetGoal.goal"
        },

        "offset": {
            name: "offset",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Specifies the offset before or after the goal is met to follow the instructions.",
            path: "meetGoal.offset"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "meetGoal.value[x]"
        },

        "valueDuration": {
            name: "valueDuration",
            dataType: r4:Duration,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "meetGoal.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "meetGoal.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "meetGoal.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageConditionsMeetGoal record {|
    *r4:Base64BinaryExtension;

    r4:Extension[] extension;
    r4:Extension[] goal;
    r4:Extension[] offset?;
    string valueString;
    r4:Duration valueDuration;
    string id?;
    "offset" url = "offset";
|};

@r4:DataTypeDefinition {
    name: "DosageConditionsOffset",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "offset.extension"
        },

        "valueDuration": {
            name: "valueDuration",
            dataType: r4:Duration,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "offset.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "offset.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "offset.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageConditionsOffset record {|
    *r4:DurationExtension;

    r4:Duration valueDuration;
    string id?;
    "offset" url = "offset";
|};

@r4:DataTypeDefinition {
    name: "DosageConditionsPrecondition",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "precondition.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "precondition.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "precondition.extension"
        },

        "condition": {
            name: "condition",
            dataType: r4:Extension,
            min: 1,
            max: 1,
            isArray: true,
            description: "The event that causes the dosage instruction to be followed.",
            path: "precondition.condition"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "precondition.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "precondition.id"
        },

        "doesNotOccur": {
            name: "doesNotOccur",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "If set to 'true', indicates that the condition must not be present for the dosage instructions to be followed.",
            path: "precondition.doesNotOccur"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "precondition.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageConditionsPrecondition record {|
    *r4:Base64BinaryExtension;

    boolean valueBoolean;
    r4:Extension[] extension;
    r4:Extension[] condition;
    r4:Reference valueReference;
    string id?;
    r4:Extension[] doesNotOccur?;
    "doesNotOccur" url = "doesNotOccur";
|};

@r4:DataTypeDefinition {
    name: "DosageConditionsTrigger",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "trigger.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "trigger.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "trigger.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "trigger.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageConditionsTrigger record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "trigger" url = "trigger";
|};

@r4:DataTypeDefinition {
    name: "DosageConditionsWhenTrigger",
    baseType: (),
    elements: {
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "whenTrigger.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "whenTrigger.extension"
        },

        "offset": {
            name: "offset",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Specifies the offset before or after the trigger happens to follow the instructions.",
            path: "whenTrigger.offset"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "whenTrigger.value[x]"
        },

        "valueDuration": {
            name: "valueDuration",
            dataType: r4:Duration,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "whenTrigger.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "whenTrigger.id"
        },

        "trigger": {
            name: "trigger",
            dataType: r4:Extension,
            min: 1,
            max: 1,
            isArray: true,
            description: "The event that causes the dosage instruction to be followed.",
            path: "whenTrigger.trigger"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "whenTrigger.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageConditionsWhenTrigger record {|
    *r4:Base64BinaryExtension;

    r4:Extension[] extension;
    r4:Extension[] offset?;
    string valueString;
    r4:Duration valueDuration;
    string id?;
    r4:Extension[] trigger;
    "offset" url = "offset";
|};

@r4:DataTypeDefinition {
    name: "DosageMinimumGapBetweenDoseCondition",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "condition.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "condition.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "condition.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "condition.value[x]"
        },

        "precondition": {
            name: "precondition",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A condition that must (or must not) be present for the dosage instructions to be followed.",
            path: "condition.precondition"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "condition.id"
        },

        "doesNotOccur": {
            name: "doesNotOccur",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "If set to 'true', indicates that the condition must not be present for the dosage instructions to be followed.",
            path: "condition.doesNotOccur"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "condition.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageMinimumGapBetweenDoseCondition record {|
    *r4:Base64BinaryExtension;

    boolean valueBoolean;
    r4:Extension[] extension;
    r4:Reference valueReference;
    r4:Extension[] precondition?;
    string id?;
    r4:Extension[] doesNotOccur?;
    "doesNotOccur" url = "doesNotOccur";
|};

@r4:DataTypeDefinition {
    name: "DosageMinimumGapBetweenDoseDoesNotOccur",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "doesNotOccur.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "doesNotOccur.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "doesNotOccur.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "doesNotOccur.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageMinimumGapBetweenDoseDoesNotOccur record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    string id?;
    "doesNotOccur" url = "doesNotOccur";
|};

@r4:DataTypeDefinition {
    name: "DosageMinimumGapBetweenDoseGoal",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "goal.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "goal.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "goal.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "goal.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageMinimumGapBetweenDoseGoal record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "goal" url = "goal";
|};

@r4:DataTypeDefinition {
    name: "DosageMinimumGapBetweenDoseMeetGoal",
    baseType: (),
    elements: {
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "meetGoal.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "meetGoal.extension"
        },

        "goal": {
            name: "goal",
            dataType: r4:Extension,
            min: 1,
            max: 1,
            isArray: true,
            description: "The specific goal to meet to follow the dosage instructions.",
            path: "meetGoal.goal"
        },

        "offset": {
            name: "offset",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Specifies the offset before or after the goal is met to follow the instructions.",
            path: "meetGoal.offset"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "meetGoal.value[x]"
        },

        "valueDuration": {
            name: "valueDuration",
            dataType: r4:Duration,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "meetGoal.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "meetGoal.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "meetGoal.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageMinimumGapBetweenDoseMeetGoal record {|
    *r4:Base64BinaryExtension;

    r4:Extension[] extension;
    r4:Extension[] goal;
    r4:Extension[] offset?;
    string valueString;
    r4:Duration valueDuration;
    string id?;
    "offset" url = "offset";
|};

@r4:DataTypeDefinition {
    name: "DosageMinimumGapBetweenDoseOffset",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "offset.extension"
        },

        "valueDuration": {
            name: "valueDuration",
            dataType: r4:Duration,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "offset.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "offset.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "offset.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageMinimumGapBetweenDoseOffset record {|
    *r4:DurationExtension;

    r4:Duration valueDuration;
    string id?;
    "offset" url = "offset";
|};

@r4:DataTypeDefinition {
    name: "DosageMinimumGapBetweenDosePrecondition",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "precondition.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "precondition.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "precondition.extension"
        },

        "condition": {
            name: "condition",
            dataType: r4:Extension,
            min: 1,
            max: 1,
            isArray: true,
            description: "The event that causes the dosage instruction to be followed.",
            path: "precondition.condition"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "precondition.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "precondition.id"
        },

        "doesNotOccur": {
            name: "doesNotOccur",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "If set to 'true', indicates that the condition must not be present for the dosage instructions to be followed.",
            path: "precondition.doesNotOccur"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "precondition.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageMinimumGapBetweenDosePrecondition record {|
    *r4:Base64BinaryExtension;

    boolean valueBoolean;
    r4:Extension[] extension;
    r4:Extension[] condition;
    r4:Reference valueReference;
    string id?;
    r4:Extension[] doesNotOccur?;
    "doesNotOccur" url = "doesNotOccur";
|};

@r4:DataTypeDefinition {
    name: "DosageMinimumGapBetweenDoseTrigger",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "trigger.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "trigger.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "trigger.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "trigger.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageMinimumGapBetweenDoseTrigger record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "trigger" url = "trigger";
|};

@r4:DataTypeDefinition {
    name: "DosageMinimumGapBetweenDoseWhenTrigger",
    baseType: (),
    elements: {
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "whenTrigger.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "whenTrigger.extension"
        },

        "offset": {
            name: "offset",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Specifies the offset before or after the trigger happens to follow the instructions.",
            path: "whenTrigger.offset"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "whenTrigger.value[x]"
        },

        "valueDuration": {
            name: "valueDuration",
            dataType: r4:Duration,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "whenTrigger.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "whenTrigger.id"
        },

        "trigger": {
            name: "trigger",
            dataType: r4:Extension,
            min: 1,
            max: 1,
            isArray: true,
            description: "The event that causes the dosage instruction to be followed.",
            path: "whenTrigger.trigger"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "whenTrigger.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageMinimumGapBetweenDoseWhenTrigger record {|
    *r4:Base64BinaryExtension;

    r4:Extension[] extension;
    r4:Extension[] offset?;
    string valueString;
    r4:Duration valueDuration;
    string id?;
    r4:Extension[] trigger;
    "offset" url = "offset";
|};

@r4:DataTypeDefinition {
    name: "FamilyMemberHistoryGeneticsParentReference",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "reference.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "reference.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "reference.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "reference.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type FamilyMemberHistoryGeneticsParentReference record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    string id?;
    "reference" url = "reference";
|};

@r4:DataTypeDefinition {
    name: "FamilyMemberHistoryGeneticsParentType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "type.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "type.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type FamilyMemberHistoryGeneticsParentType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "type" url = "type";
|};

@r4:DataTypeDefinition {
    name: "FamilyMemberHistoryGeneticsSiblingReference",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "reference.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "reference.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "reference.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "reference.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type FamilyMemberHistoryGeneticsSiblingReference record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    string id?;
    "reference" url = "reference";
|};

@r4:DataTypeDefinition {
    name: "FamilyMemberHistoryGeneticsSiblingType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "type.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "type.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type FamilyMemberHistoryGeneticsSiblingType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "type" url = "type";
|};

@r4:DataTypeDefinition {
    name: "GeolocationLatitude",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "latitude.extension"
        },

        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "latitude.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "latitude.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "latitude.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type GeolocationLatitude record {|
    *r4:DecimalExtension;

    decimal valueDecimal;
    string id?;
    "latitude" url = "latitude";
|};

@r4:DataTypeDefinition {
    name: "GeolocationLongitude",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "longitude.extension"
        },

        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "longitude.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "longitude.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "longitude.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type GeolocationLongitude record {|
    *r4:DecimalExtension;

    decimal valueDecimal;
    string id?;
    "longitude" url = "longitude";
|};

@r4:DataTypeDefinition {
    name: "GoalAcceptanceIndividual",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "individual.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "individual.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "individual.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "individual.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type GoalAcceptanceIndividual record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    string id?;
    "individual" url = "individual";
|};

@r4:DataTypeDefinition {
    name: "GoalAcceptancePriority",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "priority.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "priority.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "priority.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "priority.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type GoalAcceptancePriority record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "priority" url = "priority";
|};

@r4:DataTypeDefinition {
    name: "GoalAcceptanceStatus",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "status.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "status.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "status.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "status.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type GoalAcceptanceStatus record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "status" url = "status";
|};

@r4:DataTypeDefinition {
    name: "GoalRelationshipTarget",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "target.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "target.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "target.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "target.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type GoalRelationshipTarget record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    string id?;
    "target" url = "target";
|};

@r4:DataTypeDefinition {
    name: "GoalRelationshipType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "type.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "type.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type GoalRelationshipType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "type" url = "type";
|};

@r4:DataTypeDefinition {
    name: "HlaGenotypingResultsGlstringText",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "text.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "text.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "text.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "text.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HlaGenotypingResultsGlstringText record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "text" url = "text";
|};

@r4:DataTypeDefinition {
    name: "HlaGenotypingResultsGlstringUrl",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "url.extension"
        },

        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "url.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "url.id"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HlaGenotypingResultsGlstringUrl record {|
    *r4:UriExtension;

    r4:uri valueUri;
    string id?;
|};

@r4:DataTypeDefinition {
    name: "HlaGenotypingResultsHaploidLocus",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "locus.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "locus.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "locus.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "locus.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HlaGenotypingResultsHaploidLocus record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "locus" url = "locus";
|};

@r4:DataTypeDefinition {
    name: "HlaGenotypingResultsHaploidMethod",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "method.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "method.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "method.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "method.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HlaGenotypingResultsHaploidMethod record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "method" url = "method";
|};

@r4:DataTypeDefinition {
    name: "HlaGenotypingResultsHaploidType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "type.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "type.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HlaGenotypingResultsHaploidType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "type" url = "type";
|};

@r4:DataTypeDefinition {
    name: "Capabilities",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type Capabilities record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://fhir-registry.smarthealthit.org/StructureDefinition/capabilities" url = "http://fhir-registry.smarthealthit.org/StructureDefinition/capabilities";
|};

@r4:DataTypeDefinition {
    name: "OauthUris",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OauthUris record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris" url = "http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris";
|};

@r4:DataTypeDefinition {
    name: "ObjectClass",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObjectClass record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org/fhir/StructureDefinition/11179-objectClass" url = "http://hl7.org/fhir/StructureDefinition/11179-objectClass";
|};

@r4:DataTypeDefinition {
    name: "ObjectClassProperty",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObjectClassProperty record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org/fhir/StructureDefinition/11179-objectClassProperty" url = "http://hl7.org/fhir/StructureDefinition/11179-objectClassProperty";
|};

@r4:DataTypeDefinition {
    name: "PermittedValueConceptmap",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PermittedValueConceptmap record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/11179-permitted-value-conceptmap" url = "http://hl7.org/fhir/StructureDefinition/11179-permitted-value-conceptmap";
|};

@r4:DataTypeDefinition {
    name: "PermittedValueValueset",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PermittedValueValueset record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/11179-permitted-value-valueset" url = "http://hl7.org/fhir/StructureDefinition/11179-permitted-value-valueset";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportGeneticsAnalysis",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportGeneticsAnalysis record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/DiagnosticReport-geneticsAnalysis" url = "http://hl7.org/fhir/StructureDefinition/DiagnosticReport-geneticsAnalysis";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportGeneticsAssessedCondition",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportGeneticsAssessedCondition record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/DiagnosticReport-geneticsAssessedCondition" url = "http://hl7.org/fhir/StructureDefinition/DiagnosticReport-geneticsAssessedCondition";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportGeneticsFamilyMemberHistory",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportGeneticsFamilyMemberHistory record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/DiagnosticReport-geneticsFamilyMemberHistory" url = "http://hl7.org/fhir/StructureDefinition/DiagnosticReport-geneticsFamilyMemberHistory";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportGeneticsReferences",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportGeneticsReferences record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/DiagnosticReport-geneticsReferences" url = "http://hl7.org/fhir/StructureDefinition/DiagnosticReport-geneticsReferences";
|};

@r4:DataTypeDefinition {
    name: "_datatype",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type _datatype record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/_datatype" url = "http://hl7.org/fhir/StructureDefinition/_datatype";
|};

@r4:DataTypeDefinition {
    name: "AdditionalIdentifier",
    baseType: (),
    elements: {
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AdditionalIdentifier record {|
    *r4:IdentifierExtension;

    r4:Identifier valueIdentifier;
    "http://hl7.org/fhir/StructureDefinition/additionalIdentifier" url = "http://hl7.org/fhir/StructureDefinition/additionalIdentifier";
|};

@r4:DataTypeDefinition {
    name: "AddressOfficial",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AddressOfficial record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/address-official" url = "http://hl7.org/fhir/StructureDefinition/address-official";
|};

@r4:DataTypeDefinition {
    name: "AllergyintoleranceAbatement",
    baseType: (),
    elements: {
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AllergyintoleranceAbatement record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    "http://hl7.org/fhir/StructureDefinition/allergyintolerance-abatement" url = "http://hl7.org/fhir/StructureDefinition/allergyintolerance-abatement";
|};

@r4:DataTypeDefinition {
    name: "AllergyintoleranceAssertedDate",
    baseType: (),
    elements: {
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AllergyintoleranceAssertedDate record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    "http://hl7.org/fhir/StructureDefinition/allergyintolerance-assertedDate" url = "http://hl7.org/fhir/StructureDefinition/allergyintolerance-assertedDate";
|};

@r4:DataTypeDefinition {
    name: "AllergyintoleranceCertainty",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AllergyintoleranceCertainty record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/allergyintolerance-certainty" url = "http://hl7.org/fhir/StructureDefinition/allergyintolerance-certainty";
|};

@r4:DataTypeDefinition {
    name: "AllergyintoleranceDuration",
    baseType: (),
    elements: {
        "valueDuration": {
            name: "valueDuration",
            dataType: r4:Duration,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AllergyintoleranceDuration record {|
    *r4:DurationExtension;

    r4:Duration valueDuration;
    "http://hl7.org/fhir/StructureDefinition/allergyintolerance-duration" url = "http://hl7.org/fhir/StructureDefinition/allergyintolerance-duration";
|};

@r4:DataTypeDefinition {
    name: "AllergyintoleranceReasonRefuted",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AllergyintoleranceReasonRefuted record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/allergyintolerance-reasonRefuted" url = "http://hl7.org/fhir/StructureDefinition/allergyintolerance-reasonRefuted";
|};

@r4:DataTypeDefinition {
    name: "AllergyintoleranceResolutionAge",
    baseType: (),
    elements: {
        "valueAge": {
            name: "valueAge",
            dataType: r4:Age,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AllergyintoleranceResolutionAge record {|
    *r4:AgeExtension;

    r4:Age valueAge;
    "http://hl7.org/fhir/StructureDefinition/allergyintolerance-resolutionAge" url = "http://hl7.org/fhir/StructureDefinition/allergyintolerance-resolutionAge";
|};

@r4:DataTypeDefinition {
    name: "AllergyintoleranceSubstanceExposureRisk",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AllergyintoleranceSubstanceExposureRisk record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/allergyintolerance-substanceExposureRisk" url = "http://hl7.org/fhir/StructureDefinition/allergyintolerance-substanceExposureRisk";
|};

@r4:DataTypeDefinition {
    name: "AlternateCanonical",
    baseType: (),
    elements: {
        "valueUrl": {
            name: "valueUrl",
            dataType: r4:urlType,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AlternateCanonical record {|
    *r4:UrlExtension;

    r4:url valueUrl;
    "http://hl7.org/fhir/StructureDefinition/alternate-canonical" url = "http://hl7.org/fhir/StructureDefinition/alternate-canonical";
|};

@r4:DataTypeDefinition {
    name: "AlternateCodes",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AlternateCodes record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/alternate-codes" url = "http://hl7.org/fhir/StructureDefinition/alternate-codes";
|};

@r4:DataTypeDefinition {
    name: "AlternateReference",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AlternateReference record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/alternate-reference" url = "http://hl7.org/fhir/StructureDefinition/alternate-reference";
|};

@r4:DataTypeDefinition {
    name: "AnnotationType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AnnotationType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/annotationType" url = "http://hl7.org/fhir/StructureDefinition/annotationType";
|};

@r4:DataTypeDefinition {
    name: "ArtifactApprovalDate",
    baseType: (),
    elements: {
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactApprovalDate record {|
    *r4:DateExtension;

    r4:date valueDate;
    "http://hl7.org/fhir/StructureDefinition/artifact-approvalDate" url = "http://hl7.org/fhir/StructureDefinition/artifact-approvalDate";
|};

@r4:DataTypeDefinition {
    name: "ArtifactAuthor",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },

        "valueContactDetail": {
            name: "valueContactDetail",
            dataType: r4:ContactDetail,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactAuthor record {|
    *r4:ContactDetailExtension;

    "http://hl7.org/fhir/StructureDefinition/artifact-author" url = "http://hl7.org/fhir/StructureDefinition/artifact-author";
    r4:ContactDetail valueContactDetail;
|};

@r4:DataTypeDefinition {
    name: "ArtifactCanonicalReference",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactCanonicalReference record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/artifact-canonicalReference" url = "http://hl7.org/fhir/StructureDefinition/artifact-canonicalReference";
|};

@r4:DataTypeDefinition {
    name: "ArtifactCiteAs",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactCiteAs record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/artifact-citeAs" url = "http://hl7.org/fhir/StructureDefinition/artifact-citeAs";
|};

@r4:DataTypeDefinition {
    name: "ArtifactContact",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },

        "valueContactDetail": {
            name: "valueContactDetail",
            dataType: r4:ContactDetail,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactContact record {|
    *r4:ContactDetailExtension;

    "http://hl7.org/fhir/StructureDefinition/artifact-contact" url = "http://hl7.org/fhir/StructureDefinition/artifact-contact";
    r4:ContactDetail valueContactDetail;
|};

@r4:DataTypeDefinition {
    name: "ArtifactContactDetailReference",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactContactDetailReference record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/artifact-contactDetailReference" url = "http://hl7.org/fhir/StructureDefinition/artifact-contactDetailReference";
|};

@r4:DataTypeDefinition {
    name: "ArtifactCopyright",
    baseType: (),
    elements: {
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactCopyright record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    "http://hl7.org/fhir/StructureDefinition/artifact-copyright" url = "http://hl7.org/fhir/StructureDefinition/artifact-copyright";
|};

@r4:DataTypeDefinition {
    name: "ArtifactCopyrightLabel",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactCopyrightLabel record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/artifact-copyrightLabel" url = "http://hl7.org/fhir/StructureDefinition/artifact-copyrightLabel";
|};

@r4:DataTypeDefinition {
    name: "ArtifactDate",
    baseType: (),
    elements: {
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactDate record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    "http://hl7.org/fhir/StructureDefinition/artifact-date" url = "http://hl7.org/fhir/StructureDefinition/artifact-date";
|};

@r4:DataTypeDefinition {
    name: "ArtifactDescription",
    baseType: (),
    elements: {
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactDescription record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    "http://hl7.org/fhir/StructureDefinition/artifact-description" url = "http://hl7.org/fhir/StructureDefinition/artifact-description";
|};

@r4:DataTypeDefinition {
    name: "ArtifactEditor",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },

        "valueContactDetail": {
            name: "valueContactDetail",
            dataType: r4:ContactDetail,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactEditor record {|
    *r4:ContactDetailExtension;

    "http://hl7.org/fhir/StructureDefinition/artifact-editor" url = "http://hl7.org/fhir/StructureDefinition/artifact-editor";
    r4:ContactDetail valueContactDetail;
|};

@r4:DataTypeDefinition {
    name: "ArtifactEffectivePeriod",
    baseType: (),
    elements: {
        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactEffectivePeriod record {|
    *r4:PeriodExtension;

    r4:Period valuePeriod;
    "http://hl7.org/fhir/StructureDefinition/artifact-effectivePeriod" url = "http://hl7.org/fhir/StructureDefinition/artifact-effectivePeriod";
|};

@r4:DataTypeDefinition {
    name: "ArtifactEndorser",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },

        "valueContactDetail": {
            name: "valueContactDetail",
            dataType: r4:ContactDetail,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactEndorser record {|
    *r4:ContactDetailExtension;

    "http://hl7.org/fhir/StructureDefinition/artifact-endorser" url = "http://hl7.org/fhir/StructureDefinition/artifact-endorser";
    r4:ContactDetail valueContactDetail;
|};

@r4:DataTypeDefinition {
    name: "ArtifactExperimental",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactExperimental record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/artifact-experimental" url = "http://hl7.org/fhir/StructureDefinition/artifact-experimental";
|};

@r4:DataTypeDefinition {
    name: "ArtifactIdentifier",
    baseType: (),
    elements: {
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactIdentifier record {|
    *r4:IdentifierExtension;

    r4:Identifier valueIdentifier;
    "http://hl7.org/fhir/StructureDefinition/artifact-identifier" url = "http://hl7.org/fhir/StructureDefinition/artifact-identifier";
|};

@r4:DataTypeDefinition {
    name: "ArtifactIsOwned",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactIsOwned record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/artifact-isOwned" url = "http://hl7.org/fhir/StructureDefinition/artifact-isOwned";
|};

@r4:DataTypeDefinition {
    name: "ArtifactJurisdiction",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactJurisdiction record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/artifact-jurisdiction" url = "http://hl7.org/fhir/StructureDefinition/artifact-jurisdiction";
|};

@r4:DataTypeDefinition {
    name: "ArtifactLastReviewDate",
    baseType: (),
    elements: {
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactLastReviewDate record {|
    *r4:DateExtension;

    r4:date valueDate;
    "http://hl7.org/fhir/StructureDefinition/artifact-lastReviewDate" url = "http://hl7.org/fhir/StructureDefinition/artifact-lastReviewDate";
|};

@r4:DataTypeDefinition {
    name: "ArtifactName",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactName record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/artifact-name" url = "http://hl7.org/fhir/StructureDefinition/artifact-name";
|};

@r4:DataTypeDefinition {
    name: "ArtifactPeriodDuration",
    baseType: (),
    elements: {
        "valueDuration": {
            name: "valueDuration",
            dataType: r4:Duration,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactPeriodDuration record {|
    *r4:DurationExtension;

    r4:Duration valueDuration;
    "http://hl7.org/fhir/StructureDefinition/artifact-periodDuration" url = "http://hl7.org/fhir/StructureDefinition/artifact-periodDuration";
|};

@r4:DataTypeDefinition {
    name: "ArtifactPublisher",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactPublisher record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/artifact-publisher" url = "http://hl7.org/fhir/StructureDefinition/artifact-publisher";
|};

@r4:DataTypeDefinition {
    name: "ArtifactPurpose",
    baseType: (),
    elements: {
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactPurpose record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    "http://hl7.org/fhir/StructureDefinition/artifact-purpose" url = "http://hl7.org/fhir/StructureDefinition/artifact-purpose";
|};

@r4:DataTypeDefinition {
    name: "ArtifactReference",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactReference record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/artifact-reference" url = "http://hl7.org/fhir/StructureDefinition/artifact-reference";
|};

@r4:DataTypeDefinition {
    name: "ArtifactRelatedArtifact",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },

        "valueRelatedArtifact": {
            name: "valueRelatedArtifact",
            dataType: r4:RelatedArtifact,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactRelatedArtifact record {|
    *r4:RelatedArtifactExtension;

    "http://hl7.org/fhir/StructureDefinition/artifact-relatedArtifact" url = "http://hl7.org/fhir/StructureDefinition/artifact-relatedArtifact";
    r4:RelatedArtifact valueRelatedArtifact;
|};

@r4:DataTypeDefinition {
    name: "ArtifactReleaseDescription",
    baseType: (),
    elements: {
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactReleaseDescription record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    "http://hl7.org/fhir/StructureDefinition/artifact-releaseDescription" url = "http://hl7.org/fhir/StructureDefinition/artifact-releaseDescription";
|};

@r4:DataTypeDefinition {
    name: "ArtifactReleaseLabel",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactReleaseLabel record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/artifact-releaseLabel" url = "http://hl7.org/fhir/StructureDefinition/artifact-releaseLabel";
|};

@r4:DataTypeDefinition {
    name: "ArtifactReviewer",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },

        "valueContactDetail": {
            name: "valueContactDetail",
            dataType: r4:ContactDetail,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactReviewer record {|
    *r4:ContactDetailExtension;

    "http://hl7.org/fhir/StructureDefinition/artifact-reviewer" url = "http://hl7.org/fhir/StructureDefinition/artifact-reviewer";
    r4:ContactDetail valueContactDetail;
|};

@r4:DataTypeDefinition {
    name: "ArtifactStatus",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactStatus record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/artifact-status" url = "http://hl7.org/fhir/StructureDefinition/artifact-status";
|};

@r4:DataTypeDefinition {
    name: "ArtifactTitle",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactTitle record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/artifact-title" url = "http://hl7.org/fhir/StructureDefinition/artifact-title";
|};

@r4:DataTypeDefinition {
    name: "ArtifactTopic",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactTopic record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/artifact-topic" url = "http://hl7.org/fhir/StructureDefinition/artifact-topic";
|};

@r4:DataTypeDefinition {
    name: "ArtifactUriReference",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactUriReference record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/artifact-uriReference" url = "http://hl7.org/fhir/StructureDefinition/artifact-uriReference";
|};

@r4:DataTypeDefinition {
    name: "ArtifactUrl",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactUrl record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/artifact-url" url = "http://hl7.org/fhir/StructureDefinition/artifact-url";
|};

@r4:DataTypeDefinition {
    name: "ArtifactUsage",
    baseType: (),
    elements: {
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactUsage record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    "http://hl7.org/fhir/StructureDefinition/artifact-usage" url = "http://hl7.org/fhir/StructureDefinition/artifact-usage";
|};

@r4:DataTypeDefinition {
    name: "ArtifactUseContext",
    baseType: (),
    elements: {
        "valueUsageContext": {
            name: "valueUsageContext",
            dataType: r4:UsageContext,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactUseContext record {|
    *r4:UsageContextExtension;

    r4:UsageContext valueUsageContext;
    "http://hl7.org/fhir/StructureDefinition/artifact-useContext" url = "http://hl7.org/fhir/StructureDefinition/artifact-useContext";
|};

@r4:DataTypeDefinition {
    name: "ArtifactVersion",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactVersion record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/artifact-version" url = "http://hl7.org/fhir/StructureDefinition/artifact-version";
|};

@r4:DataTypeDefinition {
    name: "ArtifactVersionAlgorithm",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactVersionAlgorithm record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/artifact-versionAlgorithm" url = "http://hl7.org/fhir/StructureDefinition/artifact-versionAlgorithm";
|};

@r4:DataTypeDefinition {
    name: "ArtifactVersionPolicy",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactVersionPolicy record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/artifact-versionPolicy" url = "http://hl7.org/fhir/StructureDefinition/artifact-versionPolicy";
|};

@r4:DataTypeDefinition {
    name: "ArtifactassessmentContent",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactassessmentContent record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/artifactassessment-content" url = "http://hl7.org/fhir/StructureDefinition/artifactassessment-content";
|};

@r4:DataTypeDefinition {
    name: "ArtifactassessmentDisposition",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactassessmentDisposition record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/artifactassessment-disposition" url = "http://hl7.org/fhir/StructureDefinition/artifactassessment-disposition";
|};

@r4:DataTypeDefinition {
    name: "ArtifactassessmentWorkflowStatus",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ArtifactassessmentWorkflowStatus record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/artifactassessment-workflowStatus" url = "http://hl7.org/fhir/StructureDefinition/artifactassessment-workflowStatus";
|};

@r4:DataTypeDefinition {
    name: "AuditeventAccession",
    baseType: (),
    elements: {
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuditeventAccession record {|
    *r4:IdentifierExtension;

    r4:Identifier valueIdentifier;
    "http://hl7.org/fhir/StructureDefinition/auditevent-Accession" url = "http://hl7.org/fhir/StructureDefinition/auditevent-Accession";
|};

@r4:DataTypeDefinition {
    name: "AuditeventAlternativeUserID",
    baseType: (),
    elements: {
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuditeventAlternativeUserID record {|
    *r4:IdentifierExtension;

    r4:Identifier valueIdentifier;
    "http://hl7.org/fhir/StructureDefinition/auditevent-AlternativeUserID" url = "http://hl7.org/fhir/StructureDefinition/auditevent-AlternativeUserID";
|};

@r4:DataTypeDefinition {
    name: "AuditeventAnonymized",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuditeventAnonymized record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/auditevent-Anonymized" url = "http://hl7.org/fhir/StructureDefinition/auditevent-Anonymized";
|};

@r4:DataTypeDefinition {
    name: "AuditeventEncrypted",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuditeventEncrypted record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/auditevent-Encrypted" url = "http://hl7.org/fhir/StructureDefinition/auditevent-Encrypted";
|};

@r4:DataTypeDefinition {
    name: "AuditeventInstance",
    baseType: (),
    elements: {
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuditeventInstance record {|
    *r4:IdentifierExtension;

    r4:Identifier valueIdentifier;
    "http://hl7.org/fhir/StructureDefinition/auditevent-Instance" url = "http://hl7.org/fhir/StructureDefinition/auditevent-Instance";
|};

@r4:DataTypeDefinition {
    name: "AuditeventLifecycle",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuditeventLifecycle record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/auditevent-Lifecycle" url = "http://hl7.org/fhir/StructureDefinition/auditevent-Lifecycle";
|};

@r4:DataTypeDefinition {
    name: "AuditeventMPPS",
    baseType: (),
    elements: {
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuditeventMPPS record {|
    *r4:IdentifierExtension;

    r4:Identifier valueIdentifier;
    "http://hl7.org/fhir/StructureDefinition/auditevent-MPPS" url = "http://hl7.org/fhir/StructureDefinition/auditevent-MPPS";
|};

@r4:DataTypeDefinition {
    name: "AuditeventNumberOfInstances",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuditeventNumberOfInstances record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org/fhir/StructureDefinition/auditevent-NumberOfInstances" url = "http://hl7.org/fhir/StructureDefinition/auditevent-NumberOfInstances";
|};

@r4:DataTypeDefinition {
    name: "AuditeventOnBehalfOf",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuditeventOnBehalfOf record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/auditevent-OnBehalfOf" url = "http://hl7.org/fhir/StructureDefinition/auditevent-OnBehalfOf";
|};

@r4:DataTypeDefinition {
    name: "AuditeventParticipantObjectContainsStudy",
    baseType: (),
    elements: {
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuditeventParticipantObjectContainsStudy record {|
    *r4:IdentifierExtension;

    r4:Identifier valueIdentifier;
    "http://hl7.org/fhir/StructureDefinition/auditevent-ParticipantObjectContainsStudy" url = "http://hl7.org/fhir/StructureDefinition/auditevent-ParticipantObjectContainsStudy";
|};

@r4:DataTypeDefinition {
    name: "AuditeventSOPClass",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type AuditeventSOPClass record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/auditevent-SOPClass" url = "http://hl7.org/fhir/StructureDefinition/auditevent-SOPClass";
|};

@r4:DataTypeDefinition {
    name: "BiologicallyderivedproductCollectionProcedure",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BiologicallyderivedproductCollectionProcedure record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/biologicallyderivedproduct-collection-procedure" url = "http://hl7.org/fhir/StructureDefinition/biologicallyderivedproduct-collection-procedure";
|};

@r4:DataTypeDefinition {
    name: "BiologicallyderivedproductManipulation",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BiologicallyderivedproductManipulation record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/biologicallyderivedproduct-manipulation" url = "http://hl7.org/fhir/StructureDefinition/biologicallyderivedproduct-manipulation";
|};

@r4:DataTypeDefinition {
    name: "BiologicallyderivedproductProcessing",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BiologicallyderivedproductProcessing record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/biologicallyderivedproduct-processing" url = "http://hl7.org/fhir/StructureDefinition/biologicallyderivedproduct-processing";
|};

@r4:DataTypeDefinition {
    name: "BodySite",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BodySite record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/bodySite" url = "http://hl7.org/fhir/StructureDefinition/bodySite";
|};

@r4:DataTypeDefinition {
    name: "BusinessEvent",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type BusinessEvent record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/businessEvent" url = "http://hl7.org/fhir/StructureDefinition/businessEvent";
|};

@r4:DataTypeDefinition {
    name: "CanonicalresourceShortDescription",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CanonicalresourceShortDescription record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/canonicalresource-short-description" url = "http://hl7.org/fhir/StructureDefinition/canonicalresource-short-description";
|};

@r4:DataTypeDefinition {
    name: "CapabilitystatementDeclaredProfile",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CapabilitystatementDeclaredProfile record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/capabilitystatement-declared-profile" url = "http://hl7.org/fhir/StructureDefinition/capabilitystatement-declared-profile";
|};

@r4:DataTypeDefinition {
    name: "CapabilitystatementExpectation",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CapabilitystatementExpectation record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/capabilitystatement-expectation" url = "http://hl7.org/fhir/StructureDefinition/capabilitystatement-expectation";
|};

@r4:DataTypeDefinition {
    name: "CapabilitystatementProhibited",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CapabilitystatementProhibited record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/capabilitystatement-prohibited" url = "http://hl7.org/fhir/StructureDefinition/capabilitystatement-prohibited";
|};

@r4:DataTypeDefinition {
    name: "CapabilitystatementSearchMode",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CapabilitystatementSearchMode record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/capabilitystatement-search-mode" url = "http://hl7.org/fhir/StructureDefinition/capabilitystatement-search-mode";
|};

@r4:DataTypeDefinition {
    name: "CapabilitystatementSearchParameterCombination",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CapabilitystatementSearchParameterCombination record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/capabilitystatement-search-parameter-combination" url = "http://hl7.org/fhir/StructureDefinition/capabilitystatement-search-parameter-combination";
|};

@r4:DataTypeDefinition {
    name: "CapabilitystatementSearchParameterUse",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 3,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CapabilitystatementSearchParameterUse record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/capabilitystatement-search-parameter-use" url = "http://hl7.org/fhir/StructureDefinition/capabilitystatement-search-parameter-use";
|};

@r4:DataTypeDefinition {
    name: "CapabilitystatementSupportedSystem",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CapabilitystatementSupportedSystem record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/capabilitystatement-supported-system" url = "http://hl7.org/fhir/StructureDefinition/capabilitystatement-supported-system";
|};

@r4:DataTypeDefinition {
    name: "CapabilitystatementWebsocket",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CapabilitystatementWebsocket record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/capabilitystatement-websocket" url = "http://hl7.org/fhir/StructureDefinition/capabilitystatement-websocket";
|};

@r4:DataTypeDefinition {
    name: "CareplanActivityTitle",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CareplanActivityTitle record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/careplan-activity-title" url = "http://hl7.org/fhir/StructureDefinition/careplan-activity-title";
|};

@r4:DataTypeDefinition {
    name: "CareteamAlias",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CareteamAlias record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/careteam-alias" url = "http://hl7.org/fhir/StructureDefinition/careteam-alias";
|};

@r4:DataTypeDefinition {
    name: "CharacteristicExpression",
    baseType: (),
    elements: {
        "valueExpression": {
            name: "valueExpression",
            dataType: r4:Expression,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CharacteristicExpression record {|
    *r4:ExpressionExtension;

    r4:Expression valueExpression;
    "http://hl7.org/fhir/StructureDefinition/characteristicExpression" url = "http://hl7.org/fhir/StructureDefinition/characteristicExpression";
|};

@r4:DataTypeDefinition {
    name: "CitationSocietyAffiliation",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CitationSocietyAffiliation record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/citation-societyAffiliation" url = "http://hl7.org/fhir/StructureDefinition/citation-societyAffiliation";
|};

@r4:DataTypeDefinition {
    name: "CodeOptions",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodeOptions record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/codeOptions" url = "http://hl7.org/fhir/StructureDefinition/codeOptions";
|};

@r4:DataTypeDefinition {
    name: "CodesystemAlternate",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemAlternate record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/codesystem-alternate" url = "http://hl7.org/fhir/StructureDefinition/codesystem-alternate";
|};

@r4:DataTypeDefinition {
    name: "CodesystemAuthor",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemAuthor record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/codesystem-author" url = "http://hl7.org/fhir/StructureDefinition/codesystem-author";
|};

@r4:DataTypeDefinition {
    name: "CodesystemAuthoritativeSource",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemAuthoritativeSource record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/codesystem-authoritativeSource" url = "http://hl7.org/fhir/StructureDefinition/codesystem-authoritativeSource";
|};

@r4:DataTypeDefinition {
    name: "CodesystemConceptComments",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemConceptComments record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/codesystem-concept-comments" url = "http://hl7.org/fhir/StructureDefinition/codesystem-concept-comments";
|};

@r4:DataTypeDefinition {
    name: "CodesystemConceptOrder",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemConceptOrder record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org/fhir/StructureDefinition/codesystem-conceptOrder" url = "http://hl7.org/fhir/StructureDefinition/codesystem-conceptOrder";
|};

@r4:DataTypeDefinition {
    name: "CodesystemEffectiveDate",
    baseType: (),
    elements: {
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemEffectiveDate record {|
    *r4:DateExtension;

    r4:date valueDate;
    "http://hl7.org/fhir/StructureDefinition/codesystem-effectiveDate" url = "http://hl7.org/fhir/StructureDefinition/codesystem-effectiveDate";
|};

@r4:DataTypeDefinition {
    name: "CodesystemExpirationDate",
    baseType: (),
    elements: {
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemExpirationDate record {|
    *r4:DateExtension;

    r4:date valueDate;
    "http://hl7.org/fhir/StructureDefinition/codesystem-expirationDate" url = "http://hl7.org/fhir/StructureDefinition/codesystem-expirationDate";
|};

@r4:DataTypeDefinition {
    name: "CodesystemHistory",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemHistory record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/codesystem-history" url = "http://hl7.org/fhir/StructureDefinition/codesystem-history";
|};

@r4:DataTypeDefinition {
    name: "CodesystemKeyWord",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemKeyWord record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/codesystem-keyWord" url = "http://hl7.org/fhir/StructureDefinition/codesystem-keyWord";
|};

@r4:DataTypeDefinition {
    name: "CodesystemLabel",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemLabel record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/codesystem-label" url = "http://hl7.org/fhir/StructureDefinition/codesystem-label";
|};

@r4:DataTypeDefinition {
    name: "CodesystemMap",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemMap record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/codesystem-map" url = "http://hl7.org/fhir/StructureDefinition/codesystem-map";
|};

@r4:DataTypeDefinition {
    name: "CodesystemOtherName",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemOtherName record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/codesystem-otherName" url = "http://hl7.org/fhir/StructureDefinition/codesystem-otherName";
|};

@r4:DataTypeDefinition {
    name: "CodesystemPropertiesMode",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemPropertiesMode record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/codesystem-properties-mode" url = "http://hl7.org/fhir/StructureDefinition/codesystem-properties-mode";
|};

@r4:DataTypeDefinition {
    name: "CodesystemPropertyValueset",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemPropertyValueset record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/codesystem-property-valueset" url = "http://hl7.org/fhir/StructureDefinition/codesystem-property-valueset";
|};

@r4:DataTypeDefinition {
    name: "CodesystemReplacedby",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemReplacedby record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org/fhir/StructureDefinition/codesystem-replacedby" url = "http://hl7.org/fhir/StructureDefinition/codesystem-replacedby";
|};

@r4:DataTypeDefinition {
    name: "CodesystemSourceReference",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemSourceReference record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/codesystem-sourceReference" url = "http://hl7.org/fhir/StructureDefinition/codesystem-sourceReference";
|};

@r4:DataTypeDefinition {
    name: "CodesystemTrustedExpansion",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemTrustedExpansion record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/codesystem-trusted-expansion" url = "http://hl7.org/fhir/StructureDefinition/codesystem-trusted-expansion";
|};

@r4:DataTypeDefinition {
    name: "CodesystemUsage",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemUsage record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/codesystem-usage" url = "http://hl7.org/fhir/StructureDefinition/codesystem-usage";
|};

@r4:DataTypeDefinition {
    name: "CodesystemUseMarkdown",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemUseMarkdown record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/codesystem-use-markdown" url = "http://hl7.org/fhir/StructureDefinition/codesystem-use-markdown";
|};

@r4:DataTypeDefinition {
    name: "CodesystemWarning",
    baseType: (),
    elements: {
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemWarning record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    "http://hl7.org/fhir/StructureDefinition/codesystem-warning" url = "http://hl7.org/fhir/StructureDefinition/codesystem-warning";
|};

@r4:DataTypeDefinition {
    name: "CodesystemWorkflowStatus",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodesystemWorkflowStatus record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/codesystem-workflowStatus" url = "http://hl7.org/fhir/StructureDefinition/codesystem-workflowStatus";
|};

@r4:DataTypeDefinition {
    name: "CodingConformance",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodingConformance record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/coding-conformance" url = "http://hl7.org/fhir/StructureDefinition/coding-conformance";
|};

@r4:DataTypeDefinition {
    name: "CodingPurpose",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodingPurpose record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org/fhir/StructureDefinition/coding-purpose" url = "http://hl7.org/fhir/StructureDefinition/coding-purpose";
|};

@r4:DataTypeDefinition {
    name: "CodingSctdescid",
    baseType: (),
    elements: {
        "valueId": {
            name: "valueId",
            dataType: r4:id,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CodingSctdescid record {|
    *r4:IdExtension;

    r4:id valueId;
    "http://hl7.org/fhir/StructureDefinition/coding-sctdescid" url = "http://hl7.org/fhir/StructureDefinition/coding-sctdescid";
|};

@r4:DataTypeDefinition {
    name: "CommunicationMedia",
    baseType: (),
    elements: {
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CommunicationMedia record {|
    *r4:AttachmentExtension;

    r4:Attachment valueAttachment;
    "http://hl7.org/fhir/StructureDefinition/communication-media" url = "http://hl7.org/fhir/StructureDefinition/communication-media";
|};

@r4:DataTypeDefinition {
    name: "CommunicationrequestInitiatingLocation",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CommunicationrequestInitiatingLocation record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/communicationrequest-initiatingLocation" url = "http://hl7.org/fhir/StructureDefinition/communicationrequest-initiatingLocation";
|};

@r4:DataTypeDefinition {
    name: "CompositionClinicaldocumentOtherConfidentiality",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CompositionClinicaldocumentOtherConfidentiality record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org/fhir/StructureDefinition/composition-clinicaldocument-otherConfidentiality" url = "http://hl7.org/fhir/StructureDefinition/composition-clinicaldocument-otherConfidentiality";
|};

@r4:DataTypeDefinition {
    name: "CompositionClinicaldocumentVersionNumber",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CompositionClinicaldocumentVersionNumber record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/composition-clinicaldocument-versionNumber" url = "http://hl7.org/fhir/StructureDefinition/composition-clinicaldocument-versionNumber";
|};

@r4:DataTypeDefinition {
    name: "CompositionSectionSubject",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CompositionSectionSubject record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/composition-section-subject" url = "http://hl7.org/fhir/StructureDefinition/composition-section-subject";
|};

@r4:DataTypeDefinition {
    name: "ConceptBidirectional",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ConceptBidirectional record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/concept-bidirectional" url = "http://hl7.org/fhir/StructureDefinition/concept-bidirectional";
|};

@r4:DataTypeDefinition {
    name: "ConditionAssertedDate",
    baseType: (),
    elements: {
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ConditionAssertedDate record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    "http://hl7.org/fhir/StructureDefinition/condition-assertedDate" url = "http://hl7.org/fhir/StructureDefinition/condition-assertedDate";
|};

@r4:DataTypeDefinition {
    name: "ConditionDiseaseCourse",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ConditionDiseaseCourse record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/condition-diseaseCourse" url = "http://hl7.org/fhir/StructureDefinition/condition-diseaseCourse";
|};

@r4:DataTypeDefinition {
    name: "ConditionDueTo",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ConditionDueTo record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/condition-dueTo" url = "http://hl7.org/fhir/StructureDefinition/condition-dueTo";
|};

@r4:DataTypeDefinition {
    name: "ConditionOccurredFollowing",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ConditionOccurredFollowing record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/condition-occurredFollowing" url = "http://hl7.org/fhir/StructureDefinition/condition-occurredFollowing";
|};

@r4:DataTypeDefinition {
    name: "ConditionOutcome",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ConditionOutcome record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/condition-outcome" url = "http://hl7.org/fhir/StructureDefinition/condition-outcome";
|};

@r4:DataTypeDefinition {
    name: "ConditionRelated",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ConditionRelated record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/condition-related" url = "http://hl7.org/fhir/StructureDefinition/condition-related";
|};

@r4:DataTypeDefinition {
    name: "ConditionReviewed",
    baseType: (),
    elements: {
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ConditionReviewed record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    "http://hl7.org/fhir/StructureDefinition/condition-reviewed" url = "http://hl7.org/fhir/StructureDefinition/condition-reviewed";
|};

@r4:DataTypeDefinition {
    name: "ConditionRuledOut",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ConditionRuledOut record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/condition-ruledOut" url = "http://hl7.org/fhir/StructureDefinition/condition-ruledOut";
|};

@r4:DataTypeDefinition {
    name: "Confidential",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type Confidential record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/confidential" url = "http://hl7.org/fhir/StructureDefinition/confidential";
|};

@r4:DataTypeDefinition {
    name: "ConsentNotificationEndpoint",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ConsentNotificationEndpoint record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/consent-NotificationEndpoint" url = "http://hl7.org/fhir/StructureDefinition/consent-NotificationEndpoint";
|};

@r4:DataTypeDefinition {
    name: "ConsentResearchStudyContext",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ConsentResearchStudyContext record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/consent-ResearchStudyContext" url = "http://hl7.org/fhir/StructureDefinition/consent-ResearchStudyContext";
|};

@r4:DataTypeDefinition {
    name: "ConsentTranscriber",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ConsentTranscriber record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/consent-Transcriber" url = "http://hl7.org/fhir/StructureDefinition/consent-Transcriber";
|};

@r4:DataTypeDefinition {
    name: "ConsentWitness",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ConsentWitness record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/consent-Witness" url = "http://hl7.org/fhir/StructureDefinition/consent-Witness";
|};

@r4:DataTypeDefinition {
    name: "ConsentLocation",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ConsentLocation record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/consent-location" url = "http://hl7.org/fhir/StructureDefinition/consent-location";
|};

@r4:DataTypeDefinition {
    name: "ContactpointArea",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ContactpointArea record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/contactpoint-area" url = "http://hl7.org/fhir/StructureDefinition/contactpoint-area";
|};

@r4:DataTypeDefinition {
    name: "ContactpointComment",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ContactpointComment record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/contactpoint-comment" url = "http://hl7.org/fhir/StructureDefinition/contactpoint-comment";
|};

@r4:DataTypeDefinition {
    name: "ContactpointCountry",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ContactpointCountry record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/contactpoint-country" url = "http://hl7.org/fhir/StructureDefinition/contactpoint-country";
|};

@r4:DataTypeDefinition {
    name: "ContactpointExtension",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ContactpointExtension record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/contactpoint-extension" url = "http://hl7.org/fhir/StructureDefinition/contactpoint-extension";
|};

@r4:DataTypeDefinition {
    name: "ContactpointLocal",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ContactpointLocal record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/contactpoint-local" url = "http://hl7.org/fhir/StructureDefinition/contactpoint-local";
|};

@r4:DataTypeDefinition {
    name: "ContactpointPurpose",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ContactpointPurpose record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/contactpoint-purpose" url = "http://hl7.org/fhir/StructureDefinition/contactpoint-purpose";
|};

@r4:DataTypeDefinition {
    name: "CqfAlternativeExpression",
    baseType: (),
    elements: {
        "valueExpression": {
            name: "valueExpression",
            dataType: r4:Expression,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfAlternativeExpression record {|
    *r4:ExpressionExtension;

    r4:Expression valueExpression;
    "http://hl7.org/fhir/StructureDefinition/cqf-alternativeExpression" url = "http://hl7.org/fhir/StructureDefinition/cqf-alternativeExpression";
|};

@r4:DataTypeDefinition {
    name: "CqfArtifactComment",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfArtifactComment record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/cqf-artifactComment" url = "http://hl7.org/fhir/StructureDefinition/cqf-artifactComment";
|};

@r4:DataTypeDefinition {
    name: "CqfCalculatedValue",
    baseType: (),
    elements: {
        "valueExpression": {
            name: "valueExpression",
            dataType: r4:Expression,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfCalculatedValue record {|
    *r4:ExpressionExtension;

    r4:Expression valueExpression;
    "http://hl7.org/fhir/StructureDefinition/cqf-calculatedValue" url = "http://hl7.org/fhir/StructureDefinition/cqf-calculatedValue";
|};

@r4:DataTypeDefinition {
    name: "CqfCdsHooksEndpoint",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfCdsHooksEndpoint record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/cqf-cdsHooksEndpoint" url = "http://hl7.org/fhir/StructureDefinition/cqf-cdsHooksEndpoint";
|};

@r4:DataTypeDefinition {
    name: "CqfCertainty",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfCertainty record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/cqf-certainty" url = "http://hl7.org/fhir/StructureDefinition/cqf-certainty";
|};

@r4:DataTypeDefinition {
    name: "CqfCitation",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfCitation record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/cqf-citation" url = "http://hl7.org/fhir/StructureDefinition/cqf-citation";
|};

@r4:DataTypeDefinition {
    name: "CqfContactAddress",
    baseType: (),
    elements: {
        "valueAddress": {
            name: "valueAddress",
            dataType: r4:Address,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfContactAddress record {|
    *r4:AddressExtension;

    r4:Address valueAddress;
    "http://hl7.org/fhir/StructureDefinition/cqf-contactAddress" url = "http://hl7.org/fhir/StructureDefinition/cqf-contactAddress";
|};

@r4:DataTypeDefinition {
    name: "CqfContactReference",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfContactReference record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/cqf-contactReference" url = "http://hl7.org/fhir/StructureDefinition/cqf-contactReference";
|};

@r4:DataTypeDefinition {
    name: "CqfContributionTime",
    baseType: (),
    elements: {
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfContributionTime record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    "http://hl7.org/fhir/StructureDefinition/cqf-contributionTime" url = "http://hl7.org/fhir/StructureDefinition/cqf-contributionTime";
|};

@r4:DataTypeDefinition {
    name: "CqfCqlAccessModifier",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfCqlAccessModifier record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/cqf-cqlAccessModifier" url = "http://hl7.org/fhir/StructureDefinition/cqf-cqlAccessModifier";
|};

@r4:DataTypeDefinition {
    name: "CqfCqlOptions",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfCqlOptions record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/cqf-cqlOptions" url = "http://hl7.org/fhir/StructureDefinition/cqf-cqlOptions";
|};

@r4:DataTypeDefinition {
    name: "CqfCqlType",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfCqlType record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/cqf-cqlType" url = "http://hl7.org/fhir/StructureDefinition/cqf-cqlType";
|};

@r4:DataTypeDefinition {
    name: "CqfCriteriaReference",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfCriteriaReference record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/cqf-criteriaReference" url = "http://hl7.org/fhir/StructureDefinition/cqf-criteriaReference";
|};

@r4:DataTypeDefinition {
    name: "CqfDefaultValue",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfDefaultValue record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/cqf-defaultValue" url = "http://hl7.org/fhir/StructureDefinition/cqf-defaultValue";
|};

@r4:DataTypeDefinition {
    name: "CqfDefinitionTerm",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfDefinitionTerm record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/cqf-definitionTerm" url = "http://hl7.org/fhir/StructureDefinition/cqf-definitionTerm";
|};

@r4:DataTypeDefinition {
    name: "CqfDirectReferenceCode",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfDirectReferenceCode record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org/fhir/StructureDefinition/cqf-directReferenceCode" url = "http://hl7.org/fhir/StructureDefinition/cqf-directReferenceCode";
|};

@r4:DataTypeDefinition {
    name: "CqfEncounterClass",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfEncounterClass record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/cqf-encounterClass" url = "http://hl7.org/fhir/StructureDefinition/cqf-encounterClass";
|};

@r4:DataTypeDefinition {
    name: "CqfEncounterType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfEncounterType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/cqf-encounterType" url = "http://hl7.org/fhir/StructureDefinition/cqf-encounterType";
|};

@r4:DataTypeDefinition {
    name: "CqfExpansionParameters",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfExpansionParameters record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/cqf-expansionParameters" url = "http://hl7.org/fhir/StructureDefinition/cqf-expansionParameters";
|};

@r4:DataTypeDefinition {
    name: "CqfExpression",
    baseType: (),
    elements: {
        "valueExpression": {
            name: "valueExpression",
            dataType: r4:Expression,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfExpression record {|
    *r4:ExpressionExtension;

    r4:Expression valueExpression;
    "http://hl7.org/fhir/StructureDefinition/cqf-expression" url = "http://hl7.org/fhir/StructureDefinition/cqf-expression";
|};

@r4:DataTypeDefinition {
    name: "CqfFhirQueryPattern",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfFhirQueryPattern record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/cqf-fhirQueryPattern" url = "http://hl7.org/fhir/StructureDefinition/cqf-fhirQueryPattern";
|};

@r4:DataTypeDefinition {
    name: "CqfImprovementNotationGuidance",
    baseType: (),
    elements: {
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfImprovementNotationGuidance record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    "http://hl7.org/fhir/StructureDefinition/cqf-improvementNotationGuidance" url = "http://hl7.org/fhir/StructureDefinition/cqf-improvementNotationGuidance";
|};

@r4:DataTypeDefinition {
    name: "CqfInitialValue",
    baseType: (),
    elements: {
        "valueExpression": {
            name: "valueExpression",
            dataType: r4:Expression,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfInitialValue record {|
    *r4:ExpressionExtension;

    r4:Expression valueExpression;
    "http://hl7.org/fhir/StructureDefinition/cqf-initialValue" url = "http://hl7.org/fhir/StructureDefinition/cqf-initialValue";
|};

@r4:DataTypeDefinition {
    name: "CqfInitiatingOrganization",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfInitiatingOrganization record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/cqf-initiatingOrganization" url = "http://hl7.org/fhir/StructureDefinition/cqf-initiatingOrganization";
|};

@r4:DataTypeDefinition {
    name: "CqfInitiatingPerson",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfInitiatingPerson record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/cqf-initiatingPerson" url = "http://hl7.org/fhir/StructureDefinition/cqf-initiatingPerson";
|};

@r4:DataTypeDefinition {
    name: "CqfInputParameters",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfInputParameters record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/cqf-inputParameters" url = "http://hl7.org/fhir/StructureDefinition/cqf-inputParameters";
|};

@r4:DataTypeDefinition {
    name: "CqfIsEmptyList",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfIsEmptyList record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/cqf-isEmptyList" url = "http://hl7.org/fhir/StructureDefinition/cqf-isEmptyList";
|};

@r4:DataTypeDefinition {
    name: "CqfIsEmptyTuple",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfIsEmptyTuple record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/cqf-isEmptyTuple" url = "http://hl7.org/fhir/StructureDefinition/cqf-isEmptyTuple";
|};

@r4:DataTypeDefinition {
    name: "CqfIsPrefetchToken",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfIsPrefetchToken record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/cqf-isPrefetchToken" url = "http://hl7.org/fhir/StructureDefinition/cqf-isPrefetchToken";
|};

@r4:DataTypeDefinition {
    name: "CqfIsPrimaryCitation",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfIsPrimaryCitation record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/cqf-isPrimaryCitation" url = "http://hl7.org/fhir/StructureDefinition/cqf-isPrimaryCitation";
|};

@r4:DataTypeDefinition {
    name: "CqfIsSelective",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfIsSelective record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/cqf-isSelective" url = "http://hl7.org/fhir/StructureDefinition/cqf-isSelective";
|};

@r4:DataTypeDefinition {
    name: "CqfKnowledgeCapability",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfKnowledgeCapability record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability" url = "http://hl7.org/fhir/StructureDefinition/cqf-knowledgeCapability";
|};

@r4:DataTypeDefinition {
    name: "CqfKnowledgeRepresentationLevel",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfKnowledgeRepresentationLevel record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/cqf-knowledgeRepresentationLevel" url = "http://hl7.org/fhir/StructureDefinition/cqf-knowledgeRepresentationLevel";
|};

@r4:DataTypeDefinition {
    name: "CqfLibrary",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfLibrary record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/cqf-library" url = "http://hl7.org/fhir/StructureDefinition/cqf-library";
|};

@r4:DataTypeDefinition {
    name: "CqfLogicDefinition",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 3,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfLogicDefinition record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/cqf-logicDefinition" url = "http://hl7.org/fhir/StructureDefinition/cqf-logicDefinition";
|};

@r4:DataTypeDefinition {
    name: "CqfMeasureInfo",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfMeasureInfo record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/cqf-measureInfo" url = "http://hl7.org/fhir/StructureDefinition/cqf-measureInfo";
|};

@r4:DataTypeDefinition {
    name: "CqfMessages",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfMessages record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/cqf-messages" url = "http://hl7.org/fhir/StructureDefinition/cqf-messages";
|};

@r4:DataTypeDefinition {
    name: "CqfModelInfoIsIncluded",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfModelInfoIsIncluded record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/cqf-modelInfo-isIncluded" url = "http://hl7.org/fhir/StructureDefinition/cqf-modelInfo-isIncluded";
|};

@r4:DataTypeDefinition {
    name: "CqfModelInfoIsRetrievable",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfModelInfoIsRetrievable record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/cqf-modelInfo-isRetrievable" url = "http://hl7.org/fhir/StructureDefinition/cqf-modelInfo-isRetrievable";
|};

@r4:DataTypeDefinition {
    name: "CqfModelInfoLabel",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfModelInfoLabel record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/cqf-modelInfo-label" url = "http://hl7.org/fhir/StructureDefinition/cqf-modelInfo-label";
|};

@r4:DataTypeDefinition {
    name: "CqfModelInfoPrimaryCodePath",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfModelInfoPrimaryCodePath record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/cqf-modelInfo-primaryCodePath" url = "http://hl7.org/fhir/StructureDefinition/cqf-modelInfo-primaryCodePath";
|};

@r4:DataTypeDefinition {
    name: "CqfModelInfoSettings",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfModelInfoSettings record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/cqf-modelInfoSettings" url = "http://hl7.org/fhir/StructureDefinition/cqf-modelInfoSettings";
|};

@r4:DataTypeDefinition {
    name: "CqfNotDoneValueSet",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfNotDoneValueSet record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/cqf-notDoneValueSet" url = "http://hl7.org/fhir/StructureDefinition/cqf-notDoneValueSet";
|};

@r4:DataTypeDefinition {
    name: "CqfParameterDefinition",
    baseType: (),
    elements: {
        "valueParameterDefinition": {
            name: "valueParameterDefinition",
            dataType: r4:ParameterDefinition,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfParameterDefinition record {|
    *r4:ParameterDefinitionExtension;

    r4:ParameterDefinition valueParameterDefinition;
    "http://hl7.org/fhir/StructureDefinition/cqf-parameterDefinition" url = "http://hl7.org/fhir/StructureDefinition/cqf-parameterDefinition";
|};

@r4:DataTypeDefinition {
    name: "CqfPartOf",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfPartOf record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/cqf-partOf" url = "http://hl7.org/fhir/StructureDefinition/cqf-partOf";
|};

@r4:DataTypeDefinition {
    name: "CqfPublicationDate",
    baseType: (),
    elements: {
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfPublicationDate record {|
    *r4:DateExtension;

    r4:date valueDate;
    "http://hl7.org/fhir/StructureDefinition/cqf-publicationDate" url = "http://hl7.org/fhir/StructureDefinition/cqf-publicationDate";
|};

@r4:DataTypeDefinition {
    name: "CqfPublicationStatus",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfPublicationStatus record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/cqf-publicationStatus" url = "http://hl7.org/fhir/StructureDefinition/cqf-publicationStatus";
|};

@r4:DataTypeDefinition {
    name: "CqfQualityOfEvidence",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfQualityOfEvidence record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/cqf-qualityOfEvidence" url = "http://hl7.org/fhir/StructureDefinition/cqf-qualityOfEvidence";
|};

@r4:DataTypeDefinition {
    name: "CqfReceivingOrganization",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfReceivingOrganization record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/cqf-receivingOrganization" url = "http://hl7.org/fhir/StructureDefinition/cqf-receivingOrganization";
|};

@r4:DataTypeDefinition {
    name: "CqfReceivingPerson",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfReceivingPerson record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/cqf-receivingPerson" url = "http://hl7.org/fhir/StructureDefinition/cqf-receivingPerson";
|};

@r4:DataTypeDefinition {
    name: "CqfRecipientLanguage",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfRecipientLanguage record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/cqf-recipientLanguage" url = "http://hl7.org/fhir/StructureDefinition/cqf-recipientLanguage";
|};

@r4:DataTypeDefinition {
    name: "CqfRecipientType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfRecipientType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/cqf-recipientType" url = "http://hl7.org/fhir/StructureDefinition/cqf-recipientType";
|};

@r4:DataTypeDefinition {
    name: "CqfRelativeDateTime",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 4,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfRelativeDateTime record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/cqf-relativeDateTime" url = "http://hl7.org/fhir/StructureDefinition/cqf-relativeDateTime";
|};

@r4:DataTypeDefinition {
    name: "CqfResourceType",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfResourceType record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/cqf-resourceType" url = "http://hl7.org/fhir/StructureDefinition/cqf-resourceType";
|};

@r4:DataTypeDefinition {
    name: "CqfScope",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfScope record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/cqf-scope" url = "http://hl7.org/fhir/StructureDefinition/cqf-scope";
|};

@r4:DataTypeDefinition {
    name: "CqfShouldTraceDependency",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfShouldTraceDependency record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/cqf-shouldTraceDependency" url = "http://hl7.org/fhir/StructureDefinition/cqf-shouldTraceDependency";
|};

@r4:DataTypeDefinition {
    name: "CqfStrengthOfRecommendation",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfStrengthOfRecommendation record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/cqf-strengthOfRecommendation" url = "http://hl7.org/fhir/StructureDefinition/cqf-strengthOfRecommendation";
|};

@r4:DataTypeDefinition {
    name: "CqfSupportedCqlVersion",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfSupportedCqlVersion record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/cqf-supportedCqlVersion" url = "http://hl7.org/fhir/StructureDefinition/cqf-supportedCqlVersion";
|};

@r4:DataTypeDefinition {
    name: "CqfSystemUserLanguage",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfSystemUserLanguage record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/cqf-systemUserLanguage" url = "http://hl7.org/fhir/StructureDefinition/cqf-systemUserLanguage";
|};

@r4:DataTypeDefinition {
    name: "CqfSystemUserTaskContext",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfSystemUserTaskContext record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/cqf-systemUserTaskContext" url = "http://hl7.org/fhir/StructureDefinition/cqf-systemUserTaskContext";
|};

@r4:DataTypeDefinition {
    name: "CqfSystemUserType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfSystemUserType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/cqf-systemUserType" url = "http://hl7.org/fhir/StructureDefinition/cqf-systemUserType";
|};

@r4:DataTypeDefinition {
    name: "CqfTargetInvariant",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 3,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfTargetInvariant record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/cqf-targetInvariant" url = "http://hl7.org/fhir/StructureDefinition/cqf-targetInvariant";
|};

@r4:DataTypeDefinition {
    name: "CqfTestArtifact",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfTestArtifact record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/cqf-testArtifact" url = "http://hl7.org/fhir/StructureDefinition/cqf-testArtifact";
|};

@r4:DataTypeDefinition {
    name: "CqfValueFilter",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqfValueFilter record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/cqf-valueFilter" url = "http://hl7.org/fhir/StructureDefinition/cqf-valueFilter";
|};

@r4:DataTypeDefinition {
    name: "CqmValidityPeriod",
    baseType: (),
    elements: {
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type CqmValidityPeriod record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    "http://hl7.org/fhir/StructureDefinition/cqm-ValidityPeriod" url = "http://hl7.org/fhir/StructureDefinition/cqm-ValidityPeriod";
|};

@r4:DataTypeDefinition {
    name: "DataAbsentReason",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DataAbsentReason record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/data-absent-reason" url = "http://hl7.org/fhir/StructureDefinition/data-absent-reason";
|};

@r4:DataTypeDefinition {
    name: "DerivationReference",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DerivationReference record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/derivation-reference" url = "http://hl7.org/fhir/StructureDefinition/derivation-reference";
|};

@r4:DataTypeDefinition {
    name: "DesignNote",
    baseType: (),
    elements: {
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DesignNote record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    "http://hl7.org/fhir/StructureDefinition/designNote" url = "http://hl7.org/fhir/StructureDefinition/designNote";
|};

@r4:DataTypeDefinition {
    name: "DeviceCommercialBrand",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DeviceCommercialBrand record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/device-commercialBrand" url = "http://hl7.org/fhir/StructureDefinition/device-commercialBrand";
|};

@r4:DataTypeDefinition {
    name: "DeviceImplantStatus",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DeviceImplantStatus record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/device-implantStatus" url = "http://hl7.org/fhir/StructureDefinition/device-implantStatus";
|};

@r4:DataTypeDefinition {
    name: "DeviceLastmaintenancetime",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DeviceLastmaintenancetime record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/device-lastmaintenancetime" url = "http://hl7.org/fhir/StructureDefinition/device-lastmaintenancetime";
|};

@r4:DataTypeDefinition {
    name: "DeviceMaintenanceresponsibility",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DeviceMaintenanceresponsibility record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/device-maintenanceresponsibility" url = "http://hl7.org/fhir/StructureDefinition/device-maintenanceresponsibility";
|};

@r4:DataTypeDefinition {
    name: "DevicerequestPatientInstruction",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DevicerequestPatientInstruction record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/devicerequest-patientInstruction" url = "http://hl7.org/fhir/StructureDefinition/devicerequest-patientInstruction";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportAddendumOf",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportAddendumOf record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/diagnosticReport-addendumOf" url = "http://hl7.org/fhir/StructureDefinition/diagnosticReport-addendumOf";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportExtends",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportExtends record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/diagnosticReport-extends" url = "http://hl7.org/fhir/StructureDefinition/diagnosticReport-extends";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportFocus",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportFocus record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/diagnosticReport-focus" url = "http://hl7.org/fhir/StructureDefinition/diagnosticReport-focus";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportLocationPerformed",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportLocationPerformed record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/diagnosticReport-locationPerformed" url = "http://hl7.org/fhir/StructureDefinition/diagnosticReport-locationPerformed";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportReplaces",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportReplaces record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/diagnosticReport-replaces" url = "http://hl7.org/fhir/StructureDefinition/diagnosticReport-replaces";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportRisk",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportRisk record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/diagnosticReport-risk" url = "http://hl7.org/fhir/StructureDefinition/diagnosticReport-risk";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportSummaryOf",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportSummaryOf record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/diagnosticReport-summaryOf" url = "http://hl7.org/fhir/StructureDefinition/diagnosticReport-summaryOf";
|};

@r4:DataTypeDefinition {
    name: "DiagnosticReportWorkflowStatus",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DiagnosticReportWorkflowStatus record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/diagnosticReport-workflowStatus" url = "http://hl7.org/fhir/StructureDefinition/diagnosticReport-workflowStatus";
|};

@r4:DataTypeDefinition {
    name: "Display",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type Display record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/display" url = "http://hl7.org/fhir/StructureDefinition/display";
|};

@r4:DataTypeDefinition {
    name: "DocumentreferenceSourcepatient",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DocumentreferenceSourcepatient record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/documentreference-sourcepatient" url = "http://hl7.org/fhir/StructureDefinition/documentreference-sourcepatient";
|};

@r4:DataTypeDefinition {
    name: "DocumentreferenceThumbnail",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DocumentreferenceThumbnail record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/documentreference-thumbnail" url = "http://hl7.org/fhir/StructureDefinition/documentreference-thumbnail";
|};

@r4:DataTypeDefinition {
    name: "DosageConditions",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageConditions record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/dosage-conditions" url = "http://hl7.org/fhir/StructureDefinition/dosage-conditions";
|};

@r4:DataTypeDefinition {
    name: "DosageMinimumGapBetweenDose",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type DosageMinimumGapBetweenDose record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/dosage-minimumGapBetweenDose" url = "http://hl7.org/fhir/StructureDefinition/dosage-minimumGapBetweenDose";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionAllowedUnits",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionAllowedUnits record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-allowedUnits" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-allowedUnits";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionBestpractice",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionBestpractice record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionBestpracticeExplanation",
    baseType: (),
    elements: {
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionBestpracticeExplanation record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionBindingName",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionBindingName record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionConceptmap",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionConceptmap record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-conceptmap" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-conceptmap";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionDefaulttype",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionDefaulttype record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-defaulttype" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-defaulttype";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionEquivalence",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionEquivalence record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-equivalence" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-equivalence";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionGraphConstraint",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionGraphConstraint record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-graphConstraint" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-graphConstraint";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionIdentifier",
    baseType: (),
    elements: {
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionIdentifier record {|
    *r4:IdentifierExtension;

    r4:Identifier valueIdentifier;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-identifier" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-identifier";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionInheritedExtensibleValueSet",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionInheritedExtensibleValueSet record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-inheritedExtensibleValueSet" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-inheritedExtensibleValueSet";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionIsCommonBinding",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionIsCommonBinding record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionMaxValueSet",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionMaxValueSet record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionMinValueSet",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionMinValueSet record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-minValueSet" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-minValueSet";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionNamespace",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionNamespace record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-namespace" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-namespace";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionPattern",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionPattern record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-pattern" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-pattern";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionProfileElement",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionProfileElement record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-profile-element" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-profile-element";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionQuestion",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionQuestion record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-question" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-question";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionSelector",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionSelector record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-selector" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-selector";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionSuppress",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionSuppress record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-suppress" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-suppress";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionTranslatable",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionTranslatable record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-translatable" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-translatable";
|};

@r4:DataTypeDefinition {
    name: "ElementdefinitionTypeMustSupport",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ElementdefinitionTypeMustSupport record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/elementdefinition-type-must-support" url = "http://hl7.org/fhir/StructureDefinition/elementdefinition-type-must-support";
|};

@r4:DataTypeDefinition {
    name: "EncounterAssociatedEncounter",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type EncounterAssociatedEncounter record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/encounter-associatedEncounter" url = "http://hl7.org/fhir/StructureDefinition/encounter-associatedEncounter";
|};

@r4:DataTypeDefinition {
    name: "EncounterModeOfArrival",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type EncounterModeOfArrival record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org/fhir/StructureDefinition/encounter-modeOfArrival" url = "http://hl7.org/fhir/StructureDefinition/encounter-modeOfArrival";
|};

@r4:DataTypeDefinition {
    name: "EncounterReasonCancelled",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type EncounterReasonCancelled record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/encounter-reasonCancelled" url = "http://hl7.org/fhir/StructureDefinition/encounter-reasonCancelled";
|};

@r4:DataTypeDefinition {
    name: "EndpointFhirVersion",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type EndpointFhirVersion record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/endpoint-fhir-version" url = "http://hl7.org/fhir/StructureDefinition/endpoint-fhir-version";
|};

@r4:DataTypeDefinition {
    name: "EntryFormat",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type EntryFormat record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/entryFormat" url = "http://hl7.org/fhir/StructureDefinition/entryFormat";
|};

@r4:DataTypeDefinition {
    name: "EventBasedOn",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type EventBasedOn record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/event-basedOn" url = "http://hl7.org/fhir/StructureDefinition/event-basedOn";
|};

@r4:DataTypeDefinition {
    name: "EventEventHistory",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type EventEventHistory record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/event-eventHistory" url = "http://hl7.org/fhir/StructureDefinition/event-eventHistory";
|};

@r4:DataTypeDefinition {
    name: "EventLocation",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type EventLocation record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/event-location" url = "http://hl7.org/fhir/StructureDefinition/event-location";
|};

@r4:DataTypeDefinition {
    name: "EventPartOf",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type EventPartOf record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/event-partOf" url = "http://hl7.org/fhir/StructureDefinition/event-partOf";
|};

@r4:DataTypeDefinition {
    name: "EventPerformerFunction",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type EventPerformerFunction record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/event-performerFunction" url = "http://hl7.org/fhir/StructureDefinition/event-performerFunction";
|};

@r4:DataTypeDefinition {
    name: "EventRecorded",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type EventRecorded record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/event-recorded" url = "http://hl7.org/fhir/StructureDefinition/event-recorded";
|};

@r4:DataTypeDefinition {
    name: "EventStatusReason",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type EventStatusReason record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/event-statusReason" url = "http://hl7.org/fhir/StructureDefinition/event-statusReason";
|};

@r4:DataTypeDefinition {
    name: "ExtendedContactAvailability",
    baseType: (),
    elements: {
        "valueAvailability": {
            name: "valueAvailability",
            dataType: r4:Availability,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ExtendedContactAvailability record {|
    *r4:AvailabilityExtension;

    r4:Availability valueAvailability;
    "http://hl7.org/fhir/StructureDefinition/extended-contact-availability" url = "http://hl7.org/fhir/StructureDefinition/extended-contact-availability";
|};

@r4:DataTypeDefinition {
    name: "ExtensionQuantityTranslation",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },

        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ExtensionQuantityTranslation record {|
    *r4:QuantityExtension;

    "http://hl7.org/fhir/StructureDefinition/extension-quantity-translation" url = "http://hl7.org/fhir/StructureDefinition/extension-quantity-translation";
    r4:Quantity valueQuantity;
|};

@r4:DataTypeDefinition {
    name: "FamilyMemberHistoryGeneticsObservation",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type FamilyMemberHistoryGeneticsObservation record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/family-member-history-genetics-observation" url = "http://hl7.org/fhir/StructureDefinition/family-member-history-genetics-observation";
|};

@r4:DataTypeDefinition {
    name: "FamilyMemberHistoryGeneticsParent",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type FamilyMemberHistoryGeneticsParent record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/family-member-history-genetics-parent" url = "http://hl7.org/fhir/StructureDefinition/family-member-history-genetics-parent";
|};

@r4:DataTypeDefinition {
    name: "FamilyMemberHistoryGeneticsSibling",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type FamilyMemberHistoryGeneticsSibling record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/family-member-history-genetics-sibling" url = "http://hl7.org/fhir/StructureDefinition/family-member-history-genetics-sibling";
|};

@r4:DataTypeDefinition {
    name: "FamilymemberhistoryAbatement",
    baseType: (),
    elements: {
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type FamilymemberhistoryAbatement record {|
    *r4:DateExtension;

    r4:date valueDate;
    "http://hl7.org/fhir/StructureDefinition/familymemberhistory-abatement" url = "http://hl7.org/fhir/StructureDefinition/familymemberhistory-abatement";
|};

@r4:DataTypeDefinition {
    name: "FamilymemberhistoryPatientRecord",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type FamilymemberhistoryPatientRecord record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/familymemberhistory-patient-record" url = "http://hl7.org/fhir/StructureDefinition/familymemberhistory-patient-record";
|};

@r4:DataTypeDefinition {
    name: "FamilymemberhistorySeverity",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type FamilymemberhistorySeverity record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/familymemberhistory-severity" url = "http://hl7.org/fhir/StructureDefinition/familymemberhistory-severity";
|};

@r4:DataTypeDefinition {
    name: "FamilymemberhistoryType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type FamilymemberhistoryType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/familymemberhistory-type" url = "http://hl7.org/fhir/StructureDefinition/familymemberhistory-type";
|};

@r4:DataTypeDefinition {
    name: "FeatureAssertion",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code that identifies a feature. CodeSystem as defined by the Application Feature Framework (tbd: how to reference that from here, or should we move the extension?)",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type FeatureAssertion record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org/fhir/StructureDefinition/feature-assertion" url = "http://hl7.org/fhir/StructureDefinition/feature-assertion";
|};

@r4:DataTypeDefinition {
    name: "FirstCreated",
    baseType: (),
    elements: {
        "valueInstant": {
            name: "valueInstant",
            dataType: r4:instant,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type FirstCreated record {|
    *r4:InstantExtension;

    r4:instant valueInstant;
    "http://hl7.org/fhir/StructureDefinition/firstCreated" url = "http://hl7.org/fhir/StructureDefinition/firstCreated";
|};

@r4:DataTypeDefinition {
    name: "FlagDetail",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type FlagDetail record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/flag-detail" url = "http://hl7.org/fhir/StructureDefinition/flag-detail";
|};

@r4:DataTypeDefinition {
    name: "FlagPriority",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type FlagPriority record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/flag-priority" url = "http://hl7.org/fhir/StructureDefinition/flag-priority";
|};

@r4:DataTypeDefinition {
    name: "Geolocation",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type Geolocation record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/geolocation" url = "http://hl7.org/fhir/StructureDefinition/geolocation";
|};

@r4:DataTypeDefinition {
    name: "GoalAcceptance",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type GoalAcceptance record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/goal-acceptance" url = "http://hl7.org/fhir/StructureDefinition/goal-acceptance";
|};

@r4:DataTypeDefinition {
    name: "GoalReasonRejected",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type GoalReasonRejected record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/goal-reasonRejected" url = "http://hl7.org/fhir/StructureDefinition/goal-reasonRejected";
|};

@r4:DataTypeDefinition {
    name: "GoalRelationship",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type GoalRelationship record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/goal-relationship" url = "http://hl7.org/fhir/StructureDefinition/goal-relationship";
|};

@r4:DataTypeDefinition {
    name: "HlaGenotypingResultsAlleleDatabase",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HlaGenotypingResultsAlleleDatabase record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/hla-genotyping-results-allele-database" url = "http://hl7.org/fhir/StructureDefinition/hla-genotyping-results-allele-database";
|};

@r4:DataTypeDefinition {
    name: "HlaGenotypingResultsGlstring",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HlaGenotypingResultsGlstring record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/hla-genotyping-results-glstring" url = "http://hl7.org/fhir/StructureDefinition/hla-genotyping-results-glstring";
|};

@r4:DataTypeDefinition {
    name: "HlaGenotypingResultsHaploid",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HlaGenotypingResultsHaploid record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/hla-genotyping-results-haploid" url = "http://hl7.org/fhir/StructureDefinition/hla-genotyping-results-haploid";
|};

@r4:DataTypeDefinition {
    name: "HlaGenotypingResultsMethod",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HlaGenotypingResultsMethod record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/hla-genotyping-results-method" url = "http://hl7.org/fhir/StructureDefinition/hla-genotyping-results-method";
|};

@r4:DataTypeDefinition {
    name: "HttpResponseHeader",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HttpResponseHeader record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/http-response-header" url = "http://hl7.org/fhir/StructureDefinition/http-response-header";
|};

@r4:DataTypeDefinition {
    name: "HumannameAssemblyOrder",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HumannameAssemblyOrder record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/humanname-assembly-order" url = "http://hl7.org/fhir/StructureDefinition/humanname-assembly-order";
|};

@r4:DataTypeDefinition {
    name: "HumannameFathersFamily",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HumannameFathersFamily record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/humanname-fathers-family" url = "http://hl7.org/fhir/StructureDefinition/humanname-fathers-family";
|};

@r4:DataTypeDefinition {
    name: "HumannameMothersFamily",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HumannameMothersFamily record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/humanname-mothers-family" url = "http://hl7.org/fhir/StructureDefinition/humanname-mothers-family";
|};

@r4:DataTypeDefinition {
    name: "HumannameOwnName",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HumannameOwnName record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/humanname-own-name" url = "http://hl7.org/fhir/StructureDefinition/humanname-own-name";
|};

@r4:DataTypeDefinition {
    name: "HumannameOwnPrefix",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HumannameOwnPrefix record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/humanname-own-prefix" url = "http://hl7.org/fhir/StructureDefinition/humanname-own-prefix";
|};

@r4:DataTypeDefinition {
    name: "HumannamePartnerName",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HumannamePartnerName record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/humanname-partner-name" url = "http://hl7.org/fhir/StructureDefinition/humanname-partner-name";
|};

@r4:DataTypeDefinition {
    name: "HumannamePartnerPrefix",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type HumannamePartnerPrefix record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/humanname-partner-prefix" url = "http://hl7.org/fhir/StructureDefinition/humanname-partner-prefix";
|};

@r4:DataTypeDefinition {
    name: "IdentifierCheckDigit",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IdentifierCheckDigit record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/identifier-checkDigit" url = "http://hl7.org/fhir/StructureDefinition/identifier-checkDigit";
|};

@r4:DataTypeDefinition {
    name: "IdentifierValidDate",
    baseType: (),
    elements: {
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IdentifierValidDate record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    "http://hl7.org/fhir/StructureDefinition/identifier-validDate" url = "http://hl7.org/fhir/StructureDefinition/identifier-validDate";
|};

@r4:DataTypeDefinition {
    name: "ImmunizationProcedure",
    baseType: (),
    elements: {
        "valueCodeableReference": {
            name: "valueCodeableReference",
            dataType: r4:CodeableReference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ImmunizationProcedure record {|
    *r4:CodeableReferenceExtension;

    r4:CodeableReference valueCodeableReference;
    "http://hl7.org/fhir/StructureDefinition/immunization-procedure" url = "http://hl7.org/fhir/StructureDefinition/immunization-procedure";
|};

@r4:DataTypeDefinition {
    name: "ImplementationguideSourceFile",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ImplementationguideSourceFile record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/implementationguide-sourceFile" url = "http://hl7.org/fhir/StructureDefinition/implementationguide-sourceFile";
|};

@r4:DataTypeDefinition {
    name: "IndividualGenderIdentity",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualGenderIdentity record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/individual-genderIdentity" url = "http://hl7.org/fhir/StructureDefinition/individual-genderIdentity";
|};

@r4:DataTypeDefinition {
    name: "IndividualPronouns",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualPronouns record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/individual-pronouns" url = "http://hl7.org/fhir/StructureDefinition/individual-pronouns";
|};

@r4:DataTypeDefinition {
    name: "IndividualRecordedSexOrGender",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualRecordedSexOrGender record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/individual-recordedSexOrGender" url = "http://hl7.org/fhir/StructureDefinition/individual-recordedSexOrGender";
|};

@r4:DataTypeDefinition {
    name: "IsoADUse",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADUse record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/iso21090-AD-use" url = "http://hl7.org/fhir/StructureDefinition/iso21090-AD-use";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPAdditionalLocator",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPAdditionalLocator record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-additionalLocator" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-additionalLocator";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPBuildingNumberSuffix",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPBuildingNumberSuffix record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-buildingNumberSuffix" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-buildingNumberSuffix";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPCareOf",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPCareOf record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-careOf" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-careOf";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPCensusTract",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPCensusTract record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-censusTract" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-censusTract";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPDelimiter",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPDelimiter record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-delimiter" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-delimiter";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPDeliveryAddressLine",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPDeliveryAddressLine record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryAddressLine" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryAddressLine";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPDeliveryInstallationArea",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPDeliveryInstallationArea record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryInstallationArea" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryInstallationArea";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPDeliveryInstallationQualifier",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPDeliveryInstallationQualifier record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryInstallationQualifier" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryInstallationQualifier";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPDeliveryInstallationType",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPDeliveryInstallationType record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryInstallationType" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryInstallationType";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPDeliveryMode",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPDeliveryMode record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryMode" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryMode";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPDeliveryModeIdentifier",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPDeliveryModeIdentifier record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryModeIdentifier" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryModeIdentifier";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPDirection",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPDirection record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-direction" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-direction";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPHouseNumber",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPHouseNumber record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-houseNumber" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-houseNumber";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPHouseNumberNumeric",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPHouseNumberNumeric record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-houseNumberNumeric" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-houseNumberNumeric";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPPostBox",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPPostBox record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-postBox" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-postBox";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPPrecinct",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPPrecinct record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-precinct" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-precinct";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPStreetAddressLine",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPStreetAddressLine record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-streetAddressLine" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-streetAddressLine";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPStreetName",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPStreetName record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-streetName" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-streetName";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPStreetNameBase",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPStreetNameBase record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-streetNameBase" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-streetNameBase";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPStreetNameType",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPStreetNameType record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-streetNameType" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-streetNameType";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPUnitID",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPUnitID record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-unitID" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-unitID";
|};

@r4:DataTypeDefinition {
    name: "IsoADXPUnitType",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoADXPUnitType record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-unitType" url = "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-unitType";
|};

@r4:DataTypeDefinition {
    name: "IsoENQualifier",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoENQualifier record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier" url = "http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier";
|};

@r4:DataTypeDefinition {
    name: "IsoENRepresentation",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoENRepresentation record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/iso21090-EN-representation" url = "http://hl7.org/fhir/StructureDefinition/iso21090-EN-representation";
|};

@r4:DataTypeDefinition {
    name: "IsoENUse",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoENUse record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/iso21090-EN-use" url = "http://hl7.org/fhir/StructureDefinition/iso21090-EN-use";
|};

@r4:DataTypeDefinition {
    name: "IsoPQTranslation",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },

        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoPQTranslation record {|
    *r4:QuantityExtension;

    "http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation" url = "http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation";
    r4:Quantity valueQuantity;
|};

@r4:DataTypeDefinition {
    name: "IsoSCCoding",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoSCCoding record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org/fhir/StructureDefinition/iso21090-SC-coding" url = "http://hl7.org/fhir/StructureDefinition/iso21090-SC-coding";
|};

@r4:DataTypeDefinition {
    name: "IsoTELAddress",
    baseType: (),
    elements: {
        "valueUrl": {
            name: "valueUrl",
            dataType: r4:urlType,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoTELAddress record {|
    *r4:UrlExtension;

    r4:url valueUrl;
    "http://hl7.org/fhir/StructureDefinition/iso21090-TEL-address" url = "http://hl7.org/fhir/StructureDefinition/iso21090-TEL-address";
|};

@r4:DataTypeDefinition {
    name: "IsoCodedString",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoCodedString record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org/fhir/StructureDefinition/iso21090-codedString" url = "http://hl7.org/fhir/StructureDefinition/iso21090-codedString";
|};

@r4:DataTypeDefinition {
    name: "IsoNullFlavor",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoNullFlavor record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor" url = "http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor";
|};

@r4:DataTypeDefinition {
    name: "IsoPreferred",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoPreferred record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/iso21090-preferred" url = "http://hl7.org/fhir/StructureDefinition/iso21090-preferred";
|};

@r4:DataTypeDefinition {
    name: "IsoUncertainty",
    baseType: (),
    elements: {
        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoUncertainty record {|
    *r4:DecimalExtension;

    decimal valueDecimal;
    "http://hl7.org/fhir/StructureDefinition/iso21090-uncertainty" url = "http://hl7.org/fhir/StructureDefinition/iso21090-uncertainty";
|};

@r4:DataTypeDefinition {
    name: "IsoUncertaintyType",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IsoUncertaintyType record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/iso21090-uncertaintyType" url = "http://hl7.org/fhir/StructureDefinition/iso21090-uncertaintyType";
|};

@r4:DataTypeDefinition {
    name: "ItemWeight",
    baseType: (),
    elements: {
        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ItemWeight record {|
    *r4:DecimalExtension;

    decimal valueDecimal;
    "http://hl7.org/fhir/StructureDefinition/itemWeight" url = "http://hl7.org/fhir/StructureDefinition/itemWeight";
|};

@r4:DataTypeDefinition {
    name: "Language",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type Language record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/language" url = "http://hl7.org/fhir/StructureDefinition/language";
|};

@r4:DataTypeDefinition {
    name: "LargeValue",
    baseType: (),
    elements: {
        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type LargeValue record {|
    *r4:DecimalExtension;

    decimal valueDecimal;
    "http://hl7.org/fhir/StructureDefinition/largeValue" url = "http://hl7.org/fhir/StructureDefinition/largeValue";
|};

@r4:DataTypeDefinition {
    name: "LastSourceSync",
    baseType: (),
    elements: {
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type LastSourceSync record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    "http://hl7.org/fhir/StructureDefinition/lastSourceSync" url = "http://hl7.org/fhir/StructureDefinition/lastSourceSync";
|};

@r4:DataTypeDefinition {
    name: "ListCategory",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ListCategory record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/list-category" url = "http://hl7.org/fhir/StructureDefinition/list-category";
|};

@r4:DataTypeDefinition {
    name: "ListChangeBase",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ListChangeBase record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/list-changeBase" url = "http://hl7.org/fhir/StructureDefinition/list-changeBase";
|};

@r4:DataTypeDefinition {
    name: "ListFor",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ListFor record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/list-for" url = "http://hl7.org/fhir/StructureDefinition/list-for";
|};

@r4:DataTypeDefinition {
    name: "LocationBoundaryGeojson",
    baseType: (),
    elements: {
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type LocationBoundaryGeojson record {|
    *r4:AttachmentExtension;

    r4:Attachment valueAttachment;
    "http://hl7.org/fhir/StructureDefinition/location-boundary-geojson" url = "http://hl7.org/fhir/StructureDefinition/location-boundary-geojson";
|};

@r4:DataTypeDefinition {
    name: "LocationCommunication",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type LocationCommunication record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/location-communication" url = "http://hl7.org/fhir/StructureDefinition/location-communication";
|};

@r4:DataTypeDefinition {
    name: "LocationDistance",
    baseType: (),
    elements: {
        "valueDistance": {
            name: "valueDistance",
            dataType: r4:Distance,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type LocationDistance record {|
    *r4:DistanceExtension;

    r4:Distance valueDistance;
    "http://hl7.org/fhir/StructureDefinition/location-distance" url = "http://hl7.org/fhir/StructureDefinition/location-distance";
|};

@r4:DataTypeDefinition {
    name: "MatchGrade",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MatchGrade record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/match-grade" url = "http://hl7.org/fhir/StructureDefinition/match-grade";
|};

@r4:DataTypeDefinition {
    name: "MaxDecimalPlaces",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MaxDecimalPlaces record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org/fhir/StructureDefinition/maxDecimalPlaces" url = "http://hl7.org/fhir/StructureDefinition/maxDecimalPlaces";
|};

@r4:DataTypeDefinition {
    name: "MaxSize",
    baseType: (),
    elements: {
        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MaxSize record {|
    *r4:DecimalExtension;

    decimal valueDecimal;
    "http://hl7.org/fhir/StructureDefinition/maxSize" url = "http://hl7.org/fhir/StructureDefinition/maxSize";
|};

@r4:DataTypeDefinition {
    name: "MaxValue",
    baseType: (),
    elements: {
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MaxValue record {|
    *r4:DateExtension;

    r4:date valueDate;
    "http://hl7.org/fhir/StructureDefinition/maxValue" url = "http://hl7.org/fhir/StructureDefinition/maxValue";
|};

@r4:DataTypeDefinition {
    name: "MeasurereportCategory",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MeasurereportCategory record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/measurereport-category" url = "http://hl7.org/fhir/StructureDefinition/measurereport-category";
|};

@r4:DataTypeDefinition {
    name: "MeasurereportCountQuantity",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MeasurereportCountQuantity record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/measurereport-countQuantity" url = "http://hl7.org/fhir/StructureDefinition/measurereport-countQuantity";
|};

@r4:DataTypeDefinition {
    name: "MeasurereportPopulationDescription",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MeasurereportPopulationDescription record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/measurereport-populationDescription" url = "http://hl7.org/fhir/StructureDefinition/measurereport-populationDescription";
|};

@r4:DataTypeDefinition {
    name: "MedicationManufacturingBatch",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationManufacturingBatch record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/medication-manufacturingBatch" url = "http://hl7.org/fhir/StructureDefinition/medication-manufacturingBatch";
|};

@r4:DataTypeDefinition {
    name: "MedicationdispenseQuantityRemaining",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },

        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationdispenseQuantityRemaining record {|
    *r4:QuantityExtension;

    "http://hl7.org/fhir/StructureDefinition/medicationdispense-quantityRemaining" url = "http://hl7.org/fhir/StructureDefinition/medicationdispense-quantityRemaining";
    r4:Quantity valueQuantity;
|};

@r4:DataTypeDefinition {
    name: "MedicationdispenseRefillsRemaining",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationdispenseRefillsRemaining record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org/fhir/StructureDefinition/medicationdispense-refillsRemaining" url = "http://hl7.org/fhir/StructureDefinition/medicationdispense-refillsRemaining";
|};

@r4:DataTypeDefinition {
    name: "MessageheaderResponseRequest",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MessageheaderResponseRequest record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/messageheader-response-request" url = "http://hl7.org/fhir/StructureDefinition/messageheader-response-request";
|};

@r4:DataTypeDefinition {
    name: "MetadataresourcePublishDate",
    baseType: (),
    elements: {
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MetadataresourcePublishDate record {|
    *r4:DateExtension;

    r4:date valueDate;
    "http://hl7.org/fhir/StructureDefinition/metadataresource-publish-date" url = "http://hl7.org/fhir/StructureDefinition/metadataresource-publish-date";
|};

@r4:DataTypeDefinition {
    name: "MimeType",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MimeType record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/mimeType" url = "http://hl7.org/fhir/StructureDefinition/mimeType";
|};

@r4:DataTypeDefinition {
    name: "MinLength",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MinLength record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org/fhir/StructureDefinition/minLength" url = "http://hl7.org/fhir/StructureDefinition/minLength";
|};

@r4:DataTypeDefinition {
    name: "MinValue",
    baseType: (),
    elements: {
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MinValue record {|
    *r4:DateExtension;

    r4:date valueDate;
    "http://hl7.org/fhir/StructureDefinition/minValue" url = "http://hl7.org/fhir/StructureDefinition/minValue";
|};

@r4:DataTypeDefinition {
    name: "NamingsystemCheckDigit",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type NamingsystemCheckDigit record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/namingsystem-checkDigit" url = "http://hl7.org/fhir/StructureDefinition/namingsystem-checkDigit";
|};

@r4:DataTypeDefinition {
    name: "NarrativeLink",
    baseType: (),
    elements: {
        "valueUrl": {
            name: "valueUrl",
            dataType: r4:urlType,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type NarrativeLink record {|
    *r4:UrlExtension;

    r4:url valueUrl;
    "http://hl7.org/fhir/StructureDefinition/narrativeLink" url = "http://hl7.org/fhir/StructureDefinition/narrativeLink";
|};

@r4:DataTypeDefinition {
    name: "NoFixedAddress",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type NoFixedAddress record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/no-fixed-address" url = "http://hl7.org/fhir/StructureDefinition/no-fixed-address";
|};

@r4:DataTypeDefinition {
    name: "Note",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },

        "valueAnnotation": {
            name: "valueAnnotation",
            dataType: r4:Annotation,
            min: 1,
            max: 1,
            isArray: false,
            description: "Additional notes that apply to this resource or element.",
            path: "Extension.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type Note record {|
    *r4:AnnotationExtension;

    "http://hl7.org/fhir/StructureDefinition/note" url = "http://hl7.org/fhir/StructureDefinition/note";
    r4:Annotation valueAnnotation;
|};

@r4:DataTypeDefinition {
    name: "NutritionorderAdaptiveFeedingDevice",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type NutritionorderAdaptiveFeedingDevice record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/nutritionorder-adaptiveFeedingDevice" url = "http://hl7.org/fhir/StructureDefinition/nutritionorder-adaptiveFeedingDevice";
|};

@r4:DataTypeDefinition {
    name: "Obligation",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type Obligation record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/obligation" url = "http://hl7.org/fhir/StructureDefinition/obligation";
|};

@r4:DataTypeDefinition {
    name: "ObligationsProfile",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObligationsProfile record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/obligations-profile" url = "http://hl7.org/fhir/StructureDefinition/obligations-profile";
|};

@r4:DataTypeDefinition {
    name: "ObservationAnalysisDateTime",
    baseType: (),
    elements: {
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationAnalysisDateTime record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    "http://hl7.org/fhir/StructureDefinition/observation-analysis-date-time" url = "http://hl7.org/fhir/StructureDefinition/observation-analysis-date-time";
|};

@r4:DataTypeDefinition {
    name: "ObservationBodyPosition",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationBodyPosition record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/observation-bodyPosition" url = "http://hl7.org/fhir/StructureDefinition/observation-bodyPosition";
|};

@r4:DataTypeDefinition {
    name: "ObservationComponentCategory",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationComponentCategory record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/observation-componentCategory" url = "http://hl7.org/fhir/StructureDefinition/observation-componentCategory";
|};

@r4:DataTypeDefinition {
    name: "ObservationDelta",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationDelta record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/observation-delta" url = "http://hl7.org/fhir/StructureDefinition/observation-delta";
|};

@r4:DataTypeDefinition {
    name: "ObservationDeviceCode",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationDeviceCode record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/observation-deviceCode" url = "http://hl7.org/fhir/StructureDefinition/observation-deviceCode";
|};

@r4:DataTypeDefinition {
    name: "ObservationFocusCode",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationFocusCode record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/observation-focusCode" url = "http://hl7.org/fhir/StructureDefinition/observation-focusCode";
|};

@r4:DataTypeDefinition {
    name: "ObservationGatewayDevice",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGatewayDevice record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/observation-gatewayDevice" url = "http://hl7.org/fhir/StructureDefinition/observation-gatewayDevice";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsAllele",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsAllele record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/observation-geneticsAllele" url = "http://hl7.org/fhir/StructureDefinition/observation-geneticsAllele";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsAminoAcidChange",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsAminoAcidChange record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/observation-geneticsAminoAcidChange" url = "http://hl7.org/fhir/StructureDefinition/observation-geneticsAminoAcidChange";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsAncestry",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsAncestry record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/observation-geneticsAncestry" url = "http://hl7.org/fhir/StructureDefinition/observation-geneticsAncestry";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsCopyNumberEvent",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsCopyNumberEvent record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/observation-geneticsCopyNumberEvent" url = "http://hl7.org/fhir/StructureDefinition/observation-geneticsCopyNumberEvent";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsDNARegionName",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsDNARegionName record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/observation-geneticsDNARegionName" url = "http://hl7.org/fhir/StructureDefinition/observation-geneticsDNARegionName";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsGene",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsGene record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/observation-geneticsGene" url = "http://hl7.org/fhir/StructureDefinition/observation-geneticsGene";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsGenomicSourceClass",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsGenomicSourceClass record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/observation-geneticsGenomicSourceClass" url = "http://hl7.org/fhir/StructureDefinition/observation-geneticsGenomicSourceClass";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsInterpretation",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsInterpretation record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/observation-geneticsInterpretation" url = "http://hl7.org/fhir/StructureDefinition/observation-geneticsInterpretation";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsPhaseSet",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsPhaseSet record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/observation-geneticsPhaseSet" url = "http://hl7.org/fhir/StructureDefinition/observation-geneticsPhaseSet";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsVariant",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsVariant record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/observation-geneticsVariant" url = "http://hl7.org/fhir/StructureDefinition/observation-geneticsVariant";
|};

@r4:DataTypeDefinition {
    name: "ObservationNatureOfAbnormalTest",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationNatureOfAbnormalTest record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/observation-nature-of-abnormal-test" url = "http://hl7.org/fhir/StructureDefinition/observation-nature-of-abnormal-test";
|};

@r4:DataTypeDefinition {
    name: "ObservationPrecondition",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationPrecondition record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/observation-precondition" url = "http://hl7.org/fhir/StructureDefinition/observation-precondition";
|};

@r4:DataTypeDefinition {
    name: "ObservationReagent",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationReagent record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/observation-reagent" url = "http://hl7.org/fhir/StructureDefinition/observation-reagent";
|};

@r4:DataTypeDefinition {
    name: "ObservationReplaces",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationReplaces record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/observation-replaces" url = "http://hl7.org/fhir/StructureDefinition/observation-replaces";
|};

@r4:DataTypeDefinition {
    name: "ObservationSecondaryFinding",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationSecondaryFinding record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/observation-secondaryFinding" url = "http://hl7.org/fhir/StructureDefinition/observation-secondaryFinding";
|};

@r4:DataTypeDefinition {
    name: "ObservationSequelTo",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationSequelTo record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/observation-sequelTo" url = "http://hl7.org/fhir/StructureDefinition/observation-sequelTo";
|};

@r4:DataTypeDefinition {
    name: "ObservationSpecimenCode",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationSpecimenCode record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/observation-specimenCode" url = "http://hl7.org/fhir/StructureDefinition/observation-specimenCode";
|};

@r4:DataTypeDefinition {
    name: "ObservationStructureType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationStructureType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/observation-structure-type" url = "http://hl7.org/fhir/StructureDefinition/observation-structure-type";
|};

@r4:DataTypeDefinition {
    name: "ObservationTimeOffset",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationTimeOffset record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org/fhir/StructureDefinition/observation-timeOffset" url = "http://hl7.org/fhir/StructureDefinition/observation-timeOffset";
|};

@r4:DataTypeDefinition {
    name: "ObservationVSubid",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationVSubid record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/observation-v2-subid" url = "http://hl7.org/fhir/StructureDefinition/observation-v2-subid";
|};

@r4:DataTypeDefinition {
    name: "OpenEHRAdministration",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OpenEHRAdministration record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/openEHR-administration" url = "http://hl7.org/fhir/StructureDefinition/openEHR-administration";
|};

@r4:DataTypeDefinition {
    name: "OpenEHRCareplan",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OpenEHRCareplan record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/openEHR-careplan" url = "http://hl7.org/fhir/StructureDefinition/openEHR-careplan";
|};

@r4:DataTypeDefinition {
    name: "OpenEHRExposureDate",
    baseType: (),
    elements: {
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OpenEHRExposureDate record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    "http://hl7.org/fhir/StructureDefinition/openEHR-exposureDate" url = "http://hl7.org/fhir/StructureDefinition/openEHR-exposureDate";
|};

@r4:DataTypeDefinition {
    name: "OpenEHRExposureDescription",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OpenEHRExposureDescription record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/openEHR-exposureDescription" url = "http://hl7.org/fhir/StructureDefinition/openEHR-exposureDescription";
|};

@r4:DataTypeDefinition {
    name: "OpenEHRExposureDuration",
    baseType: (),
    elements: {
        "valueDuration": {
            name: "valueDuration",
            dataType: r4:Duration,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OpenEHRExposureDuration record {|
    *r4:DurationExtension;

    r4:Duration valueDuration;
    "http://hl7.org/fhir/StructureDefinition/openEHR-exposureDuration" url = "http://hl7.org/fhir/StructureDefinition/openEHR-exposureDuration";
|};

@r4:DataTypeDefinition {
    name: "OpenEHRLocation",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OpenEHRLocation record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/openEHR-location" url = "http://hl7.org/fhir/StructureDefinition/openEHR-location";
|};

@r4:DataTypeDefinition {
    name: "OpenEHRManagement",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OpenEHRManagement record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/openEHR-management" url = "http://hl7.org/fhir/StructureDefinition/openEHR-management";
|};

@r4:DataTypeDefinition {
    name: "OpenEHRTest",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OpenEHRTest record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/openEHR-test" url = "http://hl7.org/fhir/StructureDefinition/openEHR-test";
|};

@r4:DataTypeDefinition {
    name: "OperationdefinitionAllowedType",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OperationdefinitionAllowedType record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/operationdefinition-allowed-type" url = "http://hl7.org/fhir/StructureDefinition/operationdefinition-allowed-type";
|};

@r4:DataTypeDefinition {
    name: "OperationdefinitionProfile",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OperationdefinitionProfile record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/operationdefinition-profile" url = "http://hl7.org/fhir/StructureDefinition/operationdefinition-profile";
|};

@r4:DataTypeDefinition {
    name: "OperationoutcomeAuthority",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OperationoutcomeAuthority record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/operationoutcome-authority" url = "http://hl7.org/fhir/StructureDefinition/operationoutcome-authority";
|};

@r4:DataTypeDefinition {
    name: "OperationoutcomeDetectedIssue",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OperationoutcomeDetectedIssue record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/operationoutcome-detectedIssue" url = "http://hl7.org/fhir/StructureDefinition/operationoutcome-detectedIssue";
|};

@r4:DataTypeDefinition {
    name: "OperationoutcomeFile",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OperationoutcomeFile record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/operationoutcome-file" url = "http://hl7.org/fhir/StructureDefinition/operationoutcome-file";
|};

@r4:DataTypeDefinition {
    name: "OperationoutcomeIssueCol",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OperationoutcomeIssueCol record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/operationoutcome-issue-col" url = "http://hl7.org/fhir/StructureDefinition/operationoutcome-issue-col";
|};

@r4:DataTypeDefinition {
    name: "OperationoutcomeIssueLine",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OperationoutcomeIssueLine record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org/fhir/StructureDefinition/operationoutcome-issue-line" url = "http://hl7.org/fhir/StructureDefinition/operationoutcome-issue-line";
|};

@r4:DataTypeDefinition {
    name: "OperationoutcomeIssueServer",
    baseType: (),
    elements: {
        "valueUrl": {
            name: "valueUrl",
            dataType: r4:urlType,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OperationoutcomeIssueServer record {|
    *r4:UrlExtension;

    r4:url valueUrl;
    "http://hl7.org/fhir/StructureDefinition/operationoutcome-issue-server" url = "http://hl7.org/fhir/StructureDefinition/operationoutcome-issue-server";
|};

@r4:DataTypeDefinition {
    name: "OperationoutcomeIssueSlicetext",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OperationoutcomeIssueSlicetext record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/operationoutcome-issue-slicetext" url = "http://hl7.org/fhir/StructureDefinition/operationoutcome-issue-slicetext";
|};

@r4:DataTypeDefinition {
    name: "OperationoutcomeIssueSource",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OperationoutcomeIssueSource record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/operationoutcome-issue-source" url = "http://hl7.org/fhir/StructureDefinition/operationoutcome-issue-source";
|};

@r4:DataTypeDefinition {
    name: "OperationoutcomeMessageId",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OperationoutcomeMessageId record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/operationoutcome-message-id" url = "http://hl7.org/fhir/StructureDefinition/operationoutcome-message-id";
|};

@r4:DataTypeDefinition {
    name: "OrdinalValue",
    baseType: (),
    elements: {
        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrdinalValue record {|
    *r4:DecimalExtension;

    decimal valueDecimal;
    "http://hl7.org/fhir/StructureDefinition/ordinalValue" url = "http://hl7.org/fhir/StructureDefinition/ordinalValue";
|};

@r4:DataTypeDefinition {
    name: "OrganizationBrand",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrganizationBrand record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/organization-brand" url = "http://hl7.org/fhir/StructureDefinition/organization-brand";
|};

@r4:DataTypeDefinition {
    name: "OrganizationPeriod",
    baseType: (),
    elements: {
        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrganizationPeriod record {|
    *r4:PeriodExtension;

    r4:Period valuePeriod;
    "http://hl7.org/fhir/StructureDefinition/organization-period" url = "http://hl7.org/fhir/StructureDefinition/organization-period";
|};

@r4:DataTypeDefinition {
    name: "OrganizationPortal",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An Extension",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrganizationPortal record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/organization-portal" url = "http://hl7.org/fhir/StructureDefinition/organization-portal";
|};

@r4:DataTypeDefinition {
    name: "OrganizationPreferredContact",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrganizationPreferredContact record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/organization-preferredContact" url = "http://hl7.org/fhir/StructureDefinition/organization-preferredContact";
|};

@r4:DataTypeDefinition {
    name: "OrganizationaffiliationPrimaryInd",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrganizationaffiliationPrimaryInd record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/organizationaffiliation-primaryInd" url = "http://hl7.org/fhir/StructureDefinition/organizationaffiliation-primaryInd";
|};

@r4:DataTypeDefinition {
    name: "OriginalText",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OriginalText record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/originalText" url = "http://hl7.org/fhir/StructureDefinition/originalText";
|};

@r4:DataTypeDefinition {
    name: "PackageSource",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PackageSource record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/package-source" url = "http://hl7.org/fhir/StructureDefinition/package-source";
|};

@r4:DataTypeDefinition {
    name: "ParametersDefinition",
    baseType: (),
    elements: {
        "valueParameterDefinition": {
            name: "valueParameterDefinition",
            dataType: r4:ParameterDefinition,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ParametersDefinition record {|
    *r4:ParameterDefinitionExtension;

    r4:ParameterDefinition valueParameterDefinition;
    "http://hl7.org/fhir/StructureDefinition/parameters-definition" url = "http://hl7.org/fhir/StructureDefinition/parameters-definition";
|};

@r4:DataTypeDefinition {
    name: "ParametersFullUrl",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ParametersFullUrl record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/parameters-fullUrl" url = "http://hl7.org/fhir/StructureDefinition/parameters-fullUrl";
|};

@r4:DataTypeDefinition {
    name: "PatientAdoptionInfo",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientAdoptionInfo record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/patient-adoptionInfo" url = "http://hl7.org/fhir/StructureDefinition/patient-adoptionInfo";
|};

@r4:DataTypeDefinition {
    name: "PatientAnimal",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientAnimal record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/patient-animal" url = "http://hl7.org/fhir/StructureDefinition/patient-animal";
|};

@r4:DataTypeDefinition {
    name: "PatientBirthPlace",
    baseType: (),
    elements: {
        "valueAddress": {
            name: "valueAddress",
            dataType: r4:Address,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientBirthPlace record {|
    *r4:AddressExtension;

    r4:Address valueAddress;
    "http://hl7.org/fhir/StructureDefinition/patient-birthPlace" url = "http://hl7.org/fhir/StructureDefinition/patient-birthPlace";
|};

@r4:DataTypeDefinition {
    name: "PatientBirthTime",
    baseType: (),
    elements: {
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientBirthTime record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    "http://hl7.org/fhir/StructureDefinition/patient-birthTime" url = "http://hl7.org/fhir/StructureDefinition/patient-birthTime";
|};

@r4:DataTypeDefinition {
    name: "PatientBornStatus",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientBornStatus record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/patient-bornStatus" url = "http://hl7.org/fhir/StructureDefinition/patient-bornStatus";
|};

@r4:DataTypeDefinition {
    name: "PatientCadavericDonor",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientCadavericDonor record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/patient-cadavericDonor" url = "http://hl7.org/fhir/StructureDefinition/patient-cadavericDonor";
|};

@r4:DataTypeDefinition {
    name: "PatientCitizenship",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientCitizenship record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/patient-citizenship" url = "http://hl7.org/fhir/StructureDefinition/patient-citizenship";
|};

@r4:DataTypeDefinition {
    name: "PatientCongregation",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientCongregation record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/patient-congregation" url = "http://hl7.org/fhir/StructureDefinition/patient-congregation";
|};

@r4:DataTypeDefinition {
    name: "PatientContactPriority",
    baseType: (),
    elements: {
        "valuePositiveInt": {
            name: "valuePositiveInt",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientContactPriority record {|
    *r4:PositiveIntExtension;

    r4:positiveInt valuePositiveInt;
    "http://hl7.org/fhir/StructureDefinition/patient-contactPriority" url = "http://hl7.org/fhir/StructureDefinition/patient-contactPriority";
|};

@r4:DataTypeDefinition {
    name: "PatientDisability",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientDisability record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/patient-disability" url = "http://hl7.org/fhir/StructureDefinition/patient-disability";
|};

@r4:DataTypeDefinition {
    name: "PatientFetalStatus",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientFetalStatus record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/patient-fetalStatus" url = "http://hl7.org/fhir/StructureDefinition/patient-fetalStatus";
|};

@r4:DataTypeDefinition {
    name: "PatientGenderIdentity",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientGenderIdentity record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/patient-genderIdentity" url = "http://hl7.org/fhir/StructureDefinition/patient-genderIdentity";
|};

@r4:DataTypeDefinition {
    name: "PatientImportance",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientImportance record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/patient-importance" url = "http://hl7.org/fhir/StructureDefinition/patient-importance";
|};

@r4:DataTypeDefinition {
    name: "PatientInterpreterRequired",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientInterpreterRequired record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/patient-interpreterRequired" url = "http://hl7.org/fhir/StructureDefinition/patient-interpreterRequired";
|};

@r4:DataTypeDefinition {
    name: "PatientKnownNonDuplicate",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientKnownNonDuplicate record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/patient-knownNonDuplicate" url = "http://hl7.org/fhir/StructureDefinition/patient-knownNonDuplicate";
|};

@r4:DataTypeDefinition {
    name: "PatientMothersMaidenName",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientMothersMaidenName record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName" url = "http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName";
|};

@r4:DataTypeDefinition {
    name: "PatientMultipleBirthTotal",
    baseType: (),
    elements: {
        "valuePositiveInt": {
            name: "valuePositiveInt",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientMultipleBirthTotal record {|
    *r4:PositiveIntExtension;

    r4:positiveInt valuePositiveInt;
    "http://hl7.org/fhir/StructureDefinition/patient-multipleBirthTotal" url = "http://hl7.org/fhir/StructureDefinition/patient-multipleBirthTotal";
|};

@r4:DataTypeDefinition {
    name: "PatientNationality",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientNationality record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/patient-nationality" url = "http://hl7.org/fhir/StructureDefinition/patient-nationality";
|};

@r4:DataTypeDefinition {
    name: "PatientPreferenceType",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientPreferenceType record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org/fhir/StructureDefinition/patient-preferenceType" url = "http://hl7.org/fhir/StructureDefinition/patient-preferenceType";
|};

@r4:DataTypeDefinition {
    name: "PatientPreferredPharmacy",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientPreferredPharmacy record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/patient-preferredPharmacy" url = "http://hl7.org/fhir/StructureDefinition/patient-preferredPharmacy";
|};

@r4:DataTypeDefinition {
    name: "PatientProficiency",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientProficiency record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/patient-proficiency" url = "http://hl7.org/fhir/StructureDefinition/patient-proficiency";
|};

@r4:DataTypeDefinition {
    name: "PatientRelatedPerson",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientRelatedPerson record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/patient-relatedPerson" url = "http://hl7.org/fhir/StructureDefinition/patient-relatedPerson";
|};

@r4:DataTypeDefinition {
    name: "PatientReligion",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientReligion record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/patient-religion" url = "http://hl7.org/fhir/StructureDefinition/patient-religion";
|};

@r4:DataTypeDefinition {
    name: "PatientSexParameterForClinicalUse",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientSexParameterForClinicalUse record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/patient-sexParameterForClinicalUse" url = "http://hl7.org/fhir/StructureDefinition/patient-sexParameterForClinicalUse";
|};

@r4:DataTypeDefinition {
    name: "PatientUnknownIdentity",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientUnknownIdentity record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/patient-unknownIdentity" url = "http://hl7.org/fhir/StructureDefinition/patient-unknownIdentity";
|};

@r4:DataTypeDefinition {
    name: "PractitionerAnimalSpecies",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PractitionerAnimalSpecies record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/practitioner-animalSpecies" url = "http://hl7.org/fhir/StructureDefinition/practitioner-animalSpecies";
|};

@r4:DataTypeDefinition {
    name: "PractitionerJobTitle",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PractitionerJobTitle record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/practitioner-job-title" url = "http://hl7.org/fhir/StructureDefinition/practitioner-job-title";
|};

@r4:DataTypeDefinition {
    name: "PractitionerroleEmploymentStatus",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PractitionerroleEmploymentStatus record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/practitionerrole-employmentStatus" url = "http://hl7.org/fhir/StructureDefinition/practitionerrole-employmentStatus";
|};

@r4:DataTypeDefinition {
    name: "PractitionerrolePrimaryInd",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PractitionerrolePrimaryInd record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/practitionerrole-primaryInd" url = "http://hl7.org/fhir/StructureDefinition/practitionerrole-primaryInd";
|};

@r4:DataTypeDefinition {
    name: "PreferredTerminologyServer",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PreferredTerminologyServer record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/preferredTerminologyServer" url = "http://hl7.org/fhir/StructureDefinition/preferredTerminologyServer";
|};

@r4:DataTypeDefinition {
    name: "ProcedureApproachBodyStructure",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ProcedureApproachBodyStructure record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/procedure-approachBodyStructure" url = "http://hl7.org/fhir/StructureDefinition/procedure-approachBodyStructure";
|};

@r4:DataTypeDefinition {
    name: "ProcedureCausedBy",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ProcedureCausedBy record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/procedure-causedBy" url = "http://hl7.org/fhir/StructureDefinition/procedure-causedBy";
|};

@r4:DataTypeDefinition {
    name: "ProcedureDirectedBy",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ProcedureDirectedBy record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/procedure-directedBy" url = "http://hl7.org/fhir/StructureDefinition/procedure-directedBy";
|};

@r4:DataTypeDefinition {
    name: "ProcedureIncisionDateTime",
    baseType: (),
    elements: {
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ProcedureIncisionDateTime record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    "http://hl7.org/fhir/StructureDefinition/procedure-incisionDateTime" url = "http://hl7.org/fhir/StructureDefinition/procedure-incisionDateTime";
|};

@r4:DataTypeDefinition {
    name: "ProcedureMethod",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ProcedureMethod record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/procedure-method" url = "http://hl7.org/fhir/StructureDefinition/procedure-method";
|};

@r4:DataTypeDefinition {
    name: "ProcedureProgressStatus",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ProcedureProgressStatus record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/procedure-progressStatus" url = "http://hl7.org/fhir/StructureDefinition/procedure-progressStatus";
|};

@r4:DataTypeDefinition {
    name: "ProcedureSchedule",
    baseType: (),
    elements: {
        "valueTiming": {
            name: "valueTiming",
            dataType: r4:Timing,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ProcedureSchedule record {|
    *r4:TimingExtension;

    r4:Timing valueTiming;
    "http://hl7.org/fhir/StructureDefinition/procedure-schedule" url = "http://hl7.org/fhir/StructureDefinition/procedure-schedule";
|};

@r4:DataTypeDefinition {
    name: "ProcedureTargetBodyStructure",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ProcedureTargetBodyStructure record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/procedure-targetBodyStructure" url = "http://hl7.org/fhir/StructureDefinition/procedure-targetBodyStructure";
|};

@r4:DataTypeDefinition {
    name: "QuantityPrecision",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuantityPrecision record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org/fhir/StructureDefinition/quantity-precision" url = "http://hl7.org/fhir/StructureDefinition/quantity-precision";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireBaseType",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireBaseType record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-baseType" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-baseType";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireChoiceOrientation",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireChoiceOrientation record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-choiceOrientation" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-choiceOrientation";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireConstraint",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 4,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireConstraint record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-constraint" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-constraint";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireDefinitionBased",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireDefinitionBased record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-definitionBased" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-definitionBased";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireDerivationType",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireDerivationType record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-derivationType" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-derivationType";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireDisplayCategory",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireDisplayCategory record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-displayCategory" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-displayCategory";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireFhirType",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireFhirType record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-fhirType" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-fhirType";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireHidden",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireHidden record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-hidden" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-hidden";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireItemControl",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireItemControl record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-itemControl" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-itemControl";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireMaxOccurs",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireMaxOccurs record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-maxOccurs" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-maxOccurs";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireMinOccurs",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireMinOccurs record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-minOccurs" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-minOccurs";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireOptionExclusive",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireOptionExclusive record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-optionExclusive" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-optionExclusive";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireOptionPrefix",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireOptionPrefix record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-optionPrefix" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-optionPrefix";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireOptionRestriction",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireOptionRestriction record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-optionRestriction" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-optionRestriction";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireReferenceFilter",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireReferenceFilter record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-referenceFilter" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-referenceFilter";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireReferenceProfile",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireReferenceProfile record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-referenceProfile" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-referenceProfile";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireReferenceResource",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireReferenceResource record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-referenceResource" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-referenceResource";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireSignatureRequired",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireSignatureRequired record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-signatureRequired" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-signatureRequired";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireSliderStepValue",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireSliderStepValue record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-sliderStepValue" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-sliderStepValue";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireSupportLink",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireSupportLink record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-supportLink" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-supportLink";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireUnit",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireUnit record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-unit" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-unit";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireUnitOption",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireUnitOption record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-unitOption" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-unitOption";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireUnitValueSet",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireUnitValueSet record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-unitValueSet" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-unitValueSet";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireUsageMode",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireUsageMode record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/questionnaire-usageMode" url = "http://hl7.org/fhir/StructureDefinition/questionnaire-usageMode";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireresponseAttester",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An Extension",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireresponseAttester record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/questionnaireresponse-attester" url = "http://hl7.org/fhir/StructureDefinition/questionnaireresponse-attester";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireresponseAuthor",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireresponseAuthor record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/questionnaireresponse-author" url = "http://hl7.org/fhir/StructureDefinition/questionnaireresponse-author";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireresponseCompletionMode",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireresponseCompletionMode record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/questionnaireresponse-completionMode" url = "http://hl7.org/fhir/StructureDefinition/questionnaireresponse-completionMode";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireresponseReason",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireresponseReason record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/questionnaireresponse-reason" url = "http://hl7.org/fhir/StructureDefinition/questionnaireresponse-reason";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireresponseReviewer",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireresponseReviewer record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/questionnaireresponse-reviewer" url = "http://hl7.org/fhir/StructureDefinition/questionnaireresponse-reviewer";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireresponseSignature",
    baseType: (),
    elements: {
        "valueSignature": {
            name: "valueSignature",
            dataType: r4:Signature,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireresponseSignature record {|
    *r4:SignatureExtension;

    r4:Signature valueSignature;
    "http://hl7.org/fhir/StructureDefinition/questionnaireresponse-signature" url = "http://hl7.org/fhir/StructureDefinition/questionnaireresponse-signature";
|};

@r4:DataTypeDefinition {
    name: "ReferencesContained",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ReferencesContained record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/referencesContained" url = "http://hl7.org/fhir/StructureDefinition/referencesContained";
|};

@r4:DataTypeDefinition {
    name: "Regex",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type Regex record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/regex" url = "http://hl7.org/fhir/StructureDefinition/regex";
|};

@r4:DataTypeDefinition {
    name: "RelativeDate",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 4,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RelativeDate record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/relative-date" url = "http://hl7.org/fhir/StructureDefinition/relative-date";
|};

@r4:DataTypeDefinition {
    name: "RenderedValue",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RenderedValue record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/rendered-value" url = "http://hl7.org/fhir/StructureDefinition/rendered-value";
|};

@r4:DataTypeDefinition {
    name: "RenderingMarkdown",
    baseType: (),
    elements: {
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RenderingMarkdown record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    "http://hl7.org/fhir/StructureDefinition/rendering-markdown" url = "http://hl7.org/fhir/StructureDefinition/rendering-markdown";
|};

@r4:DataTypeDefinition {
    name: "RenderingStyle",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RenderingStyle record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/rendering-style" url = "http://hl7.org/fhir/StructureDefinition/rendering-style";
|};

@r4:DataTypeDefinition {
    name: "RenderingStyleSensitive",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RenderingStyleSensitive record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/rendering-styleSensitive" url = "http://hl7.org/fhir/StructureDefinition/rendering-styleSensitive";
|};

@r4:DataTypeDefinition {
    name: "RenderingXhtml",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RenderingXhtml record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/rendering-xhtml" url = "http://hl7.org/fhir/StructureDefinition/rendering-xhtml";
|};

@r4:DataTypeDefinition {
    name: "Replaces",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type Replaces record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/replaces" url = "http://hl7.org/fhir/StructureDefinition/replaces";
|};

@r4:DataTypeDefinition {
    name: "RequestDoNotPerform",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RequestDoNotPerform record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/request-doNotPerform" url = "http://hl7.org/fhir/StructureDefinition/request-doNotPerform";
|};

@r4:DataTypeDefinition {
    name: "RequestInsurance",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RequestInsurance record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/request-insurance" url = "http://hl7.org/fhir/StructureDefinition/request-insurance";
|};

@r4:DataTypeDefinition {
    name: "RequestPerformerOrder",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RequestPerformerOrder record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org/fhir/StructureDefinition/request-performerOrder" url = "http://hl7.org/fhir/StructureDefinition/request-performerOrder";
|};

@r4:DataTypeDefinition {
    name: "RequestRelevantHistory",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RequestRelevantHistory record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/request-relevantHistory" url = "http://hl7.org/fhir/StructureDefinition/request-relevantHistory";
|};

@r4:DataTypeDefinition {
    name: "RequestReplaces",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RequestReplaces record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/request-replaces" url = "http://hl7.org/fhir/StructureDefinition/request-replaces";
|};

@r4:DataTypeDefinition {
    name: "RequestStatusReason",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RequestStatusReason record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/request-statusReason" url = "http://hl7.org/fhir/StructureDefinition/request-statusReason";
|};

@r4:DataTypeDefinition {
    name: "RequirementsParent",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RequirementsParent record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/requirements-parent" url = "http://hl7.org/fhir/StructureDefinition/requirements-parent";
|};

@r4:DataTypeDefinition {
    name: "ResearchStudySiteRecruitment",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ResearchStudySiteRecruitment record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/researchStudy-siteRecruitment" url = "http://hl7.org/fhir/StructureDefinition/researchStudy-siteRecruitment";
|};

@r4:DataTypeDefinition {
    name: "ResearchStudyStudyRegistration",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ResearchStudyStudyRegistration record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/researchStudy-studyRegistration" url = "http://hl7.org/fhir/StructureDefinition/researchStudy-studyRegistration";
|};

@r4:DataTypeDefinition {
    name: "ResolveAsVersionSpecific",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ResolveAsVersionSpecific record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/resolve-as-version-specific" url = "http://hl7.org/fhir/StructureDefinition/resolve-as-version-specific";
|};

@r4:DataTypeDefinition {
    name: "ResourceApprovalDate",
    baseType: (),
    elements: {
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ResourceApprovalDate record {|
    *r4:DateExtension;

    r4:date valueDate;
    "http://hl7.org/fhir/StructureDefinition/resource-approvalDate" url = "http://hl7.org/fhir/StructureDefinition/resource-approvalDate";
|};

@r4:DataTypeDefinition {
    name: "ResourceEffectivePeriod",
    baseType: (),
    elements: {
        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ResourceEffectivePeriod record {|
    *r4:PeriodExtension;

    r4:Period valuePeriod;
    "http://hl7.org/fhir/StructureDefinition/resource-effectivePeriod" url = "http://hl7.org/fhir/StructureDefinition/resource-effectivePeriod";
|};

@r4:DataTypeDefinition {
    name: "ResourceInstanceDescription",
    baseType: (),
    elements: {
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ResourceInstanceDescription record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    "http://hl7.org/fhir/StructureDefinition/resource-instance-description" url = "http://hl7.org/fhir/StructureDefinition/resource-instance-description";
|};

@r4:DataTypeDefinition {
    name: "ResourceInstanceName",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ResourceInstanceName record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/resource-instance-name" url = "http://hl7.org/fhir/StructureDefinition/resource-instance-name";
|};

@r4:DataTypeDefinition {
    name: "ResourceLastReviewDate",
    baseType: (),
    elements: {
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ResourceLastReviewDate record {|
    *r4:DateExtension;

    r4:date valueDate;
    "http://hl7.org/fhir/StructureDefinition/resource-lastReviewDate" url = "http://hl7.org/fhir/StructureDefinition/resource-lastReviewDate";
|};

@r4:DataTypeDefinition {
    name: "ResourcePertainsToGoal",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ResourcePertainsToGoal record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/resource-pertainsToGoal" url = "http://hl7.org/fhir/StructureDefinition/resource-pertainsToGoal";
|};

@r4:DataTypeDefinition {
    name: "SatisfiesRequirement",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type SatisfiesRequirement record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/satisfies-requirement" url = "http://hl7.org/fhir/StructureDefinition/satisfies-requirement";
|};

@r4:DataTypeDefinition {
    name: "ServicerequestGeneticsItem",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ServicerequestGeneticsItem record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/servicerequest-geneticsItem" url = "http://hl7.org/fhir/StructureDefinition/servicerequest-geneticsItem";
|};

@r4:DataTypeDefinition {
    name: "ServicerequestOrderCallbackPhoneNumber",
    baseType: (),
    elements: {
        "valueContactPoint": {
            name: "valueContactPoint",
            dataType: r4:ContactPoint,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ServicerequestOrderCallbackPhoneNumber record {|
    *r4:ContactPointExtension;

    r4:ContactPoint valueContactPoint;
    "http://hl7.org/fhir/StructureDefinition/servicerequest-order-callback-phone-number" url = "http://hl7.org/fhir/StructureDefinition/servicerequest-order-callback-phone-number";
|};

@r4:DataTypeDefinition {
    name: "ServicerequestPrecondition",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ServicerequestPrecondition record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/servicerequest-precondition" url = "http://hl7.org/fhir/StructureDefinition/servicerequest-precondition";
|};

@r4:DataTypeDefinition {
    name: "ServicerequestQuestionnaireRequest",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ServicerequestQuestionnaireRequest record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/servicerequest-questionnaireRequest" url = "http://hl7.org/fhir/StructureDefinition/servicerequest-questionnaireRequest";
|};

@r4:DataTypeDefinition {
    name: "SpecimenAdditive",
    baseType: (),
    elements: {
        "valueCodeableReference": {
            name: "valueCodeableReference",
            dataType: r4:CodeableReference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type SpecimenAdditive record {|
    *r4:CodeableReferenceExtension;

    r4:CodeableReference valueCodeableReference;
    "http://hl7.org/fhir/StructureDefinition/specimen-additive" url = "http://hl7.org/fhir/StructureDefinition/specimen-additive";
|};

@r4:DataTypeDefinition {
    name: "SpecimenCollectionPriority",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type SpecimenCollectionPriority record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/specimen-collectionPriority" url = "http://hl7.org/fhir/StructureDefinition/specimen-collectionPriority";
|};

@r4:DataTypeDefinition {
    name: "SpecimenIsDryWeight",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type SpecimenIsDryWeight record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/specimen-isDryWeight" url = "http://hl7.org/fhir/StructureDefinition/specimen-isDryWeight";
|};

@r4:DataTypeDefinition {
    name: "SpecimenProcessingTime",
    baseType: (),
    elements: {
        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type SpecimenProcessingTime record {|
    *r4:PeriodExtension;

    r4:Period valuePeriod;
    "http://hl7.org/fhir/StructureDefinition/specimen-processingTime" url = "http://hl7.org/fhir/StructureDefinition/specimen-processingTime";
|};

@r4:DataTypeDefinition {
    name: "SpecimenRejectReason",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type SpecimenRejectReason record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/specimen-reject-reason" url = "http://hl7.org/fhir/StructureDefinition/specimen-reject-reason";
|};

@r4:DataTypeDefinition {
    name: "SpecimenSequenceNumber",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type SpecimenSequenceNumber record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org/fhir/StructureDefinition/specimen-sequenceNumber" url = "http://hl7.org/fhir/StructureDefinition/specimen-sequenceNumber";
|};

@r4:DataTypeDefinition {
    name: "SpecimenSpecialHandling",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type SpecimenSpecialHandling record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/specimen-specialHandling" url = "http://hl7.org/fhir/StructureDefinition/specimen-specialHandling";
|};

@r4:DataTypeDefinition {
    name: "StatisticModelIncludeIf",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: 2,
            isArray: true,
            description: "An Extension",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StatisticModelIncludeIf record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/statistic-model-include-if" url = "http://hl7.org/fhir/StructureDefinition/statistic-model-include-if";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionAncestor",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionAncestor record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-ancestor" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-ancestor";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionApplicableVersion",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionApplicableVersion record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-applicable-version" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-applicable-version";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionCategory",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionCategory record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-category" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-category";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionCodegenSuper",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionCodegenSuper record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-codegen-super" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-codegen-super";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionCompliesWithProfile",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionCompliesWithProfile record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-compliesWithProfile" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-compliesWithProfile";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionConformanceDerivedFrom",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionConformanceDerivedFrom record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-conformance-derivedFrom" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-conformance-derivedFrom";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionDependencies",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionDependencies record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-dependencies" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-dependencies";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionDisplayHint",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionDisplayHint record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-display-hint" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-display-hint";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionExplicitTypeName",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionExplicitTypeName record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionExtensionMeaning",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionExtensionMeaning record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-extension-meaning" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-extension-meaning";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionFhirType",
    baseType: (),
    elements: {
        "valueUrl": {
            name: "valueUrl",
            dataType: r4:urlType,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionFhirType record {|
    *r4:UrlExtension;

    r4:url valueUrl;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionFmm",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionFmm record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionFmmNoWarnings",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionFmmNoWarnings record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm-no-warnings" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm-no-warnings";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionFmmSupport",
    baseType: (),
    elements: {
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionFmmSupport record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm-support" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm-support";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionHierarchy",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionHierarchy record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-hierarchy" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-hierarchy";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionImposeProfile",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionImposeProfile record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-imposeProfile" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-imposeProfile";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionInheritanceControl",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionInheritanceControl record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-inheritance-control" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-inheritance-control";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionInterface",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionInterface record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-interface" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-interface";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionJsonType",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: r4:Extension,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionJsonType record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionNormativeVersion",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionNormativeVersion record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-normative-version" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-normative-version";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionRdfType",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: r4:Extension,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionRdfType record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionSecurityCategory",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionSecurityCategory record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-security-category" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-security-category";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionStandardsStatus",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionStandardsStatus record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionStandardsStatusReason",
    baseType: (),
    elements: {
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionStandardsStatusReason record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status-reason" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status-reason";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionSummary",
    baseType: (),
    elements: {
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionSummary record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-summary" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-summary";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionTableName",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionTableName record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-table-name" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-table-name";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionTemplateStatus",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionTemplateStatus record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-template-status" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-template-status";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionTypeCharacteristics",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionTypeCharacteristics record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-type-characteristics" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-type-characteristics";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionWg",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionWg record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-wg" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-wg";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionXmlNoOrder",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionXmlNoOrder record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-no-order" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-no-order";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionXmlType",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: r4:Extension,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionXmlType record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type" url = "http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type";
|};

@r4:DataTypeDefinition {
    name: "SubjectLocationClassification",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type SubjectLocationClassification record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/subject-locationClassification" url = "http://hl7.org/fhir/StructureDefinition/subject-locationClassification";
|};

@r4:DataTypeDefinition {
    name: "SubscriptionBestEffort",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type SubscriptionBestEffort record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/subscription-best-effort" url = "http://hl7.org/fhir/StructureDefinition/subscription-best-effort";
|};

@r4:DataTypeDefinition {
    name: "TargetConstraint",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 4,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TargetConstraint record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/targetConstraint" url = "http://hl7.org/fhir/StructureDefinition/targetConstraint";
|};

@r4:DataTypeDefinition {
    name: "TargetElement",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TargetElement record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/targetElement" url = "http://hl7.org/fhir/StructureDefinition/targetElement";
|};

@r4:DataTypeDefinition {
    name: "TargetPath",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TargetPath record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/targetPath" url = "http://hl7.org/fhir/StructureDefinition/targetPath";
|};

@r4:DataTypeDefinition {
    name: "TaskCandidateList",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TaskCandidateList record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/task-candidateList" url = "http://hl7.org/fhir/StructureDefinition/task-candidateList";
|};

@r4:DataTypeDefinition {
    name: "TaskReplaces",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TaskReplaces record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/task-replaces" url = "http://hl7.org/fhir/StructureDefinition/task-replaces";
|};

@r4:DataTypeDefinition {
    name: "TerminologyResourceIdentifierMetadata",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TerminologyResourceIdentifierMetadata record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/terminology-resource-identifier-metadata" url = "http://hl7.org/fhir/StructureDefinition/terminology-resource-identifier-metadata";
|};

@r4:DataTypeDefinition {
    name: "Timezone",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type Timezone record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/timezone" url = "http://hl7.org/fhir/StructureDefinition/timezone";
|};

@r4:DataTypeDefinition {
    name: "TimingDayOfMonth",
    baseType: (),
    elements: {
        "valuePositiveInt": {
            name: "valuePositiveInt",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TimingDayOfMonth record {|
    *r4:PositiveIntExtension;

    r4:positiveInt valuePositiveInt;
    "http://hl7.org/fhir/StructureDefinition/timing-dayOfMonth" url = "http://hl7.org/fhir/StructureDefinition/timing-dayOfMonth";
|};

@r4:DataTypeDefinition {
    name: "TimingDaysOfCycle",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TimingDaysOfCycle record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/timing-daysOfCycle" url = "http://hl7.org/fhir/StructureDefinition/timing-daysOfCycle";
|};

@r4:DataTypeDefinition {
    name: "TimingExact",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TimingExact record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/timing-exact" url = "http://hl7.org/fhir/StructureDefinition/timing-exact";
|};

@r4:DataTypeDefinition {
    name: "TimingUncertainDate",
    baseType: (),
    elements: {
        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TimingUncertainDate record {|
    *r4:PeriodExtension;

    r4:Period valuePeriod;
    "http://hl7.org/fhir/StructureDefinition/timing-uncertainDate" url = "http://hl7.org/fhir/StructureDefinition/timing-uncertainDate";
|};

@r4:DataTypeDefinition {
    name: "Translation",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type Translation record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/translation" url = "http://hl7.org/fhir/StructureDefinition/translation";
|};

@r4:DataTypeDefinition {
    name: "TzCode",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TzCode record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/tz-code" url = "http://hl7.org/fhir/StructureDefinition/tz-code";
|};

@r4:DataTypeDefinition {
    name: "TzOffset",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TzOffset record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/tz-offset" url = "http://hl7.org/fhir/StructureDefinition/tz-offset";
|};

@r4:DataTypeDefinition {
    name: "UncertainPeriod",
    baseType: (),
    elements: {
        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type UncertainPeriod record {|
    *r4:PeriodExtension;

    r4:Period valuePeriod;
    "http://hl7.org/fhir/StructureDefinition/uncertainPeriod" url = "http://hl7.org/fhir/StructureDefinition/uncertainPeriod";
|};

@r4:DataTypeDefinition {
    name: "UsagecontextGroup",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type UsagecontextGroup record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/usagecontext-group" url = "http://hl7.org/fhir/StructureDefinition/usagecontext-group";
|};

@r4:DataTypeDefinition {
    name: "ValuesetActivityStatusDate",
    baseType: (),
    elements: {
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetActivityStatusDate record {|
    *r4:DateExtension;

    r4:date valueDate;
    "http://hl7.org/fhir/StructureDefinition/valueset-activityStatusDate" url = "http://hl7.org/fhir/StructureDefinition/valueset-activityStatusDate";
|};

@r4:DataTypeDefinition {
    name: "ValuesetAuthor",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },

        "valueContactDetail": {
            name: "valueContactDetail",
            dataType: r4:ContactDetail,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetAuthor record {|
    *r4:ContactDetailExtension;

    "http://hl7.org/fhir/StructureDefinition/valueset-author" url = "http://hl7.org/fhir/StructureDefinition/valueset-author";
    r4:ContactDetail valueContactDetail;
|};

@r4:DataTypeDefinition {
    name: "ValuesetAuthoritativeSource",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetAuthoritativeSource record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/valueset-authoritativeSource" url = "http://hl7.org/fhir/StructureDefinition/valueset-authoritativeSource";
|};

@r4:DataTypeDefinition {
    name: "ValuesetCaseSensitive",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetCaseSensitive record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/valueset-caseSensitive" url = "http://hl7.org/fhir/StructureDefinition/valueset-caseSensitive";
|};

@r4:DataTypeDefinition {
    name: "ValuesetComposeCreatedBy",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetComposeCreatedBy record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/valueset-compose-createdBy" url = "http://hl7.org/fhir/StructureDefinition/valueset-compose-createdBy";
|};

@r4:DataTypeDefinition {
    name: "ValuesetComposeCreationDate",
    baseType: (),
    elements: {
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetComposeCreationDate record {|
    *r4:DateExtension;

    r4:date valueDate;
    "http://hl7.org/fhir/StructureDefinition/valueset-compose-creationDate" url = "http://hl7.org/fhir/StructureDefinition/valueset-compose-creationDate";
|};

@r4:DataTypeDefinition {
    name: "ValuesetComposeIncludeValueSetTitle",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetComposeIncludeValueSetTitle record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/valueset-compose-include-valueSetTitle" url = "http://hl7.org/fhir/StructureDefinition/valueset-compose-include-valueSetTitle";
|};

@r4:DataTypeDefinition {
    name: "ValuesetConceptComments",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetConceptComments record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/valueset-concept-comments" url = "http://hl7.org/fhir/StructureDefinition/valueset-concept-comments";
|};

@r4:DataTypeDefinition {
    name: "ValuesetConceptDefinition",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetConceptDefinition record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/valueset-concept-definition" url = "http://hl7.org/fhir/StructureDefinition/valueset-concept-definition";
|};

@r4:DataTypeDefinition {
    name: "ValuesetConceptOrder",
    baseType: (),
    elements: {
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetConceptOrder record {|
    *r4:IntegerExtension;

    r4:integer valueInteger;
    "http://hl7.org/fhir/StructureDefinition/valueset-conceptOrder" url = "http://hl7.org/fhir/StructureDefinition/valueset-conceptOrder";
|};

@r4:DataTypeDefinition {
    name: "ValuesetDeprecated",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetDeprecated record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/valueset-deprecated" url = "http://hl7.org/fhir/StructureDefinition/valueset-deprecated";
|};

@r4:DataTypeDefinition {
    name: "ValuesetEffectiveDate",
    baseType: (),
    elements: {
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetEffectiveDate record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    "http://hl7.org/fhir/StructureDefinition/valueset-effectiveDate" url = "http://hl7.org/fhir/StructureDefinition/valueset-effectiveDate";
|};

@r4:DataTypeDefinition {
    name: "ValuesetExpandGroup",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetExpandGroup record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/valueset-expand-group" url = "http://hl7.org/fhir/StructureDefinition/valueset-expand-group";
|};

@r4:DataTypeDefinition {
    name: "ValuesetExpandRules",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetExpandRules record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/valueset-expand-rules" url = "http://hl7.org/fhir/StructureDefinition/valueset-expand-rules";
|};

@r4:DataTypeDefinition {
    name: "ValuesetExpansionSource",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetExpansionSource record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/valueset-expansionSource" url = "http://hl7.org/fhir/StructureDefinition/valueset-expansionSource";
|};

@r4:DataTypeDefinition {
    name: "ValuesetExpirationDate",
    baseType: (),
    elements: {
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetExpirationDate record {|
    *r4:DateExtension;

    r4:date valueDate;
    "http://hl7.org/fhir/StructureDefinition/valueset-expirationDate" url = "http://hl7.org/fhir/StructureDefinition/valueset-expirationDate";
|};

@r4:DataTypeDefinition {
    name: "ValuesetExpression",
    baseType: (),
    elements: {
        "valueExpression": {
            name: "valueExpression",
            dataType: r4:Expression,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetExpression record {|
    *r4:ExpressionExtension;

    r4:Expression valueExpression;
    "http://hl7.org/fhir/StructureDefinition/valueset-expression" url = "http://hl7.org/fhir/StructureDefinition/valueset-expression";
|};

@r4:DataTypeDefinition {
    name: "ValuesetExtensible",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetExtensible record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/valueset-extensible" url = "http://hl7.org/fhir/StructureDefinition/valueset-extensible";
|};

@r4:DataTypeDefinition {
    name: "ValuesetKeyWord",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetKeyWord record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/valueset-keyWord" url = "http://hl7.org/fhir/StructureDefinition/valueset-keyWord";
|};

@r4:DataTypeDefinition {
    name: "ValuesetLabel",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetLabel record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/valueset-label" url = "http://hl7.org/fhir/StructureDefinition/valueset-label";
|};

@r4:DataTypeDefinition {
    name: "ValuesetMap",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetMap record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/valueset-map" url = "http://hl7.org/fhir/StructureDefinition/valueset-map";
|};

@r4:DataTypeDefinition {
    name: "ValuesetOtherName",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetOtherName record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/valueset-otherName" url = "http://hl7.org/fhir/StructureDefinition/valueset-otherName";
|};

@r4:DataTypeDefinition {
    name: "ValuesetOtherTitle",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetOtherTitle record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/valueset-otherTitle" url = "http://hl7.org/fhir/StructureDefinition/valueset-otherTitle";
|};

@r4:DataTypeDefinition {
    name: "ValuesetParameterSource",
    baseType: (),
    elements: {
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetParameterSource record {|
    *r4:CodeExtension;

    r4:code valueCode;
    "http://hl7.org/fhir/StructureDefinition/valueset-parameterSource" url = "http://hl7.org/fhir/StructureDefinition/valueset-parameterSource";
|};

@r4:DataTypeDefinition {
    name: "ValuesetReference",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetReference record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/valueset-reference" url = "http://hl7.org/fhir/StructureDefinition/valueset-reference";
|};

@r4:DataTypeDefinition {
    name: "ValuesetRulesText",
    baseType: (),
    elements: {
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetRulesText record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    "http://hl7.org/fhir/StructureDefinition/valueset-rules-text" url = "http://hl7.org/fhir/StructureDefinition/valueset-rules-text";
|};

@r4:DataTypeDefinition {
    name: "ValuesetSelectByMap",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetSelectByMap record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/valueset-select-by-map" url = "http://hl7.org/fhir/StructureDefinition/valueset-select-by-map";
|};

@r4:DataTypeDefinition {
    name: "ValuesetSourceReference",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetSourceReference record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/valueset-sourceReference" url = "http://hl7.org/fhir/StructureDefinition/valueset-sourceReference";
|};

@r4:DataTypeDefinition {
    name: "ValuesetSpecialStatus",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetSpecialStatus record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/valueset-special-status" url = "http://hl7.org/fhir/StructureDefinition/valueset-special-status";
|};

@r4:DataTypeDefinition {
    name: "ValuesetSteward",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },

        "valueContactDetail": {
            name: "valueContactDetail",
            dataType: r4:ContactDetail,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetSteward record {|
    *r4:ContactDetailExtension;

    "http://hl7.org/fhir/StructureDefinition/valueset-steward" url = "http://hl7.org/fhir/StructureDefinition/valueset-steward";
    r4:ContactDetail valueContactDetail;
|};

@r4:DataTypeDefinition {
    name: "ValuesetSupplement",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetSupplement record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/valueset-supplement" url = "http://hl7.org/fhir/StructureDefinition/valueset-supplement";
|};

@r4:DataTypeDefinition {
    name: "ValuesetSystem",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetSystem record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/valueset-system" url = "http://hl7.org/fhir/StructureDefinition/valueset-system";
|};

@r4:DataTypeDefinition {
    name: "ValuesetSystemName",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetSystemName record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/valueset-systemName" url = "http://hl7.org/fhir/StructureDefinition/valueset-systemName";
|};

@r4:DataTypeDefinition {
    name: "ValuesetSystemRef",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetSystemRef record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/valueset-systemRef" url = "http://hl7.org/fhir/StructureDefinition/valueset-systemRef";
|};

@r4:DataTypeDefinition {
    name: "ValuesetToocostly",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetToocostly record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/valueset-toocostly" url = "http://hl7.org/fhir/StructureDefinition/valueset-toocostly";
|};

@r4:DataTypeDefinition {
    name: "ValuesetTrustedExpansion",
    baseType: (),
    elements: {
        "valueUrl": {
            name: "valueUrl",
            dataType: r4:urlType,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetTrustedExpansion record {|
    *r4:UrlExtension;

    r4:url valueUrl;
    "http://hl7.org/fhir/StructureDefinition/valueset-trusted-expansion" url = "http://hl7.org/fhir/StructureDefinition/valueset-trusted-expansion";
|};

@r4:DataTypeDefinition {
    name: "ValuesetUnclosed",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetUnclosed record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    "http://hl7.org/fhir/StructureDefinition/valueset-unclosed" url = "http://hl7.org/fhir/StructureDefinition/valueset-unclosed";
|};

@r4:DataTypeDefinition {
    name: "ValuesetUsage",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 2,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetUsage record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/valueset-usage" url = "http://hl7.org/fhir/StructureDefinition/valueset-usage";
|};

@r4:DataTypeDefinition {
    name: "ValuesetWarning",
    baseType: (),
    elements: {
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetWarning record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    "http://hl7.org/fhir/StructureDefinition/valueset-warning" url = "http://hl7.org/fhir/StructureDefinition/valueset-warning";
|};

@r4:DataTypeDefinition {
    name: "ValuesetWorkflowStatus",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetWorkflowStatus record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/valueset-workflowStatus" url = "http://hl7.org/fhir/StructureDefinition/valueset-workflowStatus";
|};

@r4:DataTypeDefinition {
    name: "ValuesetWorkflowStatusDescription",
    baseType: (),
    elements: {
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetWorkflowStatusDescription record {|
    *r4:StringExtension;

    string valueString;
    "http://hl7.org/fhir/StructureDefinition/valueset-workflowStatusDescription" url = "http://hl7.org/fhir/StructureDefinition/valueset-workflowStatusDescription";
|};

@r4:DataTypeDefinition {
    name: "Variable",
    baseType: (),
    elements: {
        "valueExpression": {
            name: "valueExpression",
            dataType: r4:Expression,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type Variable record {|
    *r4:ExpressionExtension;

    r4:Expression valueExpression;
    "http://hl7.org/fhir/StructureDefinition/variable" url = "http://hl7.org/fhir/StructureDefinition/variable";
|};

@r4:DataTypeDefinition {
    name: "VersionSpecificUse",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type VersionSpecificUse record {|
    *r4:ExtensionExtension;

    "http://hl7.org/fhir/StructureDefinition/version-specific-use" url = "http://hl7.org/fhir/StructureDefinition/version-specific-use";
|};

@r4:DataTypeDefinition {
    name: "VersionSpecificValue",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 3,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Extension.extension"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type VersionSpecificValue record {|
    *r4:ExtensionExtension;

    r4:Extension[] extension;
    "http://hl7.org/fhir/StructureDefinition/version-specific-value" url = "http://hl7.org/fhir/StructureDefinition/version-specific-value";
|};

@r4:DataTypeDefinition {
    name: "WorkflowAdheresTo",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowAdheresTo record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/workflow-adheresTo" url = "http://hl7.org/fhir/StructureDefinition/workflow-adheresTo";
|};

@r4:DataTypeDefinition {
    name: "WorkflowBarrier",
    baseType: (),
    elements: {
        "valueCodeableReference": {
            name: "valueCodeableReference",
            dataType: r4:CodeableReference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowBarrier record {|
    *r4:CodeableReferenceExtension;

    r4:CodeableReference valueCodeableReference;
    "http://hl7.org/fhir/StructureDefinition/workflow-barrier" url = "http://hl7.org/fhir/StructureDefinition/workflow-barrier";
|};

@r4:DataTypeDefinition {
    name: "WorkflowCompliesWith",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowCompliesWith record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/workflow-compliesWith" url = "http://hl7.org/fhir/StructureDefinition/workflow-compliesWith";
|};

@r4:DataTypeDefinition {
    name: "WorkflowEpisodeOfCare",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowEpisodeOfCare record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/workflow-episodeOfCare" url = "http://hl7.org/fhir/StructureDefinition/workflow-episodeOfCare";
|};

@r4:DataTypeDefinition {
    name: "WorkflowFollowOnOf",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowFollowOnOf record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/workflow-followOnOf" url = "http://hl7.org/fhir/StructureDefinition/workflow-followOnOf";
|};

@r4:DataTypeDefinition {
    name: "WorkflowGeneratedFrom",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowGeneratedFrom record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/workflow-generatedFrom" url = "http://hl7.org/fhir/StructureDefinition/workflow-generatedFrom";
|};

@r4:DataTypeDefinition {
    name: "WorkflowInstantiatesCanonical",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowInstantiatesCanonical record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/workflow-instantiatesCanonical" url = "http://hl7.org/fhir/StructureDefinition/workflow-instantiatesCanonical";
|};

@r4:DataTypeDefinition {
    name: "WorkflowInstantiatesUri",
    baseType: (),
    elements: {
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowInstantiatesUri record {|
    *r4:UriExtension;

    r4:uri valueUri;
    "http://hl7.org/fhir/StructureDefinition/workflow-instantiatesUri" url = "http://hl7.org/fhir/StructureDefinition/workflow-instantiatesUri";
|};

@r4:DataTypeDefinition {
    name: "WorkflowProtectiveFactor",
    baseType: (),
    elements: {
        "valueCodeableReference": {
            name: "valueCodeableReference",
            dataType: r4:CodeableReference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowProtectiveFactor record {|
    *r4:CodeableReferenceExtension;

    r4:CodeableReference valueCodeableReference;
    "http://hl7.org/fhir/StructureDefinition/workflow-protectiveFactor" url = "http://hl7.org/fhir/StructureDefinition/workflow-protectiveFactor";
|};

@r4:DataTypeDefinition {
    name: "WorkflowReason",
    baseType: (),
    elements: {
        "valueCodeableReference": {
            name: "valueCodeableReference",
            dataType: r4:CodeableReference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowReason record {|
    *r4:CodeableReferenceExtension;

    r4:CodeableReference valueCodeableReference;
    "http://hl7.org/fhir/StructureDefinition/workflow-reason" url = "http://hl7.org/fhir/StructureDefinition/workflow-reason";
|};

@r4:DataTypeDefinition {
    name: "WorkflowReasonCode",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowReasonCode record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    "http://hl7.org/fhir/StructureDefinition/workflow-reasonCode" url = "http://hl7.org/fhir/StructureDefinition/workflow-reasonCode";
|};

@r4:DataTypeDefinition {
    name: "WorkflowReasonReference",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowReasonReference record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/workflow-reasonReference" url = "http://hl7.org/fhir/StructureDefinition/workflow-reasonReference";
|};

@r4:DataTypeDefinition {
    name: "WorkflowRelatedArtifact",
    baseType: (),
    elements: {
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },

        "valueRelatedArtifact": {
            name: "valueRelatedArtifact",
            dataType: r4:RelatedArtifact,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowRelatedArtifact record {|
    *r4:RelatedArtifactExtension;

    "http://hl7.org/fhir/StructureDefinition/workflow-relatedArtifact" url = "http://hl7.org/fhir/StructureDefinition/workflow-relatedArtifact";
    r4:RelatedArtifact valueRelatedArtifact;
|};

@r4:DataTypeDefinition {
    name: "WorkflowReleaseDate",
    baseType: (),
    elements: {
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowReleaseDate record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    "http://hl7.org/fhir/StructureDefinition/workflow-releaseDate" url = "http://hl7.org/fhir/StructureDefinition/workflow-releaseDate";
|};

@r4:DataTypeDefinition {
    name: "WorkflowResearchStudy",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowResearchStudy record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/workflow-researchStudy" url = "http://hl7.org/fhir/StructureDefinition/workflow-researchStudy";
|};

@r4:DataTypeDefinition {
    name: "WorkflowShallComplyWith",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowShallComplyWith record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/workflow-shallComplyWith" url = "http://hl7.org/fhir/StructureDefinition/workflow-shallComplyWith";
|};

@r4:DataTypeDefinition {
    name: "WorkflowSupportingInfo",
    baseType: (),
    elements: {
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowSupportingInfo record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    "http://hl7.org/fhir/StructureDefinition/workflow-supportingInfo" url = "http://hl7.org/fhir/StructureDefinition/workflow-supportingInfo";
|};

@r4:DataTypeDefinition {
    name: "WorkflowTriggeredBy",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type WorkflowTriggeredBy record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    "http://hl7.org/fhir/StructureDefinition/workflow-triggeredBy" url = "http://hl7.org/fhir/StructureDefinition/workflow-triggeredBy";
|};

@r4:DataTypeDefinition {
    name: "ImplementationguideSourceFileFile",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "file.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "file.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "file.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "file.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ImplementationguideSourceFileFile record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    string id?;
    "file" url = "file";
|};

@r4:DataTypeDefinition {
    name: "ImplementationguideSourceFileKeepAsResource",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "keepAsResource.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "keepAsResource.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "keepAsResource.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "keepAsResource.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ImplementationguideSourceFileKeepAsResource record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    string id?;
    "keepAsResource" url = "keepAsResource";
|};

@r4:DataTypeDefinition {
    name: "ImplementationguideSourceFileLocation",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "location.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "location.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "location.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "location.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ImplementationguideSourceFileLocation record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "location" url = "location";
|};

@r4:DataTypeDefinition {
    name: "IndividualGenderIdentityComment",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "comment.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "comment.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "comment.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "comment.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualGenderIdentityComment record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "comment" url = "comment";
|};

@r4:DataTypeDefinition {
    name: "IndividualGenderIdentityPeriod",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "period.extension"
        },

        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "period.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "period.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "period.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualGenderIdentityPeriod record {|
    *r4:PeriodExtension;

    r4:Period valuePeriod;
    string id?;
    "period" url = "period";
|};

@r4:DataTypeDefinition {
    name: "IndividualGenderIdentityValue",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "value.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "value.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "value.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualGenderIdentityValue record {|
    *r4:Base64BinaryExtension;

    r4:CodeableConcept valueCodeableConcept;
    string valueString;
    r4:Period valuePeriod;
    string id?;
    "value" url = "value";
|};

@r4:DataTypeDefinition {
    name: "IndividualPronounsComment",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "comment.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "comment.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "comment.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "comment.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualPronounsComment record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "comment" url = "comment";
|};

@r4:DataTypeDefinition {
    name: "IndividualPronounsPeriod",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "period.extension"
        },

        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "period.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "period.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "period.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualPronounsPeriod record {|
    *r4:PeriodExtension;

    r4:Period valuePeriod;
    string id?;
    "period" url = "period";
|};

@r4:DataTypeDefinition {
    name: "IndividualPronounsValue",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "value.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "value.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "value.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualPronounsValue record {|
    *r4:Base64BinaryExtension;

    r4:CodeableConcept valueCodeableConcept;
    string valueString;
    r4:Period valuePeriod;
    string id?;
    "value" url = "value";
|};

@r4:DataTypeDefinition {
    name: "IndividualRecordedSexOrGenderAcquisitionDate",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "acquisitionDate.extension"
        },

        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "acquisitionDate.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "acquisitionDate.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "acquisitionDate.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualRecordedSexOrGenderAcquisitionDate record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    string id?;
    "acquisitionDate" url = "acquisitionDate";
|};

@r4:DataTypeDefinition {
    name: "IndividualRecordedSexOrGenderComment",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "comment.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "comment.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "comment.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "comment.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualRecordedSexOrGenderComment record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "comment" url = "comment";
|};

@r4:DataTypeDefinition {
    name: "IndividualRecordedSexOrGenderEffectivePeriod",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "effectivePeriod.extension"
        },

        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "effectivePeriod.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "effectivePeriod.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "effectivePeriod.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualRecordedSexOrGenderEffectivePeriod record {|
    *r4:PeriodExtension;

    r4:Period valuePeriod?;
    string id?;
    "effectivePeriod" url = "effectivePeriod";
|};

@r4:DataTypeDefinition {
    name: "IndividualRecordedSexOrGenderGenderElementQualifier",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "genderElementQualifier.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "genderElementQualifier.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "genderElementQualifier.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "genderElementQualifier.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualRecordedSexOrGenderGenderElementQualifier record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    string id?;
    "genderElementQualifier" url = "genderElementQualifier";
|};

@r4:DataTypeDefinition {
    name: "IndividualRecordedSexOrGenderJurisdiction",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "jurisdiction.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "jurisdiction.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "jurisdiction.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "jurisdiction.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualRecordedSexOrGenderJurisdiction record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "jurisdiction" url = "jurisdiction";
|};

@r4:DataTypeDefinition {
    name: "IndividualRecordedSexOrGenderSource",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "source.value[x]"
        },

        "sourceField": {
            name: "sourceField",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "The name of the field within the source document where this sex or gender property is initially recorded.",
            path: "source.sourceField"
        },

        "sourceDocument": {
            name: "sourceDocument",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "The reference to the source document or the code representing the type of document where this sex or gender property is initially recorded.",
            path: "source.sourceDocument"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "source.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "source.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "source.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "source.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualRecordedSexOrGenderSource record {|
    *r4:StringExtension;

    r4:CodeableConcept valueCodeableConcept;
    r4:Extension[] sourceField?;
    r4:Extension[] sourceDocument?;
    string valueString;
    string id?;
    "source" url = "source";
|};

@r4:DataTypeDefinition {
    name: "IndividualRecordedSexOrGenderSourceDocument",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "sourceDocument.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "sourceDocument.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "sourceDocument.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "sourceDocument.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualRecordedSexOrGenderSourceDocument record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "sourceDocument" url = "sourceDocument";
|};

@r4:DataTypeDefinition {
    name: "IndividualRecordedSexOrGenderSourceField",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "sourceField.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "sourceField.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "sourceField.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "sourceField.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualRecordedSexOrGenderSourceField record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "sourceField" url = "sourceField";
|};

@r4:DataTypeDefinition {
    name: "IndividualRecordedSexOrGenderType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "type.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "type.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualRecordedSexOrGenderType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "type" url = "type";
|};

@r4:DataTypeDefinition {
    name: "IndividualRecordedSexOrGenderValue",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "value.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "value.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "value.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type IndividualRecordedSexOrGenderValue record {|
    *r4:Base64BinaryExtension;

    r4:CodeableConcept valueCodeableConcept;
    boolean valueBoolean;
    string valueString;
    r4:Period valuePeriod?;
    r4:dateTime valueDateTime;
    string id?;
    "value" url = "value";
|};

@r4:DataTypeDefinition {
    name: "MedicationManufacturingBatchAdditionalInformation",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "additionalInformation.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "additionalInformation.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "additionalInformation.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "additionalInformation.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationManufacturingBatchAdditionalInformation record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "additionalInformation" url = "additionalInformation";
|};

@r4:DataTypeDefinition {
    name: "MedicationManufacturingBatchAssignedManufacturer",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "assignedManufacturer.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "assignedManufacturer.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "assignedManufacturer.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "assignedManufacturer.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationManufacturingBatchAssignedManufacturer record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    string id?;
    "assignedManufacturer" url = "assignedManufacturer";
|};

@r4:DataTypeDefinition {
    name: "MedicationManufacturingBatchBatchQuantity",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "batchQuantity.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "batchQuantity.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "batchQuantity.url"
        },

        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "batchQuantity.value[x]"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationManufacturingBatchBatchQuantity record {|
    *r4:QuantityExtension;

    string id?;
    "batchQuantity" url = "batchQuantity";
    r4:Quantity valueQuantity;
|};

@r4:DataTypeDefinition {
    name: "MedicationManufacturingBatchBatchUtilization",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "batchUtilization.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "batchUtilization.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "batchUtilization.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "batchUtilization.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationManufacturingBatchBatchUtilization record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "batchUtilization" url = "batchUtilization";
|};

@r4:DataTypeDefinition {
    name: "MedicationManufacturingBatchClosureSystemDescription",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "closureSystemDescription.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "closureSystemDescription.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "closureSystemDescription.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "closureSystemDescription.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationManufacturingBatchClosureSystemDescription record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "closureSystemDescription" url = "closureSystemDescription";
|};

@r4:DataTypeDefinition {
    name: "MedicationManufacturingBatchClosureType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "closureType.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "closureType.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "closureType.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "closureType.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationManufacturingBatchClosureType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "closureType" url = "closureType";
|};

@r4:DataTypeDefinition {
    name: "MedicationManufacturingBatchContainer",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "container.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "container.value[x]"
        },

        "valueRatio": {
            name: "valueRatio",
            dataType: r4:Ratio,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "container.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "container.extension"
        },

        "quantity": {
            name: "quantity",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Amount or volume of the drug product in the container. Expressed as a ratio of the amount of drug per volume of container.",
            path: "container.quantity"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "container.value[x]"
        },

        "closureSystemDescription": {
            name: "closureSystemDescription",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "A description of the sum of container closure system (CCS) components that together contain and protect the dosage form or drug substance.",
            path: "container.closureSystemDescription"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "container.id"
        },

        "lotNumber": {
            name: "lotNumber",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "A combination of letters, numbers, or symbols, or any combination of them to uniquely identify the container's manufacturing lot.",
            path: "container.lotNumber"
        },

        "'type": {
            name: "'type",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "The kind of container that drug substances and finished dosage forms are contained in, which could include both the immediate (or primary) and secondary containers.",
            path: "container.type"
        },

        "closureType": {
            name: "closureType",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "The kind of closures used for the container in which the drug substances and finished dosage forms are stored.",
            path: "container.closureType"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "container.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationManufacturingBatchContainer record {|
    *r4:Base64BinaryExtension;

    r4:CodeableConcept valueCodeableConcept;
    r4:Ratio valueRatio;
    r4:Extension[] extension?;
    r4:Extension[] quantity?;
    string valueString;
    r4:Extension[] closureSystemDescription?;
    string id?;
    r4:Extension[] lotNumber?;
    r4:Extension[] 'type?;
    r4:Extension[] closureType?;
    "lotNumber" url = "lotNumber";
|};

@r4:DataTypeDefinition {
    name: "MedicationManufacturingBatchExpirationDateClassification",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "expirationDateClassification.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "expirationDateClassification.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "expirationDateClassification.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "expirationDateClassification.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationManufacturingBatchExpirationDateClassification record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "expirationDateClassification" url = "expirationDateClassification";
|};

@r4:DataTypeDefinition {
    name: "MedicationManufacturingBatchLotNumber",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "lotNumber.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "lotNumber.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "lotNumber.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "lotNumber.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationManufacturingBatchLotNumber record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "lotNumber" url = "lotNumber";
|};

@r4:DataTypeDefinition {
    name: "MedicationManufacturingBatchManufacturingDate",
    baseType: (),
    elements: {
        "manufacturingDateClassification": {
            name: "manufacturingDateClassification",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "A code that provides a rationale for the selection of the manufacturing date.",
            path: "manufacturingDate.manufacturingDateClassification"
        },

        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "manufacturingDate.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "manufacturingDate.extension"
        },

        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "manufacturingDate.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "manufacturingDate.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "manufacturingDate.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationManufacturingBatchManufacturingDate record {|
    *r4:CodeableConceptExtension;

    r4:Extension[] manufacturingDateClassification?;
    r4:CodeableConcept valueCodeableConcept;
    r4:dateTime valueDateTime;
    string id?;
    "manufacturingDate" url = "manufacturingDate";
|};

@r4:DataTypeDefinition {
    name: "MedicationManufacturingBatchManufacturingDateClassification",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "manufacturingDateClassification.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "manufacturingDateClassification.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "manufacturingDateClassification.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "manufacturingDateClassification.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationManufacturingBatchManufacturingDateClassification record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "manufacturingDateClassification" url = "manufacturingDateClassification";
|};

@r4:DataTypeDefinition {
    name: "MedicationManufacturingBatchQuantity",
    baseType: (),
    elements: {
        "valueRatio": {
            name: "valueRatio",
            dataType: r4:Ratio,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "quantity.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "quantity.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "quantity.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "quantity.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationManufacturingBatchQuantity record {|
    *r4:RatioExtension;

    r4:Ratio valueRatio;
    string id?;
    "quantity" url = "quantity";
|};

@r4:DataTypeDefinition {
    name: "MedicationManufacturingBatchType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "type.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "type.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type MedicationManufacturingBatchType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "type" url = "type";
|};

@r4:DataTypeDefinition {
    name: "NoFixedAddressValueBoolean",
    baseType: (),
    elements: {
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type NoFixedAddressValueBoolean record {|
    *r4:ExtensionExtension;

|};

@r4:DataTypeDefinition {
    name: "OauthUrisAuthorize",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "authorize.extension"
        },

        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "authorize.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "authorize.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "authorize.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OauthUrisAuthorize record {|
    *r4:UriExtension;

    r4:uri valueUri;
    string id?;
    "authorize" url = "authorize";
|};

@r4:DataTypeDefinition {
    name: "OauthUrisManage",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "manage.extension"
        },

        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "manage.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "manage.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "manage.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OauthUrisManage record {|
    *r4:UriExtension;

    r4:uri valueUri;
    string id?;
    "manage" url = "manage";
|};

@r4:DataTypeDefinition {
    name: "OauthUrisRegister",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "register.extension"
        },

        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "register.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "register.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "register.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OauthUrisRegister record {|
    *r4:UriExtension;

    r4:uri valueUri;
    string id?;
    "register" url = "register";
|};

@r4:DataTypeDefinition {
    name: "OauthUrisToken",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "token.extension"
        },

        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "token.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "token.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "token.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OauthUrisToken record {|
    *r4:UriExtension;

    r4:uri valueUri;
    string id?;
    "token" url = "token";
|};

@r4:DataTypeDefinition {
    name: "ObligationActor",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "actor.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "actor.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "actor.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "actor.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObligationActor record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    string id?;
    "actor" url = "actor";
|};

@r4:DataTypeDefinition {
    name: "ObligationCode",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "code.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "code.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "code.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "code.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObligationCode record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "code" url = "code";
|};

@r4:DataTypeDefinition {
    name: "ObligationDocumentation",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "documentation.extension"
        },

        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "documentation.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "documentation.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "documentation.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObligationDocumentation record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    string id?;
    "documentation" url = "documentation";
|};

@r4:DataTypeDefinition {
    name: "ObligationElementId",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "elementId.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "elementId.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "elementId.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "elementId.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObligationElementId record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "elementId" url = "elementId";
|};

@r4:DataTypeDefinition {
    name: "ObligationFilter",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "filter.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "filter.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "filter.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "filter.url"
        },

        "filterDocumentation": {
            name: "filterDocumentation",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "Documents the FHIRPath expression for the benefit of users who are not familiar with FHIRPath.",
            path: "filter.filterDocumentation"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObligationFilter record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "filter" url = "filter";
    r4:Extension[] filterDocumentation?;
|};

@r4:DataTypeDefinition {
    name: "ObligationFilterDocumentation",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "filterDocumentation.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "filterDocumentation.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "filterDocumentation.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "filterDocumentation.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObligationFilterDocumentation record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "filterDocumentation" url = "filterDocumentation";
|};

@r4:DataTypeDefinition {
    name: "ObligationName",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "name.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "name.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "name.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "name.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObligationName record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "name" url = "name";
|};

@r4:DataTypeDefinition {
    name: "ObligationProcess",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "process.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "process.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "process.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "process.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObligationProcess record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    string id?;
    "process" url = "process";
|};

@r4:DataTypeDefinition {
    name: "ObligationsProfileActor",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "actor.extension"
        },

        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "actor.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "actor.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "actor.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObligationsProfileActor record {|
    *r4:UriExtension;

    r4:uri valueUri;
    string id?;
    "actor" url = "actor";
|};

@r4:DataTypeDefinition {
    name: "ObligationsProfileProfile",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "profile.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "profile.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "profile.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "profile.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObligationsProfileProfile record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    string id?;
    "profile" url = "profile";
|};

@r4:DataTypeDefinition {
    name: "ObligationUsage",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "usage.extension"
        },

        "valueUsageContext": {
            name: "valueUsageContext",
            dataType: r4:UsageContext,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "usage.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "usage.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "usage.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObligationUsage record {|
    *r4:UsageContextExtension;

    r4:UsageContext valueUsageContext;
    string id?;
    "usage" url = "usage";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsAlleleFrequency",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "Frequency.extension"
        },

        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Frequency.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Frequency.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Frequency.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsAlleleFrequency record {|
    *r4:DecimalExtension;

    decimal valueDecimal;
    string id?;
    "Frequency" url = "Frequency";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsAlleleName",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Name.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "Name.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Name.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Name.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsAlleleName record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "Name" url = "Name";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsAlleleState",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "State.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "State.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "State.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "State.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsAlleleState record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "State" url = "State";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsAminoAcidChangeName",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Name.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "Name.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Name.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Name.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsAminoAcidChangeName record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "Name" url = "Name";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsAminoAcidChangeType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Type.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "Type.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsAminoAcidChangeType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "Type" url = "Type";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsAncestryName",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Name.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "Name.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Name.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Name.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsAncestryName record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "Name" url = "Name";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsAncestryPercentage",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "Percentage.extension"
        },

        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Percentage.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Percentage.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Percentage.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsAncestryPercentage record {|
    *r4:DecimalExtension;

    decimal valueDecimal;
    string id?;
    "Percentage" url = "Percentage";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsAncestrySource",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Source.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "Source.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Source.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Source.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsAncestrySource record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "Source" url = "Source";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsPhaseSetId",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "Id.extension"
        },

        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Id.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Id.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Id.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsPhaseSetId record {|
    *r4:UriExtension;

    r4:uri valueUri;
    string id?;
    "Id" url = "Id";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsPhaseSetMolecularSequence",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "MolecularSequence.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "MolecularSequence.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "MolecularSequence.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "MolecularSequence.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsPhaseSetMolecularSequence record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    string id?;
    "MolecularSequence" url = "MolecularSequence";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsVariantId",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Id.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "Id.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Id.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Id.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsVariantId record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "Id" url = "Id";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsVariantName",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Name.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "Name.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Name.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Name.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsVariantName record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "Name" url = "Name";
|};

@r4:DataTypeDefinition {
    name: "ObservationGeneticsVariantType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "Type.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "Type.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationGeneticsVariantType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "Type" url = "Type";
|};

@r4:DataTypeDefinition {
    name: "ObservationVSubidGroup",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "group.extension"
        },

        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "group.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "group.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "group.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationVSubidGroup record {|
    *r4:DecimalExtension;

    decimal valueDecimal;
    string id?;
    "group" url = "group";
|};

@r4:DataTypeDefinition {
    name: "ObservationVSubidIdentifier",
    baseType: (),
    elements: {
        "original-sub-identifier": {
            name: "original_sub_identifier",
            dataType: r4:Extension,
            min: 0,
            max: 1,
            isArray: true,
            description: "The Original Sub-Identifier component represents the original data type used in OBX4 to enable backwards compatibility to continue use of the original format to provide OBX segment grouping.",
            path: "identifier.original-sub-identifier"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "identifier.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "identifier.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "identifier.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "identifier.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationVSubidIdentifier record {|
    *r4:StringExtension;

    r4:Extension[] original_sub_identifier?;
    string valueString;
    string id?;
    "original-sub-identifier" url = "original-sub-identifier";
|};

@r4:DataTypeDefinition {
    name: "ObservationVSubidOriginalSubIdentifier",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "original-sub-identifier.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "original-sub-identifier.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "original-sub-identifier.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "original-sub-identifier.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationVSubidOriginalSubIdentifier record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "original-sub-identifier" url = "original-sub-identifier";
|};

@r4:DataTypeDefinition {
    name: "ObservationVSubidSequence",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "sequence.extension"
        },

        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "sequence.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "sequence.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "sequence.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ObservationVSubidSequence record {|
    *r4:DecimalExtension;

    decimal valueDecimal;
    string id?;
    "sequence" url = "sequence";
|};

@r4:DataTypeDefinition {
    name: "OrganizationBrandBrandBundle",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "brandBundle.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "brandBundle.id"
        },

        "valueUrl": {
            name: "valueUrl",
            dataType: r4:urlType,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "brandBundle.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "brandBundle.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrganizationBrandBrandBundle record {|
    *r4:UrlExtension;

    string id?;
    r4:url valueUrl?;
    "brandBundle" url = "brandBundle";
|};

@r4:DataTypeDefinition {
    name: "OrganizationBrandBrandLogo",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "brandLogo.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "brandLogo.extension"
        },

        "brandLogoLicense": {
            name: "brandLogoLicense",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The license for the brand logo. This is a URL to the license details.",
            path: "brandLogo.brandLogoLicense"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "brandLogo.id"
        },

        "brandLogoLicenseType": {
            name: "brandLogoLicenseType",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The license type for the brand logo. Uses SPDX license identifier when available. See https://spdx.org/licenses/ for more information.",
            path: "brandLogo.brandLogoLicenseType"
        },

        "valueUrl": {
            name: "valueUrl",
            dataType: r4:urlType,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "brandLogo.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "brandLogo.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrganizationBrandBrandLogo record {|
    *r4:UrlExtension;

    r4:Coding valueCoding?;
    r4:Extension[] brandLogoLicense?;
    string id?;
    r4:Extension[] brandLogoLicenseType?;
    r4:url valueUrl?;
    "brandLogo" url = "brandLogo";
|};

@r4:DataTypeDefinition {
    name: "OrganizationBrandBrandLogoLicense",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "brandLogoLicense.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "brandLogoLicense.extension"
        },

        "brandLogoLicenseType": {
            name: "brandLogoLicenseType",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The license type for the brand logo. Uses SPDX license identifier when available. See https://spdx.org/licenses/ for more information.",
            path: "brandLogoLicense.brandLogoLicenseType"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "brandLogoLicense.id"
        },

        "valueUrl": {
            name: "valueUrl",
            dataType: r4:urlType,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "brandLogoLicense.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "brandLogoLicense.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrganizationBrandBrandLogoLicense record {|
    *r4:UrlExtension;

    r4:Coding valueCoding?;
    r4:Extension[] brandLogoLicenseType?;
    string id?;
    r4:url valueUrl?;
    "brandLogoLicenseType" url = "brandLogoLicenseType";
|};

@r4:DataTypeDefinition {
    name: "OrganizationBrandBrandLogoLicenseType",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "brandLogoLicenseType.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "brandLogoLicenseType.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "brandLogoLicenseType.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "brandLogoLicenseType.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrganizationBrandBrandLogoLicenseType record {|
    *r4:CodingExtension;

    r4:Coding valueCoding?;
    string id?;
    "brandLogoLicenseType" url = "brandLogoLicenseType";
|};

@r4:DataTypeDefinition {
    name: "OrganizationPortalPortalDescription",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "portalDescription.extension"
        },

        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "portalDescription.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "portalDescription.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "portalDescription.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrganizationPortalPortalDescription record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown?;
    string id?;
    "portalDescription" url = "portalDescription";
|};

@r4:DataTypeDefinition {
    name: "OrganizationPortalPortalEndpoint",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "portalEndpoint.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "portalEndpoint.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "portalEndpoint.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "portalEndpoint.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrganizationPortalPortalEndpoint record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference?;
    string id?;
    "portalEndpoint" url = "portalEndpoint";
|};

@r4:DataTypeDefinition {
    name: "OrganizationPortalPortalLogo",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "portalLogo.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "portalLogo.extension"
        },

        "portalLogoLicense": {
            name: "portalLogoLicense",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The license for the portal logo. This is a URL to the license details.",
            path: "portalLogo.portalLogoLicense"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "portalLogo.id"
        },

        "valueUrl": {
            name: "valueUrl",
            dataType: r4:urlType,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "portalLogo.value[x]"
        },

        "portalLogoLicenseType": {
            name: "portalLogoLicenseType",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The license type for the portal logo. Uses SPDX license identifier when available. See https://spdx.org/licenses/ for more information.",
            path: "portalLogo.portalLogoLicenseType"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "portalLogo.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrganizationPortalPortalLogo record {|
    *r4:UrlExtension;

    r4:Coding valueCoding?;
    r4:Extension[] portalLogoLicense?;
    string id?;
    r4:url valueUrl?;
    r4:Extension[] portalLogoLicenseType?;
    "portalLogo" url = "portalLogo";
|};

@r4:DataTypeDefinition {
    name: "OrganizationPortalPortalLogoLicense",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "portalLogoLicense.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "portalLogoLicense.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "portalLogoLicense.id"
        },

        "portalLogoLicenseType": {
            name: "portalLogoLicenseType",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The license type for the portal logo. Uses SPDX license identifier when available. See https://spdx.org/licenses/ for more information.",
            path: "portalLogoLicense.portalLogoLicenseType"
        },

        "valueUrl": {
            name: "valueUrl",
            dataType: r4:urlType,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "portalLogoLicense.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "portalLogoLicense.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrganizationPortalPortalLogoLicense record {|
    *r4:UrlExtension;

    r4:Coding valueCoding?;
    string id?;
    r4:Extension[] portalLogoLicenseType?;
    r4:url valueUrl?;
    "portalLogoLicenseType" url = "portalLogoLicenseType";
|};

@r4:DataTypeDefinition {
    name: "OrganizationPortalPortalLogoLicenseType",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "portalLogoLicenseType.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "portalLogoLicenseType.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "portalLogoLicenseType.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "portalLogoLicenseType.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrganizationPortalPortalLogoLicenseType record {|
    *r4:CodingExtension;

    r4:Coding valueCoding?;
    string id?;
    "portalLogoLicenseType" url = "portalLogoLicenseType";
|};

@r4:DataTypeDefinition {
    name: "OrganizationPortalPortalName",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "portalName.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "portalName.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "portalName.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "portalName.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrganizationPortalPortalName record {|
    *r4:StringExtension;

    string valueString?;
    string id?;
    "portalName" url = "portalName";
|};

@r4:DataTypeDefinition {
    name: "OrganizationPortalPortalUrl",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "portalUrl.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "portalUrl.id"
        },

        "valueUrl": {
            name: "valueUrl",
            dataType: r4:urlType,
            min: 0,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "portalUrl.value[x]"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "portalUrl.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type OrganizationPortalPortalUrl record {|
    *r4:UrlExtension;

    string id?;
    r4:url valueUrl?;
    "portalUrl" url = "portalUrl";
|};

@r4:DataTypeDefinition {
    name: "PackageSourcePackageId",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "packageId.extension"
        },

        "valueId": {
            name: "valueId",
            dataType: r4:id,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "packageId.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "packageId.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "packageId.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PackageSourcePackageId record {|
    *r4:IdExtension;

    r4:Extension[] extension?;
    r4:id valueId;
    string id?;
    "packageId" url = "packageId";
|};

@r4:DataTypeDefinition {
    name: "PackageSourceUri",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "uri.extension"
        },

        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "uri.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "uri.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "uri.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PackageSourceUri record {|
    *r4:UriExtension;

    r4:Extension[] extension?;
    r4:uri valueUri;
    string id?;
    "uri" url = "uri";
|};

@r4:DataTypeDefinition {
    name: "PackageSourceVersion",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "version.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "version.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "version.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "version.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PackageSourceVersion record {|
    *r4:StringExtension;

    r4:Extension[] extension?;
    string valueString;
    string id?;
    "version" url = "version";
|};

@r4:DataTypeDefinition {
    name: "PatientAnimalBreed",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "breed.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "breed.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "breed.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "breed.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientAnimalBreed record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "breed" url = "breed";
|};

@r4:DataTypeDefinition {
    name: "PatientAnimalGenderStatus",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "genderStatus.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "genderStatus.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "genderStatus.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "genderStatus.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientAnimalGenderStatus record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "genderStatus" url = "genderStatus";
|};

@r4:DataTypeDefinition {
    name: "PatientAnimalSpecies",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "species.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "species.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "species.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "species.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientAnimalSpecies record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "species" url = "species";
|};

@r4:DataTypeDefinition {
    name: "PatientCitizenshipCode",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "code.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "code.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "code.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "code.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientCitizenshipCode record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "code" url = "code";
|};

@r4:DataTypeDefinition {
    name: "PatientCitizenshipPeriod",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "period.extension"
        },

        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "period.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "period.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "period.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientCitizenshipPeriod record {|
    *r4:PeriodExtension;

    r4:Period valuePeriod;
    string id?;
    "period" url = "period";
|};

@r4:DataTypeDefinition {
    name: "PatientNationalityCode",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "code.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "code.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "code.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "code.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientNationalityCode record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "code" url = "code";
|};

@r4:DataTypeDefinition {
    name: "PatientNationalityPeriod",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "period.extension"
        },

        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "period.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "period.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "period.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientNationalityPeriod record {|
    *r4:PeriodExtension;

    r4:Period valuePeriod;
    string id?;
    "period" url = "period";
|};

@r4:DataTypeDefinition {
    name: "PatientPreferredPharmacyPharmacy",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "pharmacy.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "pharmacy.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "pharmacy.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "pharmacy.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientPreferredPharmacyPharmacy record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    string id?;
    "pharmacy" url = "pharmacy";
|};

@r4:DataTypeDefinition {
    name: "PatientPreferredPharmacyType",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "type.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "type.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientPreferredPharmacyType record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "type" url = "type";
|};

@r4:DataTypeDefinition {
    name: "PatientProficiencyLevel",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "level.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "level.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "level.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "level.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientProficiencyLevel record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    string id?;
    "level" url = "level";
|};

@r4:DataTypeDefinition {
    name: "PatientProficiencyType",
    baseType: (),
    elements: {
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "type.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "type.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "type.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "type.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientProficiencyType record {|
    *r4:CodingExtension;

    r4:Coding valueCoding;
    string id?;
    "type" url = "type";
|};

@r4:DataTypeDefinition {
    name: "PatientSexParameterForClinicalUseComment",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "comment.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "comment.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "comment.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "comment.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientSexParameterForClinicalUseComment record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "comment" url = "comment";
|};

@r4:DataTypeDefinition {
    name: "PatientSexParameterForClinicalUsePeriod",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "period.extension"
        },

        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "period.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "period.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "period.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientSexParameterForClinicalUsePeriod record {|
    *r4:PeriodExtension;

    r4:Period valuePeriod;
    string id?;
    "period" url = "period";
|};

@r4:DataTypeDefinition {
    name: "PatientSexParameterForClinicalUseSupportingInfo",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "supportingInfo.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "supportingInfo.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "supportingInfo.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "supportingInfo.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientSexParameterForClinicalUseSupportingInfo record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "supportingInfo" url = "supportingInfo";
|};

@r4:DataTypeDefinition {
    name: "PatientSexParameterForClinicalUseValue",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "value.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "value.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "value.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PatientSexParameterForClinicalUseValue record {|
    *r4:Base64BinaryExtension;

    r4:CodeableConcept valueCodeableConcept;
    string valueString;
    r4:Period valuePeriod;
    string id?;
    "value" url = "value";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireConstraintExpression",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "expression.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "expression.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "expression.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "expression.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireConstraintExpression record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "expression" url = "expression";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireConstraintHuman",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "human.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "human.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "human.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "human.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireConstraintHuman record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "human" url = "human";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireConstraintKey",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "key.extension"
        },

        "valueId": {
            name: "valueId",
            dataType: r4:id,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "key.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "key.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "key.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireConstraintKey record {|
    *r4:IdExtension;

    r4:id valueId;
    string id?;
    "key" url = "key";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireConstraintLocation",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "location.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "location.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "location.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "location.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireConstraintLocation record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "location" url = "location";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireConstraintRequirements",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "requirements.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "requirements.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "requirements.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "requirements.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireConstraintRequirements record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "requirements" url = "requirements";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireConstraintSeverity",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "severity.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "severity.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "severity.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "severity.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireConstraintSeverity record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "severity" url = "severity";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireOptionRestrictionExpression",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "expression.extension"
        },

        "valueExpression": {
            name: "valueExpression",
            dataType: r4:Expression,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "expression.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "expression.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "expression.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireOptionRestrictionExpression record {|
    *r4:ExpressionExtension;

    r4:Expression valueExpression;
    string id?;
    "requirements" url = "requirements";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireOptionRestrictionOption",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "option.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "option.id"
        },

        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "option.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "option.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireOptionRestrictionOption record {|
    *r4:IntegerExtension;

    string id?;
    r4:integer valueInteger;
    "option" url = "option";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireresponseAttesterMode",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "mode.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "mode.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "mode.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "mode.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireresponseAttesterMode record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "mode" url = "mode";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireresponseAttesterParty",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "party.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "party.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "party.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "party.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireresponseAttesterParty record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    string id?;
    "party" url = "party";
|};

@r4:DataTypeDefinition {
    name: "QuestionnaireresponseAttesterTime",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "time.extension"
        },

        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "time.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "time.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "time.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type QuestionnaireresponseAttesterTime record {|
    *r4:DateTimeExtension;

    r4:dateTime valueDateTime;
    string id?;
    "time" url = "time";
|};

@r4:DataTypeDefinition {
    name: "RelativeDateOffset",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "offset.extension"
        },

        "valueDuration": {
            name: "valueDuration",
            dataType: r4:Duration,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "offset.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "offset.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "offset.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RelativeDateOffset record {|
    *r4:DurationExtension;

    r4:Duration valueDuration;
    string id?;
    "offset" url = "offset";
|};

@r4:DataTypeDefinition {
    name: "RelativeDateRelationship",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "relationship.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "relationship.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "relationship.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "relationship.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RelativeDateRelationship record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "relationship" url = "relationship";
|};

@r4:DataTypeDefinition {
    name: "RelativeDateTargetCode",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "targetCode.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "targetCode.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "targetCode.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "targetCode.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RelativeDateTargetCode record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "targetCode" url = "targetCode";
|};

@r4:DataTypeDefinition {
    name: "RelativeDateTargetPath",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "targetPath.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "targetPath.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "targetPath.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "targetPath.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RelativeDateTargetPath record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "targetPath" url = "targetPath";
|};

@r4:DataTypeDefinition {
    name: "RelativeDateTargetReference",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "targetReference.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "targetReference.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "targetReference.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "targetReference.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type RelativeDateTargetReference record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    string id?;
    "targetReference" url = "targetReference";
|};

@r4:DataTypeDefinition {
    name: "ResearchStudySiteRecruitmentActualNumber",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "actualNumber.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "actualNumber.id"
        },

        "valueUnsignedInt": {
            name: "valueUnsignedInt",
            dataType: r4:unsignedInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "actualNumber.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "actualNumber.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ResearchStudySiteRecruitmentActualNumber record {|
    *r4:UnsignedIntExtension;

    string id?;
    r4:unsignedInt valueUnsignedInt;
    "actualNumber" url = "actualNumber";
|};

@r4:DataTypeDefinition {
    name: "ResearchStudySiteRecruitmentEligibility",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "eligibility.extension"
        },

        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "eligibility.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "eligibility.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "eligibility.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ResearchStudySiteRecruitmentEligibility record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    string id?;
    "eligibility" url = "eligibility";
|};

@r4:DataTypeDefinition {
    name: "ResearchStudySiteRecruitmentTargetNumber",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "targetNumber.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "targetNumber.id"
        },

        "valueUnsignedInt": {
            name: "valueUnsignedInt",
            dataType: r4:unsignedInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "targetNumber.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "targetNumber.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ResearchStudySiteRecruitmentTargetNumber record {|
    *r4:UnsignedIntExtension;

    string id?;
    r4:unsignedInt valueUnsignedInt;
    "targetNumber" url = "targetNumber";
|};

@r4:DataTypeDefinition {
    name: "ResearchStudyStudyRegistrationActivity",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "activity.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "activity.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "activity.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "activity.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ResearchStudyStudyRegistrationActivity record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "activity" url = "activity";
|};

@r4:DataTypeDefinition {
    name: "ResearchStudyStudyRegistrationActual",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "actual.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "actual.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "actual.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "actual.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ResearchStudyStudyRegistrationActual record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    string id?;
    "actual" url = "actual";
|};

@r4:DataTypeDefinition {
    name: "ResearchStudyStudyRegistrationPeriod",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "period.extension"
        },

        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "period.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "period.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "period.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ResearchStudyStudyRegistrationPeriod record {|
    *r4:PeriodExtension;

    r4:Period valuePeriod;
    string id?;
    "period" url = "period";
|};

@r4:DataTypeDefinition {
    name: "SatisfiesRequirementKey",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "key.extension"
        },

        "valueId": {
            name: "valueId",
            dataType: r4:id,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "key.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "key.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "key.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type SatisfiesRequirementKey record {|
    *r4:IdExtension;

    r4:id valueId;
    string id?;
    "key" url = "key";
|};

@r4:DataTypeDefinition {
    name: "SatisfiesRequirementReference",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "reference.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "reference.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "reference.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "reference.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type SatisfiesRequirementReference record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    string id?;
    "reference" url = "reference";
|};

@r4:DataTypeDefinition {
    name: "ServicerequestGeneticsItemCode",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "code.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "code.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "code.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "code.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ServicerequestGeneticsItemCode record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept;
    string id?;
    "code" url = "code";
|};

@r4:DataTypeDefinition {
    name: "ServicerequestGeneticsItemGeneticsObservation",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "geneticsObservation.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "geneticsObservation.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "geneticsObservation.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "geneticsObservation.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ServicerequestGeneticsItemGeneticsObservation record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    string id?;
    "geneticsObservation" url = "geneticsObservation";
|};

@r4:DataTypeDefinition {
    name: "ServicerequestGeneticsItemSpecimen",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "specimen.extension"
        },

        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "specimen.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "specimen.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "specimen.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ServicerequestGeneticsItemSpecimen record {|
    *r4:ReferenceExtension;

    r4:Reference valueReference;
    string id?;
    "specimen" url = "specimen";
|};

@r4:DataTypeDefinition {
    name: "ServicerequestGeneticsItemStatus",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "status.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "status.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "status.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "status.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ServicerequestGeneticsItemStatus record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "status" url = "status";
|};

@r4:DataTypeDefinition {
    name: "StatisticModelIncludeIfAttribute",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Type of condition.",
            path: "attribute.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "attribute.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "attribute.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "attribute.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StatisticModelIncludeIfAttribute record {|
    *r4:CodeableConceptExtension;

    r4:CodeableConcept valueCodeableConcept?;
    string id?;
    "attribute" url = "attribute";
|};

@r4:DataTypeDefinition {
    name: "StatisticModelIncludeIfValue",
    baseType: (),
    elements: {
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Type of condition.",
            path: "value.value[x]"
        },

        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of condition.",
            path: "value.value[x]"
        },

        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "value.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "value.id"
        },

        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "value.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StatisticModelIncludeIfValue record {|
    *r4:Base64BinaryExtension;

    r4:CodeableConcept valueCodeableConcept?;
    boolean valueBoolean;
    string id?;
    "value" url = "value";
|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionJsonTypeValueString",
    baseType: (),
    elements: {
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionJsonTypeValueString record {|
    *r4:ExtensionExtension;

|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionRdfTypeValueString",
    baseType: (),
    elements: {
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionRdfTypeValueString record {|
    *r4:ExtensionExtension;

|};

@r4:DataTypeDefinition {
    name: "StructuredefinitionXmlTypeValueString",
    baseType: (),
    elements: {
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type StructuredefinitionXmlTypeValueString record {|
    *r4:ExtensionExtension;

|};

@r4:DataTypeDefinition {
    name: "TargetConstraintExpression",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "expression.extension"
        },

        "valueExpression": {
            name: "valueExpression",
            dataType: r4:Expression,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "expression.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "expression.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "expression.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TargetConstraintExpression record {|
    *r4:ExpressionExtension;

    r4:Expression valueExpression;
    string id?;
    "expression" url = "expression";
|};

@r4:DataTypeDefinition {
    name: "TargetConstraintHuman",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "human.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "human.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "human.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "human.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TargetConstraintHuman record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "human" url = "human";
|};

@r4:DataTypeDefinition {
    name: "TargetConstraintKey",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "key.extension"
        },

        "valueId": {
            name: "valueId",
            dataType: r4:id,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "key.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "key.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "key.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TargetConstraintKey record {|
    *r4:IdExtension;

    r4:id valueId;
    string id?;
    "key" url = "key";
|};

@r4:DataTypeDefinition {
    name: "TargetConstraintLocation",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "location.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "location.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "location.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "location.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TargetConstraintLocation record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "location" url = "location";
|};

@r4:DataTypeDefinition {
    name: "TargetConstraintRequirements",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "requirements.extension"
        },

        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "requirements.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "requirements.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "requirements.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TargetConstraintRequirements record {|
    *r4:MarkdownExtension;

    r4:markdown valueMarkdown;
    string id?;
    "requirements" url = "requirements";
|};

@r4:DataTypeDefinition {
    name: "TargetConstraintSeverity",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "severity.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "severity.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "severity.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "severity.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TargetConstraintSeverity record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "severity" url = "severity";
|};

@r4:DataTypeDefinition {
    name: "TerminologyResourceIdentifierMetadataAuthoritative",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "authoritative.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "authoritative.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "authoritative.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "authoritative.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TerminologyResourceIdentifierMetadataAuthoritative record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    string id?;
    "authoritative" url = "authoritative";
|};

@r4:DataTypeDefinition {
    name: "TerminologyResourceIdentifierMetadataComment",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "comment.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "comment.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "comment.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "comment.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TerminologyResourceIdentifierMetadataComment record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "comment" url = "comment";
|};

@r4:DataTypeDefinition {
    name: "TerminologyResourceIdentifierMetadataPreferred",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "preferred.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "preferred.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "preferred.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "preferred.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TerminologyResourceIdentifierMetadataPreferred record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    string id?;
    "preferred" url = "preferred";
|};

@r4:DataTypeDefinition {
    name: "TimingDaysOfCycleDay",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "day.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "day.id"
        },

        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "day.value[x]"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "day.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TimingDaysOfCycleDay record {|
    *r4:IntegerExtension;

    string id?;
    r4:integer valueInteger;
    "day" url = "day";
|};

@r4:DataTypeDefinition {
    name: "TranslationContent",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "content.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "content.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "content.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "content.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TranslationContent record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "content" url = "content";
|};

@r4:DataTypeDefinition {
    name: "TranslationLang",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "lang.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "lang.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "lang.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "lang.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type TranslationLang record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "lang" url = "lang";
|};

@r4:DataTypeDefinition {
    name: "ValuesetExpandGroupCode",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "code.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "code.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "code.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "code.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetExpandGroupCode record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "code" url = "code";
|};

@r4:DataTypeDefinition {
    name: "ValuesetExpandGroupDisplay",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "display.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "display.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "display.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "display.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetExpandGroupDisplay record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "display" url = "display";
|};

@r4:DataTypeDefinition {
    name: "ValuesetExpandGroupMember",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "member.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "member.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "member.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "member.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetExpandGroupMember record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "member" url = "member";
|};

@r4:DataTypeDefinition {
    name: "ValuesetOtherNameName",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "name.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "name.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "name.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "name.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetOtherNameName record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "name" url = "name";
|};

@r4:DataTypeDefinition {
    name: "ValuesetOtherNamePreferred",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "preferred.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "preferred.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "preferred.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "preferred.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetOtherNamePreferred record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    string id?;
    "preferred" url = "preferred";
|};

@r4:DataTypeDefinition {
    name: "ValuesetOtherTitleLanguage",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "language.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "language.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "language.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "language.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetOtherTitleLanguage record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "language" url = "language";
|};

@r4:DataTypeDefinition {
    name: "ValuesetOtherTitlePreferred",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "preferred.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "preferred.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "preferred.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "preferred.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetOtherTitlePreferred record {|
    *r4:BooleanExtension;

    boolean valueBoolean;
    string id?;
    "preferred" url = "preferred";
|};

@r4:DataTypeDefinition {
    name: "ValuesetOtherTitleTitle",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "title.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "title.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "title.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "title.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetOtherTitleTitle record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "title" url = "title";
|};

@r4:DataTypeDefinition {
    name: "ValuesetSelectByMapFilter",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "filter.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "filter.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "filter.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "filter.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetSelectByMapFilter record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "filter" url = "filter";
|};

@r4:DataTypeDefinition {
    name: "ValuesetSelectByMapMap",
    baseType: (),
    elements: {
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "map.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "map.extension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "map.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "map.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetSelectByMapMap record {|
    *r4:CanonicalExtension;

    r4:canonical valueCanonical;
    string id?;
    "map" url = "map";
|};

@r4:DataTypeDefinition {
    name: "ValuesetUsageUse",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "use.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "use.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "use.id"
        },

        "user": {
            name: "user",
            dataType: r4:Extension,
            min: 1,
            max: 1,
            isArray: true,
            description: "This is most likely to be an organization but can be an individual. It would not be a program, that information should be recorded in the usage.use.",
            path: "use.user"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "use.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetUsageUse record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    r4:Extension[] user;
    "user" url = "user";
|};

@r4:DataTypeDefinition {
    name: "ValuesetUsageUser",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "user.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "user.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "user.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "user.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type ValuesetUsageUser record {|
    *r4:StringExtension;

    string valueString;
    string id?;
    "user" url = "user";
|};

@r4:DataTypeDefinition {
    name: "VersionSpecificUseEndFhirVersion",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "endFhirVersion.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "endFhirVersion.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "endFhirVersion.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "endFhirVersion.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type VersionSpecificUseEndFhirVersion record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "endFhirVersion" url = "endFhirVersion";
|};

@r4:DataTypeDefinition {
    name: "VersionSpecificUseStartFhirVersion",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "startFhirVersion.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "startFhirVersion.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "startFhirVersion.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "startFhirVersion.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type VersionSpecificUseStartFhirVersion record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "startFhirVersion" url = "startFhirVersion";
|};

@r4:DataTypeDefinition {
    name: "VersionSpecificValueEndFhirVersion",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "endFhirVersion.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "endFhirVersion.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "endFhirVersion.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "endFhirVersion.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type VersionSpecificValueEndFhirVersion record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "endFhirVersion" url = "endFhirVersion";
|};

@r4:DataTypeDefinition {
    name: "VersionSpecificValueStartFhirVersion",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "startFhirVersion.extension"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "startFhirVersion.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "startFhirVersion.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "startFhirVersion.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type VersionSpecificValueStartFhirVersion record {|
    *r4:CodeExtension;

    r4:code valueCode;
    string id?;
    "startFhirVersion" url = "startFhirVersion";
|};

@r4:DataTypeDefinition {
    name: "VersionSpecificValueValue",
    baseType: (),
    elements: {
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: 0,
            isArray: true,
            description: "An Extension",
            path: "value.extension"
        },

        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/R5/extensibility.html) for a list).",
            path: "value.value[x]"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "value.id"
        },

        "url": {
            name: "url",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "value.url"
        }

    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type VersionSpecificValueValue record {|
    *r4:Base64BinaryExtension;

    string valueString;
    r4:code valueCode;
    string id?;
    "value" url = "value";
|};

