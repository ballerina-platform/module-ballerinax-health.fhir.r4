// Copyright (c) ${licenseYear}, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerinax/health.fhir.r4;

@r4:DataTypeDefinition {
    name: "Interpretation",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationGeneticsInterpretation record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "questionnaireRequest",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ServicerequestQuestionnaireRequest record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "management",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OpenEHRManagement record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "duration",
    baseType: (),
    elements: {
    
        "valueDuration": {
            name: "valueDuration",
            dataType: r4:Duration,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AllergyintoleranceDuration record {|
    *r4:DurationExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Duration valueDuration;
    string url;
|};


@r4:DataTypeDefinition {
    name: "exposureDate",
    baseType: (),
    elements: {
    
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OpenEHRExposureDate record {|
    *r4:DateTimeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:dateTime valueDateTime;
    string url;
|};


@r4:DataTypeDefinition {
    name: "styleSensitive",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type RenderingStyleSensitive record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "conceptOrder",
    baseType: (),
    elements: {
    
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetConceptOrder record {|
    *r4:IntegerExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:integer valueInteger;
    string url;
|};


@r4:DataTypeDefinition {
    name: "GenomicSourceClass",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationGeneticsGenomicSourceClass record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "method",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HlaGenotypingResultsMethod record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "displayCategory",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireDisplayCategory record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "sibling",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type FamilyMemberHistoryGeneticsSibling record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    r4:Reference valueReference;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "AminoAcidChange",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationGeneticsAminoAcidChange record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "birthPlace",
    baseType: (),
    elements: {
    
        "valueAddress": {
            name: "valueAddress",
            dataType: r4:Address,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientBirthPlace record {|
    *r4:AddressExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Address valueAddress;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-streetName",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPStreetName record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "preferredContact",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OrganizationPreferredContact record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "bestpractice-explanation",
    baseType: (),
    elements: {
    
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ElementdefinitionBestpracticeExplanation record {|
    *r4:MarkdownExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:markdown valueMarkdown;
    string url;
|};


@r4:DataTypeDefinition {
    name: "References",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DiagnosticReportGeneticsReferences record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string valueString;
    r4:uri valueUri;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "Human Language",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type Language record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "objectClassProperty",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObjectClassProperty record {|
    *r4:CodingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-postBox",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPPostBox record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "expression",
    baseType: (),
    elements: {
    
        "valueExpression": {
            name: "valueExpression",
            dataType: r4:Expression,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetExpression record {|
    *r4:ExpressionExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Expression valueExpression;
    string url;
|};


@r4:DataTypeDefinition {
    name: "summaryOf",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DiagnosticReportSummaryOf record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "supportLink",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireSupportLink record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "author",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireresponseAuthor record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "expand-group",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetExpandGroup record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    r4:code valueCode;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-houseNumber",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPHouseNumber record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "proficiency",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientProficiency record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "TEL-address",
    baseType: (),
    elements: {
    
        "valueUrl": {
            name: "valueUrl",
            dataType: r4:urlType,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoTELAddress record {|
    *r4:UrlExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:urlType valueUrl;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Original Text",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OriginalText record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "template-status",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionTemplateStatus record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "sequelTo",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationSequelTo record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "MPPS",
    baseType: (),
    elements: {
    
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuditeventMPPS record {|
    *r4:IdentifierExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Identifier valueIdentifier;
    string url;
|};


@r4:DataTypeDefinition {
    name: "administration",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OpenEHRAdministration record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "replaces",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type TaskReplaces record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "interpreterRequired",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientInterpreterRequired record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "replaces",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationReplaces record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "primaryInd",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OrganizationaffiliationPrimaryInd record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "exposureDuration",
    baseType: (),
    elements: {
    
        "valueDuration": {
            name: "valueDuration",
            dataType: r4:Duration,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OpenEHRExposureDuration record {|
    *r4:DurationExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Duration valueDuration;
    string url;
|};


@r4:DataTypeDefinition {
    name: "approachBodyStructure",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ProcedureApproachBodyStructure record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "group",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type UsagecontextGroup record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "markdown",
    baseType: (),
    elements: {
    
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type RenderingMarkdown record {|
    *r4:MarkdownExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:markdown valueMarkdown;
    string url;
|};


@r4:DataTypeDefinition {
    name: "episodeOfCare",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type WorkflowEpisodeOfCare record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "lastReviewDate",
    baseType: (),
    elements: {
    
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ResourceLastReviewDate record {|
    *r4:DateExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:date valueDate;
    string url;
|};


@r4:DataTypeDefinition {
    name: "isCommonBinding",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ElementdefinitionIsCommonBinding record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "partner-prefix",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HumannamePartnerPrefix record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "security-category",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionSecurityCategory record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "warning",
    baseType: (),
    elements: {
    
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemWarning record {|
    *r4:MarkdownExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:markdown valueMarkdown;
    string url;
|};


@r4:DataTypeDefinition {
    name: "eventHistory",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type EventEventHistory record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "mothersMaidenName",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientMothersMaidenName record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "reasonRejected",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type GoalReasonRejected record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "directedBy",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ProcedureDirectedBy record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "signatureRequired",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireSignatureRequired record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "doNotPerform",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type RequestDoNotPerform record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "statusReason",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type RequestStatusReason record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-precinct",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPPrecinct record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "alternate",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemAlternate record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    r4:code valueCode;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "style",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type RenderingStyle record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "fathers-family",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HumannameFathersFamily record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "equivalence",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ElementdefinitionEquivalence record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "uncertaintyType",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoUncertaintyType record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "assembly-order",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HumannameAssemblyOrder record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "referenceFilter",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireReferenceFilter record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "reasonCode",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type WorkflowReasonCode record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "label",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetLabel record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "completionMode",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireresponseCompletionMode record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "fhirType",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireFhirType record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "question",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ElementdefinitionQuestion record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "regex",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type Regex record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "insurance",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type RequestInsurance record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "optionExclusive",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireOptionExclusive record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "qualityOfEvidence",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfQualityOfEvidence record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Transcriber",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ConsentTranscriber record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "workflowStatus",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemWorkflowStatus record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-careOf",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPCareOf record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-deliveryModeIdentifier",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPDeliveryModeIdentifier record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "targetBodyStructure",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ProcedureTargetBodyStructure record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Gene",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationGeneticsGene record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "precision",
    baseType: (),
    elements: {
    
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuantityPrecision record {|
    *r4:IntegerExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:integer valueInteger;
    string url;
|};


@r4:DataTypeDefinition {
    name: "sliderStepValue",
    baseType: (),
    elements: {
    
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireSliderStepValue record {|
    *r4:IntegerExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:integer valueInteger;
    string url;
|};


@r4:DataTypeDefinition {
    name: "DataElement constraint on ElementDefinition data type",
    baseType: (),
    elements: {
    
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ElementDefinition.modifierExtension"
        },    
        "ElementdefinitionDeSlicingDiscriminatorType": {
            name: "ElementdefinitionDeSlicingDiscriminatorType",
            dataType: ElementdefinitionDeSlicingDiscriminatorType,
            min: 1,
            max: 1,
            isArray: false,
            description: "How the element value is interpreted when discrimination is evaluated.",
            path: "ElementDefinition.slicing.discriminator.type"
        },    
        "binding": {
            name: "binding",
            dataType: r4:ElementBinding,
            min: 0,
            max: 1,
            isArray: false,
            description: "Binds to a value set if this element is coded (code, Coding, CodeableConcept, Quantity), or the data types (string, uri).",
            path: "ElementDefinition.binding"
        },    
        "ElementdefinitionDeTypeAggregation": {
            name: "ElementdefinitionDeTypeAggregation",
            dataType: ElementdefinitionDeTypeAggregation,
            min: 0,
            max: 0,
            isArray: false,
            description: "If the type is a reference to another resource, how the resource is or can be aggregated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle.",
            path: "ElementDefinition.type.aggregation"
        },    
        "language": {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            description: "Identifies the computable language in which mapping.map is expressed.",
            path: "ElementDefinition.mapping.language"
        },    
        "path": {
            name: "path",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The Path that identifies the base element - this matches the ElementDefinition.path for that element. Across FHIR, there is only one base definition of any element - that is, an element definition on a [StructureDefinition](http://hl7.org/fhir/structuredefinition.html#) without a StructureDefinition.base.",
            path: "ElementDefinition.base.path"
        },    
        "fixedBase64Binary": {
            name: "fixedBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Specifies a value that SHALL be exactly the value for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
            path: "ElementDefinition.fixed[x]"
        },    
        "'source": {
            name: "'source",
            dataType: r4:canonical,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to the original source of the constraint, for traceability purposes.",
            path: "ElementDefinition.constraint.source"
        },    
        "defaultValueBase64Binary": {
            name: "defaultValueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 1,
            isArray: false,
            description: "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
            path: "ElementDefinition.defaultValue[x]"
        },    
        "mapping": {
            name: "mapping",
            dataType: r4:ElementMapping,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies a concept from an external specification that roughly corresponds to this element.",
            path: "ElementDefinition.mapping"
        },    
        "isModifier": {
            name: "isModifier",
            dataType: boolean,
            min: 0,
            max: 0,
            isArray: false,
            description: "If true, the value of this element affects the interpretation of the element or resource that contains it, and the value of the element cannot be ignored. Typically, this is used for status, negation and qualification codes. The effect of this is that the element cannot be ignored by systems: they SHALL either recognize the element and process it, and/or a pre-determination has been made that it is not relevant to their particular system.",
            path: "ElementDefinition.isModifier"
        },    
        "profile": {
            name: "profile",
            dataType: r4:canonical,
            min: 0,
            max: 0,
            isArray: false,
            description: "Identifies a profile structure or implementation Guide that applies to the datatype this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the type SHALL conform to at least one profile defined in the implementation guide.",
            path: "ElementDefinition.type.profile"
        },    
        "ElementdefinitionDeConstraintSeverity": {
            name: "ElementdefinitionDeConstraintSeverity",
            dataType: ElementdefinitionDeConstraintSeverity,
            min: 1,
            max: 1,
            isArray: false,
            description: "Identifies the impact constraint violation has on the conformance of the instance.",
            path: "ElementDefinition.constraint.severity"
        },    
        "isSummary": {
            name: "isSummary",
            dataType: boolean,
            min: 0,
            max: 0,
            isArray: false,
            description: "Whether the element should be included if a client requests a search with the parameter _summary=true.",
            path: "ElementDefinition.isSummary"
        },    
        "condition": {
            name: "condition",
            dataType: r4:id,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to an invariant that may make additional statements about the cardinality or value in the instance.",
            path: "ElementDefinition.condition"
        },    
        "patternBase64Binary": {
            name: "patternBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example. When pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly. When pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array. When pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e., 1. If primitive: it must match exactly the pattern value 2. If a complex object: it must match (recursively) the pattern value 3. If an array: it must match (recursively) the pattern value.",
            path: "ElementDefinition.pattern[x]"
        },    
        "ElementdefinitionDeBindingStrength": {
            name: "ElementdefinitionDeBindingStrength",
            dataType: ElementdefinitionDeBindingStrength,
            min: 1,
            max: 1,
            isArray: false,
            description: "Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.",
            path: "ElementDefinition.binding.strength"
        },    
        "orderMeaning": {
            name: "orderMeaning",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "If present, indicates that the order of the repeating element has meaning and describes what that meaning is. If absent, it means that the order of the element has no meaning.",
            path: "ElementDefinition.orderMeaning"
        },    
        "targetProfile": {
            name: "targetProfile",
            dataType: r4:canonical,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Used when the type is 'Reference' or 'canonical', and identifies a profile structure or implementation Guide that applies to the target of the reference this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide.",
            path: "ElementDefinition.type.targetProfile"
        },    
        "meaningWhenMissing": {
            name: "meaningWhenMissing",
            dataType: r4:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "The Implicit meaning that is to be understood when this element is missing (e.g. 'when this element is missing, the period is ongoing').",
            path: "ElementDefinition.meaningWhenMissing"
        },    
        "'type": {
            name: "'type",
            dataType: r4:ElementType,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The data type or resource that the value of this element is permitted to be.",
            path: "ElementDefinition.type"
        },    
        "isModifierReason": {
            name: "isModifierReason",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Explains how that element affects the interpretation of the resource or element that contains it.",
            path: "ElementDefinition.isModifierReason"
        },    
        "maxLength": {
            name: "maxLength",
            dataType: r4:integer,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indicates the maximum length in characters that is permitted to be present in conformant instances and which is expected to be supported by conformant consumers that support the element.",
            path: "ElementDefinition.maxLength"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 1,
            max: 1,
            isArray: false,
            description: "The actual value for the element, which must be one of the types allowed for this element.",
            path: "ElementDefinition.example.value[x]"
        },    
        "code": {
            name: "code",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "URL of Data type or Resource that is a(or the) type used for this element. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition e.g. 'string' is a reference to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are only allowed in logical models.",
            path: "ElementDefinition.type.code"
        },    
        "valueSet": {
            name: "valueSet",
            dataType: r4:canonical,
            min: 0,
            max: 1,
            isArray: false,
            description: "Refers to the value set that identifies the set of codes the binding refers to.",
            path: "ElementDefinition.binding.valueSet"
        },    
        "maxValueDate": {
            name: "maxValueDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
            path: "ElementDefinition.maxValue[x]"
        },    
        "ElementdefinitionDeTypeVersioning": {
            name: "ElementdefinitionDeTypeVersioning",
            dataType: ElementdefinitionDeTypeVersioning,
            min: 0,
            max: 1,
            isArray: false,
            description: "Whether this reference needs to be version specific or version independent, or whether either can be used.",
            path: "ElementDefinition.type.versioning"
        },    
        "'map": {
            name: "'map",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Expresses what part of the target specification corresponds to this element.",
            path: "ElementDefinition.mapping.map"
        },    
        "description": {
            name: "description",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Describes the intended use of this particular set of codes.",
            path: "ElementDefinition.binding.description"
        },    
        "ElementdefinitionDeSlicingRules": {
            name: "ElementdefinitionDeSlicingRules",
            dataType: ElementdefinitionDeSlicingRules,
            min: 1,
            max: 1,
            isArray: false,
            description: "Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end.",
            path: "ElementDefinition.slicing.rules"
        },    
        "minValueDate": {
            name: "minValueDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
            path: "ElementDefinition.minValue[x]"
        },    
        "example": {
            name: "example",
            dataType: r4:ElementExample,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A sample value for this element demonstrating the type of information that would typically be found in the element.",
            path: "ElementDefinition.example"
        },    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "ElementDefinition.extension.value[x]"
        },    
        "xpath": {
            name: "xpath",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "An XPath expression of constraint that can be executed to see if this constraint is met.",
            path: "ElementDefinition.constraint.xpath"
        },    
        "min": {
            name: "min",
            dataType: r4:unsignedInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "Minimum cardinality of the base element identified by the path.",
            path: "ElementDefinition.base.min"
        },    
        "identity": {
            name: "identity",
            dataType: r4:id,
            min: 1,
            max: 1,
            isArray: false,
            description: "An internal reference to the definition of a mapping.",
            path: "ElementDefinition.mapping.identity"
        },    
        "alias": {
            name: "alias",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies additional names by which this element might also be known.",
            path: "ElementDefinition.alias"
        },    
        "definition": {
            name: "definition",
            dataType: r4:markdown,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides a complete explanation of the meaning of the data element for human readability. For the case of elements derived from existing elements (e.g. constraints), the definition SHALL be consistent with the base definition, but convey the meaning of the element in the particular context of use of the resource. (Note: The text you are reading is specified in ElementDefinition.definition).",
            path: "ElementDefinition.definition"
        },    
        "human": {
            name: "human",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Text that can be used to describe the constraint in messages identifying that the constraint has been violated.",
            path: "ElementDefinition.constraint.human"
        },    
        "sliceIsConstraining": {
            name: "sliceIsConstraining",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "If true, indicates that this slice definition is constraining a slice definition with the same name in an inherited profile. If false, the slice is not overriding any slice in an inherited profile. If missing, the slice might or might not be overriding a slice in an inherited profile, depending on the sliceName.",
            path: "ElementDefinition.sliceIsConstraining"
        },    
        "key": {
            name: "key",
            dataType: r4:id,
            min: 1,
            max: 1,
            isArray: false,
            description: "Allows identification of which elements have their cardinalities impacted by the constraint. Will not be referenced for constraints that do not affect cardinality.",
            path: "ElementDefinition.constraint.key"
        },    
        "slicing": {
            name: "slicing",
            dataType: r4:ElementSlicing,
            min: 0,
            max: 0,
            isArray: false,
            description: "Indicates that the element is sliced into a set of alternative definitions (i.e. in a structure definition, there are multiple different constraints on a single element in the base resource). Slicing can be used in any resource that has cardinality ..* on the base resource, or any resource with a choice of types. The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set).",
            path: "ElementDefinition.slicing"
        },    
        "ordered": {
            name: "ordered",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the matching elements have to occur in the same order as defined in the profile.",
            path: "ElementDefinition.slicing.ordered"
        },    
        "requirements": {
            name: "requirements",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Description of why this constraint is necessary or appropriate.",
            path: "ElementDefinition.constraint.requirements"
        },    
        "expression": {
            name: "expression",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A [FHIRPath](http://hl7.org/fhir/fhirpath.html) expression of constraint that can be executed to see if this constraint is met.",
            path: "ElementDefinition.constraint.expression"
        },    
        "mustSupport": {
            name: "mustSupport",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "If true, implementations that produce or consume resources SHALL provide 'support' for the element in some meaningful way. If false, the element may be ignored and not supported. If false, whether to populate or use the data element in any way is at the discretion of the implementation.",
            path: "ElementDefinition.mustSupport"
        },    
        "max": {
            name: "max",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Maximum cardinality of the base element identified by the path.",
            path: "ElementDefinition.base.max"
        },    
        "ElementdefinitionDeRepresentation": {
            name: "ElementdefinitionDeRepresentation",
            dataType: ElementdefinitionDeRepresentation,
            min: 0,
            max: 0,
            isArray: false,
            description: "Codes that define how this element is represented in instances, when the deviation varies from the normal case.",
            path: "ElementDefinition.representation"
        },    
        "label": {
            name: "label",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Describes the purpose of this example amoung the set of examples.",
            path: "ElementDefinition.example.label"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "ElementDefinition.extension.url"
        },    
        "discriminator": {
            name: "discriminator",
            dataType: r4:ElementDiscriminator,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices.",
            path: "ElementDefinition.slicing.discriminator"
        },    
        "sliceName": {
            name: "sliceName",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "The name of this element definition slice, when slicing is working. The name must be a token with no dots or spaces. This is a unique name referring to a specific set of constraints applied to this element, used to provide a name to different slices of the same element.",
            path: "ElementDefinition.sliceName"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "ElementDefinition.extension.value[x]"
        },    
        "contentReference": {
            name: "contentReference",
            dataType: r4:uri,
            min: 0,
            max: 0,
            isArray: false,
            description: "Identifies an element defined elsewhere in the definition whose content rules should be applied to the current element. ContentReferences bring across all the rules that are in the ElementDefinition for the element, including definitions, cardinality constraints, bindings, invariants etc.",
            path: "ElementDefinition.contentReference"
        },    
        "short": {
            name: "short",
            dataType: string,
            min: 0,
            max: 0,
            isArray: false,
            description: "A concise description of what this element means (e.g. for use in autogenerated summaries).",
            path: "ElementDefinition.short"
        },    
        "comment": {
            name: "comment",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Comments that provide information about the mapping or its use.",
            path: "ElementDefinition.mapping.comment"
        },    
        "constraint": {
            name: "constraint",
            dataType: r4:ElementConstraint,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance.",
            path: "ElementDefinition.constraint"
        },    
        "base": {
            name: "base",
            dataType: r4:ElementBase,
            min: 0,
            max: 1,
            isArray: false,
            description: "Information about the base definition of the element, provided to make it unnecessary for tools to trace the deviation of the element through the derived and related profiles. When the element definition is not the original definition of an element - i.g. either in a constraint on another type, or for elements from a super type in a snap shot - then the information in provided in the element definition may be different to the base definition. On the original definition of the element, it will be same.",
            path: "ElementDefinition.base"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ElementdefinitionDe record {|
    *r4:ElementDefinition;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Extension[] modifierExtension?;
    ElementdefinitionDeSlicingDiscriminatorType ElementdefinitionDeSlicingDiscriminatorType;
    r4:ElementBinding binding?;
    r4:code language?;
    string path;
    r4:canonical 'source?;
    r4:base64Binary defaultValueBase64Binary?;
    r4:ElementMapping[] mapping?;
    ElementdefinitionDeConstraintSeverity ElementdefinitionDeConstraintSeverity;
    r4:id[] condition?;
    ElementdefinitionDeBindingStrength ElementdefinitionDeBindingStrength;
    string orderMeaning?;
    r4:canonical[] targetProfile?;
    r4:markdown meaningWhenMissing?;
    r4:ElementType[] 'type?;
    string isModifierReason?;
    r4:integer maxLength?;
    r4:base64Binary valueBase64Binary;
    r4:Coding[] code?;
    r4:canonical valueSet?;
    r4:date maxValueDate?;
    ElementdefinitionDeTypeVersioning ElementdefinitionDeTypeVersioning?;
    string 'map;
    string description?;
    ElementdefinitionDeSlicingRules ElementdefinitionDeSlicingRules;
    r4:date minValueDate?;
    r4:ElementExample[] example?;
    r4:CodeableConcept valueCodeableConcept;
    string xpath?;
    r4:unsignedInt min?;
    r4:id identity;
    string[] alias?;
    r4:markdown definition?;
    string human;
    boolean sliceIsConstraining?;
    r4:id key;
    boolean ordered?;
    r4:markdown requirements?;
    string expression?;
    boolean mustSupport?;
    string max?;
    string label?;
    string url;
    r4:ElementDiscriminator[] discriminator?;
    string sliceName?;
    string valueString;
    r4:markdown comment?;
    r4:ElementConstraint[] constraint?;
    r4:ElementBase base?;
|};

public enum ElementdefinitionDeBindingStrength {
    CODE_ELEMENTDEFINITIONDEBINDINGSTRENGTH_EXTENSIBLE = "extensible",
    CODE_ELEMENTDEFINITIONDEBINDINGSTRENGTH_REQUIRED = "required",
    CODE_ELEMENTDEFINITIONDEBINDINGSTRENGTH_PREFERRED = "preferred",
    CODE_ELEMENTDEFINITIONDEBINDINGSTRENGTH_EXAMPLE = "example"
};

public enum ElementdefinitionDeTypeVersioning {
    CODE_ELEMENTDEFINITIONDETYPEVERSIONING_EITHER = "either",
    CODE_ELEMENTDEFINITIONDETYPEVERSIONING_INDEPENDENT = "independent",
    CODE_ELEMENTDEFINITIONDETYPEVERSIONING_SPECIFIC = "specific"
};

public enum ElementdefinitionDeSlicingDiscriminatorType {
    CODE_ELEMENTDEFINITIONDESLICINGDISCRIMINATORTYPE_PROFILE = "profile",
    CODE_ELEMENTDEFINITIONDESLICINGDISCRIMINATORTYPE_PATTERN = "pattern",
    CODE_ELEMENTDEFINITIONDESLICINGDISCRIMINATORTYPE_EXISTS = "exists",
    CODE_ELEMENTDEFINITIONDESLICINGDISCRIMINATORTYPE_TYPE = "type",
    CODE_ELEMENTDEFINITIONDESLICINGDISCRIMINATORTYPE_VALUE = "value"
};

public enum ElementdefinitionDeRepresentation {
    CODE_ELEMENTDEFINITIONDEREPRESENTATION_XMLTEXT = "xmlText",
    CODE_ELEMENTDEFINITIONDEREPRESENTATION_CDATEXT = "cdaText",
    CODE_ELEMENTDEFINITIONDEREPRESENTATION_XMLATTR = "xmlAttr",
    CODE_ELEMENTDEFINITIONDEREPRESENTATION_TYPEATTR = "typeAttr",
    CODE_ELEMENTDEFINITIONDEREPRESENTATION_XHTML = "xhtml"
};

public enum ElementdefinitionDeTypeAggregation {
    CODE_ELEMENTDEFINITIONDETYPEAGGREGATION_CONTAINED = "contained",
    CODE_ELEMENTDEFINITIONDETYPEAGGREGATION_BUNDLED = "bundled",
    CODE_ELEMENTDEFINITIONDETYPEAGGREGATION_REFERENCED = "referenced"
};

public enum ElementdefinitionDeConstraintSeverity {
    CODE_ELEMENTDEFINITIONDECONSTRAINTSEVERITY_WARNING = "warning",
    CODE_ELEMENTDEFINITIONDECONSTRAINTSEVERITY_ERROR = "error"
};

public enum ElementdefinitionDeSlicingRules {
    CODE_ELEMENTDEFINITIONDESLICINGRULES_CLOSED = "closed",
    CODE_ELEMENTDEFINITIONDESLICINGRULES_OPENATEND = "openAtEnd",
    CODE_ELEMENTDEFINITIONDESLICINGRULES_OPEN = "open"
};


@r4:DataTypeDefinition {
    name: "ADXP-deliveryInstallationArea",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPDeliveryInstallationArea record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "patientInstruction",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DevicerequestPatientInstruction record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    r4:code valueCode;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "unitValueSet",
    baseType: (),
    elements: {
    
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireUnitValueSet record {|
    *r4:CanonicalExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:canonical valueCanonical;
    string url;
|};


@r4:DataTypeDefinition {
    name: "map",
    baseType: (),
    elements: {
    
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemMap record {|
    *r4:CanonicalExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:canonical valueCanonical;
    string url;
|};


@r4:DataTypeDefinition {
    name: "certainty",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AllergyintoleranceCertainty record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Timezone Offset",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type TzOffset record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "reasonReference",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type WorkflowReasonReference record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "maxValueSet",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ElementdefinitionMaxValueSet record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "reference",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetReference record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "bidirectional",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ConceptBidirectional record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "delta",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationDelta record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "location",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ConsentLocation record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "map",
    baseType: (),
    elements: {
    
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetMap record {|
    *r4:CanonicalExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:canonical valueCanonical;
    string url;
|};


@r4:DataTypeDefinition {
    name: "capabilities",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type Capabilities record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "sequenceNumber",
    baseType: (),
    elements: {
    
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type SpecimenSequenceNumber record {|
    *r4:IntegerExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:integer valueInteger;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Accession",
    baseType: (),
    elements: {
    
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuditeventAccession record {|
    *r4:IdentifierExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Identifier valueIdentifier;
    string url;
|};


@r4:DataTypeDefinition {
    name: "workflowStatus",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetWorkflowStatus record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "uncertainty",
    baseType: (),
    elements: {
    
        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoUncertainty record {|
    *r4:DecimalExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    decimal valueDecimal;
    string url;
|};


@r4:DataTypeDefinition {
    name: "selector",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ElementdefinitionSelector record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "resolutionAge",
    baseType: (),
    elements: {
    
        "valueAge": {
            name: "valueAge",
            dataType: r4:Age,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AllergyintoleranceResolutionAge record {|
    *r4:AgeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Age valueAge;
    string url;
|};


@r4:DataTypeDefinition {
    name: "reasonRefuted",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AllergyintoleranceReasonRefuted record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "addendumOf",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DiagnosticReportAddendumOf record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "trusted-expansion",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemTrustedExpansion record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "summary",
    baseType: (),
    elements: {
    
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionSummary record {|
    *r4:MarkdownExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:markdown valueMarkdown;
    string url;
|};


@r4:DataTypeDefinition {
    name: "label",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemLabel record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Anonymized",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuditeventAnonymized record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "usageMode",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireUsageMode record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "expirationDate",
    baseType: (),
    elements: {
    
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetExpirationDate record {|
    *r4:DateExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:date valueDate;
    string url;
|};


@r4:DataTypeDefinition {
    name: "permitted-value-valueset",
    baseType: (),
    elements: {
    
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PermittedValueValueset record {|
    *r4:CanonicalExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:canonical valueCanonical;
    string url;
|};


@r4:DataTypeDefinition {
    name: "relatedArtifact",
    baseType: (),
    elements: {
    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },    
        "valueRelatedArtifact": {
            name: "valueRelatedArtifact",
            dataType: r4:RelatedArtifact,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type WorkflowRelatedArtifact record {|
    *r4:RelatedArtifactExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string url;
    r4:RelatedArtifact valueRelatedArtifact;
|};


@r4:DataTypeDefinition {
    name: "concept-comments",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemConceptComments record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "codegen-super",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionCodegenSuper record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "timeOffset",
    baseType: (),
    elements: {
    
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationTimeOffset record {|
    *r4:IntegerExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:integer valueInteger;
    string url;
|};


@r4:DataTypeDefinition {
    name: "authority",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OperationoutcomeAuthority record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "minValue",
    baseType: (),
    elements: {
    
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MinValue record {|
    *r4:DateExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:date valueDate;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-unitID",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPUnitID record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "choiceOrientation",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireChoiceOrientation record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "warning",
    baseType: (),
    elements: {
    
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetWarning record {|
    *r4:MarkdownExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:markdown valueMarkdown;
    string url;
|};


@r4:DataTypeDefinition {
    name: "reason",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireresponseReason record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "locationPerformed",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DiagnosticReportLocationPerformed record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "implantStatus",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DeviceImplantStatus record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "permitted-value-conceptmap",
    baseType: (),
    elements: {
    
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PermittedValueConceptmap record {|
    *r4:CanonicalExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:canonical valueCanonical;
    string url;
|};


@r4:DataTypeDefinition {
    name: "period",
    baseType: (),
    elements: {
    
        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OrganizationPeriod record {|
    *r4:PeriodExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period valuePeriod;
    string url;
|};


@r4:DataTypeDefinition {
    name: "nationality",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientNationality record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    r4:Period valuePeriod;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "initiatingPerson",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfInitiatingPerson record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "BodyStructure Reference",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type BodySite record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "receivingOrganization",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfReceivingOrganization record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "cadavericDonor",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientCadavericDonor record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "otherName",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetOtherName record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string valueString;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "systemName",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetSystemName record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "unit",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireUnit record {|
    *r4:CodingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    string url;
|};


@r4:DataTypeDefinition {
    name: "specimenCode",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationSpecimenCode record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "keyWord",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetKeyWord record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "expectation",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CapabilitystatementExpectation record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "signature",
    baseType: (),
    elements: {
    
        "valueSignature": {
            name: "valueSignature",
            dataType: r4:Signature,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireresponseSignature record {|
    *r4:SignatureExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Signature valueSignature;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ParticipantObjectContainsStudy",
    baseType: (),
    elements: {
    
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuditeventParticipantObjectContainsStudy record {|
    *r4:IdentifierExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Identifier valueIdentifier;
    string url;
|};


@r4:DataTypeDefinition {
    name: "minValueSet",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ElementdefinitionMinValueSet record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "nullFlavor",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoNullFlavor record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "measureInfo",
    baseType: (),
    elements: {
    
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfMeasureInfo record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:canonical valueCanonical;
    string valueString;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "allowed-type",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OperationdefinitionAllowedType record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-houseNumberNumeric",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPHouseNumberNumeric record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "xml-no-order",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionXmlNoOrder record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "cdsHooksEndpoint",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfCdsHooksEndpoint record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "conceptOrder",
    baseType: (),
    elements: {
    
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemConceptOrder record {|
    *r4:IntegerExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:integer valueInteger;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-additionalLocator",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPAdditionalLocator record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "daysOfCycle",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type TimingDaysOfCycle record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:integer valueInteger;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "haploid",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HlaGenotypingResultsHaploid record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "dueTo",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ConditionDueTo record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "versionNumber",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CompositionClinicaldocumentVersionNumber record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ProductShelfLife",
    baseType: (),
    elements: {
    
        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique identifier for the packaged Medicinal Product.",
            path: "ProductShelfLife.identifier"
        },    
        "period": {
            name: "period",
            dataType: r4:Quantity,
            min: 1,
            max: 1,
            isArray: false,
            description: "The shelf life time period can be specified using a numerical value for the period of time and its unit of time measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.",
            path: "ProductShelfLife.period"
        },    
        "specialPrecautionsForStorage": {
            name: "specialPrecautionsForStorage",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Special precautions for storage, if any, can be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified.",
            path: "ProductShelfLife.specialPrecautionsForStorage"
        },    
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ProductShelfLife.modifierExtension"
        },    
        "'type": {
            name: "'type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "This describes the shelf life, taking into account various scenarios such as shelf life of the packaged Medicinal Product itself, shelf life after transformation where necessary and shelf life after the first opening of a bottle, etc. The shelf life type shall be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified.",
            path: "ProductShelfLife.type"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ProductShelfLife record {|
    *r4:ProductShelfLife;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Identifier identifier?;
    r4:Quantity period;
    r4:CodeableConcept[] specialPrecautionsForStorage?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept 'type;
|};


@r4:DataTypeDefinition {
    name: "constraint",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueId": {
            name: "valueId",
            dataType: r4:id,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireConstraint record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:id valueId;
    string valueString;
    r4:code valueCode;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "country",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ContactpointCountry record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "normative-version",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionNormativeVersion record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Encrypted",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuditeventEncrypted record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "reagent",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationReagent record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-streetNameBase",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPStreetNameBase record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "optionPrefix",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireOptionPrefix record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "animalSpecies",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PractitionerAnimalSpecies record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "validDate",
    baseType: (),
    elements: {
    
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IdentifierValidDate record {|
    *r4:DateTimeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:dateTime valueDateTime;
    string url;
|};


@r4:DataTypeDefinition {
    name: "citizenship",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientCitizenship record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    r4:Period valuePeriod;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "baseType",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireBaseType record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "partner-name",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HumannamePartnerName record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Allele",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationGeneticsAllele record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    decimal valueDecimal;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "reasonCancelled",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type EncounterReasonCancelled record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "glstring",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HlaGenotypingResultsGlstring record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    r4:uri valueUri;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "fmm-no-warnings",
    baseType: (),
    elements: {
    
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionFmmNoWarnings record {|
    *r4:IntegerExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:integer valueInteger;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Variant",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationGeneticsVariant record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "display-hint",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionDisplayHint record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "entryFormat",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type EntryFormat record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "replaces",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type RequestReplaces record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "deprecated",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetDeprecated record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "candidateList",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type TaskCandidateList record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "concept-definition",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetConceptDefinition record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Translation",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type Translation record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    r4:code valueCode;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "birthTime",
    baseType: (),
    elements: {
    
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientBirthTime record {|
    *r4:DateTimeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:dateTime valueDateTime;
    string url;
|};


@r4:DataTypeDefinition {
    name: "mothers-family",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HumannameMothersFamily record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "unitOption",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireUnitOption record {|
    *r4:CodingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    string url;
|};


@r4:DataTypeDefinition {
    name: "severity",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type FamilymemberhistorySeverity record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "encounterType",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfEncounterType record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "toocostly",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetToocostly record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "relevantHistory",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type RequestRelevantHistory record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "sctdescid",
    baseType: (),
    elements: {
    
        "valueId": {
            name: "valueId",
            dataType: r4:id,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodingSctdescid record {|
    *r4:IdExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:id valueId;
    string url;
|};


@r4:DataTypeDefinition {
    name: "profile-element",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ElementdefinitionProfileElement record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "unclosed",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetUnclosed record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "explicit-type-name",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionExplicitTypeName record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Item",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ServicerequestGeneticsItem record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    r4:Reference valueReference;
    r4:code valueCode;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-deliveryInstallationType",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPDeliveryInstallationType record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "library",
    baseType: (),
    elements: {
    
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfLibrary record {|
    *r4:CanonicalExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:canonical valueCanonical;
    string url;
|};


@r4:DataTypeDefinition {
    name: "author",
    baseType: (),
    elements: {
    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },    
        "valueContactDetail": {
            name: "valueContactDetail",
            dataType: r4:ContactDetail,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetAuthor record {|
    *r4:ContactDetailExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string url;
    r4:ContactDetail valueContactDetail;
|};


@r4:DataTypeDefinition {
    name: "genderIdentity",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientGenderIdentity record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "approvalDate",
    baseType: (),
    elements: {
    
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ResourceApprovalDate record {|
    *r4:DateExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:date valueDate;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ruledOut",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ConditionRuledOut record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "replacedby",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemReplacedby record {|
    *r4:CodingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Design Note",
    baseType: (),
    elements: {
    
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DesignNote record {|
    *r4:MarkdownExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:markdown valueMarkdown;
    string url;
|};


@r4:DataTypeDefinition {
    name: "referenceProfile",
    baseType: (),
    elements: {
    
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireReferenceProfile record {|
    *r4:CanonicalExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:canonical valueCanonical;
    string url;
|};


@r4:DataTypeDefinition {
    name: "encounterClass",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfEncounterClass record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "relativeDateTime",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueDuration": {
            name: "valueDuration",
            dataType: r4:Duration,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfRelativeDateTime record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string valueString;
    r4:code valueCode;
    r4:Duration valueDuration;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "http-response-header",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HttpResponseHeader record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "parent",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type FamilyMemberHistoryGeneticsParent record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    r4:Reference valueReference;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "steward",
    baseType: (),
    elements: {
    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },    
        "valueContactDetail": {
            name: "valueContactDetail",
            dataType: r4:ContactDetail,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetSteward record {|
    *r4:ContactDetailExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string url;
    r4:ContactDetail valueContactDetail;
|};


@r4:DataTypeDefinition {
    name: "bindingName",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ElementdefinitionBindingName record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "keyWord",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemKeyWord record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "recipientType",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfRecipientType record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "fhir-type",
    baseType: (),
    elements: {
    
        "valueUrl": {
            name: "valueUrl",
            dataType: r4:urlType,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionFhirType record {|
    *r4:UrlExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:urlType valueUrl;
    string url;
|};


@r4:DataTypeDefinition {
    name: "careplan",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OpenEHRCareplan record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "expand-rules",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetExpandRules record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "hierarchy",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionHierarchy record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-streetNameType",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPStreetNameType record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "DNARegionName",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationGeneticsDNARegionName record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "rules-text",
    baseType: (),
    elements: {
    
        "valueMarkdown": {
            name: "valueMarkdown",
            dataType: r4:markdown,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetRulesText record {|
    *r4:MarkdownExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:markdown valueMarkdown;
    string url;
|};


@r4:DataTypeDefinition {
    name: "referenceResource",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireReferenceResource record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "location",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OpenEHRLocation record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "maxSize",
    baseType: (),
    elements: {
    
        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MaxSize record {|
    *r4:DecimalExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    decimal valueDecimal;
    string url;
|};


@r4:DataTypeDefinition {
    name: "profile",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OperationdefinitionProfile record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "match-grade",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MatchGrade record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "NumberOfInstances",
    baseType: (),
    elements: {
    
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuditeventNumberOfInstances record {|
    *r4:IntegerExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:integer valueInteger;
    string url;
|};


@r4:DataTypeDefinition {
    name: "special-status",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetSpecialStatus record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "systemUserType",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfSystemUserType record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-streetAddressLine",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPStreetAddressLine record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-deliveryAddressLine",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPDeliveryAddressLine record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "area",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ContactpointArea record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "basedOn",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type EventBasedOn record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "relationship",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type GoalRelationship record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    r4:Reference valueReference;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "location",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type EventLocation record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "DocumentSectionLibrary",
    baseType: (),
    elements: {
        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ExampleSectionLibrary record {|
    *Composition;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
|};


@r4:DataTypeDefinition {
    name: "pertainsToGoal",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ResourcePertainsToGoal record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "researchStudy",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type WorkflowResearchStudy record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "extends",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DiagnosticReportExtends record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "DocumentStructure",
    baseType: (),
    elements: {
        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ExampleComposition record {|
    *Composition;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
|};


@r4:DataTypeDefinition {
    name: "identifier",
    baseType: (),
    elements: {
    
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ElementdefinitionIdentifier record {|
    *r4:IdentifierExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Identifier valueIdentifier;
    string url;
|};


@r4:DataTypeDefinition {
    name: "objectClass",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObjectClass record {|
    *r4:CodingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    string url;
|};


@r4:DataTypeDefinition {
    name: "initiatingOrganization",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfInitiatingOrganization record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "search-parameter-combination",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CapabilitystatementSearchParameterCombination record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "Data Absent Reason",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DataAbsentReason record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "expression",
    baseType: (),
    elements: {
    
        "valueExpression": {
            name: "valueExpression",
            dataType: r4:Expression,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfExpression record {|
    *r4:ExpressionExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Expression valueExpression;
    string url;
|};


@r4:DataTypeDefinition {
    name: "sourceReference",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemSourceReference record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "instantiatesCanonical",
    baseType: (),
    elements: {
    
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type WorkflowInstantiatesCanonical record {|
    *r4:CanonicalExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:canonical valueCanonical;
    string url;
|};


@r4:DataTypeDefinition {
    name: "acceptance",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type GoalAcceptance record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    r4:Reference valueReference;
    r4:code valueCode;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "websocket",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CapabilitystatementWebsocket record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Timezone Code",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type TzCode record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "occurredFollowing",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ConditionOccurredFollowing record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "table-name",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionTableName record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "NotificationEndpoint",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ConsentNotificationEndpoint record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "otherConfidentiality",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CompositionClinicaldocumentOtherConfidentiality record {|
    *r4:CodingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Instance",
    baseType: (),
    elements: {
    
        "valueIdentifier": {
            name: "valueIdentifier",
            dataType: r4:Identifier,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuditeventInstance record {|
    *r4:IdentifierExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Identifier valueIdentifier;
    string url;
|};


@r4:DataTypeDefinition {
    name: "MarketingStatus",
    baseType: (),
    elements: {
    
        "country": {
            name: "country",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The country in which the marketing authorisation has been granted shall be specified It should be specified using the ISO 3166 ‑ 1 alpha-2 code elements.",
            path: "MarketingStatus.country"
        },    
        "dateRange": {
            name: "dateRange",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "The date when the Medicinal Product is placed on the market by the Marketing Authorisation Holder (or where applicable, the manufacturer/distributor) in a country and/or jurisdiction shall be provided A complete date consisting of day, month and year shall be specified using the ISO 8601 date format NOTE “Placed on the market” refers to the release of the Medicinal Product into the distribution chain.",
            path: "MarketingStatus.dateRange"
        },    
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "MarketingStatus.modifierExtension"
        },    
        "jurisdiction": {
            name: "jurisdiction",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where a Medicines Regulatory Agency has granted a marketing authorisation for which specific provisions within a jurisdiction apply, the jurisdiction can be specified using an appropriate controlled terminology The controlled term and the controlled term identifier shall be specified.",
            path: "MarketingStatus.jurisdiction"
        },    
        "status": {
            name: "status",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "This attribute provides information on the status of the marketing of the medicinal product See ISO/TS 20443 for more information and examples.",
            path: "MarketingStatus.status"
        },    
        "restoreDate": {
            name: "restoreDate",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when the Medicinal Product is placed on the market by the Marketing Authorisation Holder (or where applicable, the manufacturer/distributor) in a country and/or jurisdiction shall be provided A complete date consisting of day, month and year shall be specified using the ISO 8601 date format NOTE “Placed on the market” refers to the release of the Medicinal Product into the distribution chain.",
            path: "MarketingStatus.restoreDate"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MarketingStatus record {|
    *r4:MarketingStatus;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept country;
    r4:Period dateRange;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept jurisdiction?;
    r4:CodeableConcept status;
    r4:dateTime restoreDate?;
|};


@r4:DataTypeDefinition {
    name: "detail",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type FlagDetail record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "assertedDate",
    baseType: (),
    elements: {
    
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AllergyintoleranceAssertedDate record {|
    *r4:DateTimeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:dateTime valueDateTime;
    string url;
|};


@r4:DataTypeDefinition {
    name: "EN-representation",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoENRepresentation record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-deliveryMode",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPDeliveryMode record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "preferenceType",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientPreferenceType record {|
    *r4:CodingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    string url;
|};


@r4:DataTypeDefinition {
    name: "detectedIssue",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OperationoutcomeDetectedIssue record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "bestpractice",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ElementdefinitionBestpractice record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "prohibited",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CapabilitystatementProhibited record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Analysis",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DiagnosticReportGeneticsAnalysis record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "Variable",
    baseType: (),
    elements: {
    
        "valueExpression": {
            name: "valueExpression",
            dataType: r4:Expression,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type Variable record {|
    *r4:ExpressionExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Expression valueExpression;
    string url;
|};


@r4:DataTypeDefinition {
    name: "hidden",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireHidden record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "reviewer",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireresponseReviewer record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "primaryInd",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PractitionerrolePrimaryInd record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "boundary-geojson",
    baseType: (),
    elements: {
    
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type LocationBoundaryGeojson record {|
    *r4:AttachmentExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Attachment valueAttachment;
    string url;
|};


@r4:DataTypeDefinition {
    name: "activityStatusDate",
    baseType: (),
    elements: {
    
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetActivityStatusDate record {|
    *r4:DateExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:date valueDate;
    string url;
|};


@r4:DataTypeDefinition {
    name: "modeOfArrival",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type EncounterModeOfArrival record {|
    *r4:CodingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-unitType",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPUnitType record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "trusted-expansion",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetTrustedExpansion record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "CopyNumberEvent",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationGeneticsCopyNumberEvent record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "location-distance",
    baseType: (),
    elements: {
    
        "valueDistance": {
            name: "valueDistance",
            dataType: r4:Distance,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type LocationDistance record {|
    *r4:DistanceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Distance valueDistance;
    string url;
|};


@r4:DataTypeDefinition {
    name: "messageheader-response-request",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MessageheaderResponseRequest record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "standards-status",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionStandardsStatus record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "applicable-version",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionApplicableVersion record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "receivingPerson",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfReceivingPerson record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "performerOrder",
    baseType: (),
    elements: {
    
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type RequestPerformerOrder record {|
    *r4:IntegerExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:integer valueInteger;
    string url;
|};


@r4:DataTypeDefinition {
    name: "bodyPosition",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationBodyPosition record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "focusCode",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationFocusCode record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "dependencies",
    baseType: (),
    elements: {
    
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionDependencies record {|
    *r4:CanonicalExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:canonical valueCanonical;
    string url;
|};


@r4:DataTypeDefinition {
    name: "test",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OpenEHRTest record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Ancestry",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationGeneticsAncestry record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    decimal valueDecimal;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "risk",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DiagnosticReportRisk record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-delimiter",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPDelimiter record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "inheritedExtensibleValueSet",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ElementdefinitionInheritedExtensibleValueSet record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "extensible",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetExtensible record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "exact",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type TimingExact record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "author",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemAuthor record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "instantiatesUri",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type WorkflowInstantiatesUri record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Display Name",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type Display record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "congregation",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientCongregation record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "exposureDescription",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OpenEHRExposureDescription record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "caseSensitive",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetCaseSensitive record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "EN-use",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoENUse record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Ordinal Value",
    baseType: (),
    elements: {
    
        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OrdinalValue record {|
    *r4:DecimalExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    decimal valueDecimal;
    string url;
|};


@r4:DataTypeDefinition {
    name: "effectivePeriod",
    baseType: (),
    elements: {
    
        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ResourceEffectivePeriod record {|
    *r4:PeriodExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period valuePeriod;
    string url;
|};


@r4:DataTypeDefinition {
    name: "citation",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfCitation record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Relative Date Criteria",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueDuration": {
            name: "valueDuration",
            dataType: r4:Duration,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type RelativeDate record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    r4:code valueCode;
    r4:Duration valueDuration;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "SOPClass",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AuditeventSOPClass record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Geolocation",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueDecimal": {
            name: "valueDecimal",
            dataType: decimal,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type Geolocation record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    decimal valueDecimal;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "performerFunction",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type EventPerformerFunction record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "effectiveDate",
    baseType: (),
    elements: {
    
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemEffectiveDate record {|
    *r4:DateExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:date valueDate;
    string url;
|};


@r4:DataTypeDefinition {
    name: "systemUserLanguage",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfSystemUserLanguage record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "itemControl",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireItemControl record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "fullUrl",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ParametersFullUrl record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "media",
    baseType: (),
    elements: {
    
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CommunicationMedia record {|
    *r4:AttachmentExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Attachment valueAttachment;
    string url;
|};


@r4:DataTypeDefinition {
    name: "calculatedValue",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfCalculatedValue record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "FamilyMemberHistory",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DiagnosticReportGeneticsFamilyMemberHistory record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "importance",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientImportance record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "mimeType",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MimeType record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "supported-system",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CapabilitystatementSupportedSystem record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "outcome",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ConditionOutcome record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "own-name",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HumannameOwnName record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "sourceReference",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetSourceReference record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "causedBy",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ProcedureCausedBy record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "changeBase",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ListChangeBase record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "section-subject",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CompositionSectionSubject record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ValidityPeriod",
    baseType: (),
    elements: {
    
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqmValidityPeriod record {|
    *r4:DateTimeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:dateTime valueDateTime;
    string url;
|};


@r4:DataTypeDefinition {
    name: "priority",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type FlagPriority record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "precondition",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationPrecondition record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "strengthOfRecommendation",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfStrengthOfRecommendation record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "progressStatus",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ProcedureProgressStatus record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "allele-database",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HlaGenotypingResultsAlleleDatabase record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "oauth-uris",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OauthUris record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "usage",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemUsage record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "maxValue",
    baseType: (),
    elements: {
    
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MaxValue record {|
    *r4:DateExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:date valueDate;
    string url;
|};


@r4:DataTypeDefinition {
    name: "animal",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientAnimal record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "disability",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientDisability record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "own-prefix",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type HumannameOwnPrefix record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "translatable",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ElementdefinitionTranslatable record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "effectiveDate",
    baseType: (),
    elements: {
    
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetEffectiveDate record {|
    *r4:DateTimeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:dateTime valueDateTime;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-buildingNumberSuffix",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPBuildingNumberSuffix record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "observation",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type FamilyMemberHistoryGeneticsObservation record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "associatedEncounter",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type EncounterAssociatedEncounter record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "wg",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionWg record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "PQ-translation",
    baseType: (),
    elements: {
    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        },    
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoPQTranslation record {|
    *r4:QuantityExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string url;
    r4:Quantity valueQuantity;
|};


@r4:DataTypeDefinition {
    name: "initialValue",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfInitialValue record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "history",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.extension.value[x]"
        },    
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemHistory record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    r4:dateTime valueDateTime;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "concept-comments",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetConceptComments record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Narrative Link",
    baseType: (),
    elements: {
    
        "valueUrl": {
            name: "valueUrl",
            dataType: r4:urlType,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type NarrativeLink record {|
    *r4:UrlExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:urlType valueUrl;
    string url;
|};


@r4:DataTypeDefinition {
    name: "abatement",
    baseType: (),
    elements: {
    
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type FamilymemberhistoryAbatement record {|
    *r4:DateExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:date valueDate;
    string url;
|};


@r4:DataTypeDefinition {
    name: "namespace",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ElementdefinitionNamespace record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "incisionDateTime",
    baseType: (),
    elements: {
    
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ProcedureIncisionDateTime record {|
    *r4:DateTimeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:dateTime valueDateTime;
    string url;
|};


@r4:DataTypeDefinition {
    name: "related",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ConditionRelated record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "statusReason",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type EventStatusReason record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "substanceExposureRisk",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type AllergyintoleranceSubstanceExposureRisk record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "EN-qualifier",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoENQualifier record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "fmm",
    baseType: (),
    elements: {
    
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionFmm record {|
    *r4:IntegerExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:integer valueInteger;
    string url;
|};


@r4:DataTypeDefinition {
    name: "partOf",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type EventPartOf record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "minOccurs",
    baseType: (),
    elements: {
    
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireMinOccurs record {|
    *r4:IntegerExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:integer valueInteger;
    string url;
|};


@r4:DataTypeDefinition {
    name: "religion",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientReligion record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "replaces",
    baseType: (),
    elements: {
    
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type Replaces record {|
    *r4:CanonicalExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:canonical valueCanonical;
    string url;
|};


@r4:DataTypeDefinition {
    name: "authoritativeSource",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetAuthoritativeSource record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "supplement",
    baseType: (),
    elements: {
    
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetSupplement record {|
    *r4:CanonicalExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:canonical valueCanonical;
    string url;
|};


@r4:DataTypeDefinition {
    name: "collectionPriority",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type SpecimenCollectionPriority record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-deliveryInstallationQualifier",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPDeliveryInstallationQualifier record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "maxDecimalPlaces",
    baseType: (),
    elements: {
    
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MaxDecimalPlaces record {|
    *r4:IntegerExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:integer valueInteger;
    string url;
|};


@r4:DataTypeDefinition {
    name: "parameterSource",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetParameterSource record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "dayOfMonth",
    baseType: (),
    elements: {
    
        "valuePositiveInt": {
            name: "valuePositiveInt",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type TimingDayOfMonth record {|
    *r4:PositiveIntExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:positiveInt valuePositiveInt;
    string url;
|};


@r4:DataTypeDefinition {
    name: "expansionSource",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetExpansionSource record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-direction",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPDirection record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "usage",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetUsage record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "activity-title",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CareplanActivityTitle record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "adoptionInfo",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientAdoptionInfo record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "Rendered Value",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type RenderedValue record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "assertedDate",
    baseType: (),
    elements: {
    
        "valueDateTime": {
            name: "valueDateTime",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ConditionAssertedDate record {|
    *r4:DateTimeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:dateTime valueDateTime;
    string url;
|};


@r4:DataTypeDefinition {
    name: "method",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ProcedureMethod record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "systemUserTaskContext",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfSystemUserTaskContext record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "deviceCode",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationDeviceCode record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "supportingInfo",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type WorkflowSupportingInfo record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "relatedPerson",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PatientRelatedPerson record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "expirationDate",
    baseType: (),
    elements: {
    
        "valueDate": {
            name: "valueDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemExpirationDate record {|
    *r4:DateExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:date valueDate;
    string url;
|};


@r4:DataTypeDefinition {
    name: "system",
    baseType: (),
    elements: {
    
        "valueCanonical": {
            name: "valueCanonical",
            dataType: r4:canonical,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetSystem record {|
    *r4:CanonicalExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:canonical valueCanonical;
    string url;
|};


@r4:DataTypeDefinition {
    name: "preferred",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoPreferred record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "category",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionCategory record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "processingTime",
    baseType: (),
    elements: {
    
        "valuePeriod": {
            name: "valuePeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type SpecimenProcessingTime record {|
    *r4:PeriodExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Period valuePeriod;
    string url;
|};


@r4:DataTypeDefinition {
    name: "specialHandling",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type SpecimenSpecialHandling record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "type",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type FamilymemberhistoryType record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "replaces",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DiagnosticReportReplaces record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "initiatingLocation",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CommunicationrequestInitiatingLocation record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "local",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ContactpointLocal record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ADXP-censusTract",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADXPCensusTract record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "secondaryFinding",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationSecondaryFinding record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "SC-coding",
    baseType: (),
    elements: {
    
        "valueCoding": {
            name: "valueCoding",
            dataType: r4:Coding,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoSCCoding record {|
    *r4:CodingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Coding valueCoding;
    string url;
|};


@r4:DataTypeDefinition {
    name: "patient-record",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type FamilymemberhistoryPatientRecord record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "issue-source",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type OperationoutcomeIssueSource record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "precondition",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ServicerequestPrecondition record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AD-use",
    baseType: (),
    elements: {
    
        "valueCode": {
            name: "valueCode",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type IsoADUse record {|
    *r4:CodeExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:code valueCode;
    string url;
|};


@r4:DataTypeDefinition {
    name: "otherName",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CodesystemOtherName record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string valueString;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "PhaseSet",
    baseType: (),
    elements: {
    
        "valueBase64Binary": {
            name: "valueBase64Binary",
            dataType: r4:base64Binary,
            min: 0,
            max: 0,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationGeneticsPhaseSet record {|
    *r4:Base64BinaryExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    r4:uri valueUri;
    r4:uri url;
|};


@r4:DataTypeDefinition {
    name: "Witness",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ConsentWitness record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "ancestor",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type StructuredefinitionAncestor record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "schedule",
    baseType: (),
    elements: {
    
        "valueTiming": {
            name: "valueTiming",
            dataType: r4:Timing,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ProcedureSchedule record {|
    *r4:TimingExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Timing valueTiming;
    string url;
|};


@r4:DataTypeDefinition {
    name: "gatewayDevice",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ObservationGatewayDevice record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "AssessedCondition",
    baseType: (),
    elements: {
    
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type DiagnosticReportGeneticsAssessedCondition record {|
    *r4:ReferenceExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:Reference valueReference;
    string url;
|};


@r4:DataTypeDefinition {
    name: "adaptiveFeedingDevice",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type NutritionorderAdaptiveFeedingDevice record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "minLength",
    baseType: (),
    elements: {
    
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type MinLength record {|
    *r4:IntegerExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:integer valueInteger;
    string url;
|};


@r4:DataTypeDefinition {
    name: "extension",
    baseType: (),
    elements: {
    
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ContactpointExtension record {|
    *r4:StringExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    string valueString;
    string url;
|};


@r4:DataTypeDefinition {
    name: "isDryWeight",
    baseType: (),
    elements: {
    
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type SpecimenIsDryWeight record {|
    *r4:BooleanExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    boolean valueBoolean;
    string url;
|};


@r4:DataTypeDefinition {
    name: "systemRef",
    baseType: (),
    elements: {
    
        "valueUri": {
            name: "valueUri",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ValuesetSystemRef record {|
    *r4:UriExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:uri valueUri;
    string url;
|};


@r4:DataTypeDefinition {
    name: "recipientLanguage",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type CqfRecipientLanguage record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "allowedUnits",
    baseType: (),
    elements: {
    
        "valueCodeableConcept": {
            name: "valueCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type ElementdefinitionAllowedUnits record {|
    *r4:CodeableConceptExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:CodeableConcept valueCodeableConcept;
    string url;
|};


@r4:DataTypeDefinition {
    name: "maxOccurs",
    baseType: (),
    elements: {
    
        "valueInteger": {
            name: "valueInteger",
            dataType: r4:integer,
            min: 1,
            max: 1,
            isArray: false,
            description: "Value of extension - must be one of a constrained set of the data types (see [Extensibility](http://hl7.org/fhir/extensibility.html) for a list).",
            path: "Extension.value[x]"
        },    
        "url": {
            name: "url",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Source of the definition for the extension code - a logical name or a URL.",
            path: "Extension.url"
        }        },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type QuestionnaireMaxOccurs record {|
    *r4:IntegerExtension;

    //Inherited child element from "Element" (Redefining to maintain order when serialize) (START)
    string id?;
    r4:Extension[] extension?;
    //Inherited child element from "Element" (Redefining to maintain order when serialize) (END)
    r4:integer valueInteger;
    string url;
|};


