// Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r4;

public const string PROFILE_BASE_PASCLAIM = "http://hl7.org/fhir/us/davinci-pas/StructureDefinition/profile-claim";
public const RESOURCE_NAME_PASCLAIM = "Claim";

# FHIR PASClaim resource record.
#
# + resourceType - The type of the resource describes
# + insurance - Financial instruments for reimbursement for the health care products and services specified on the claim.
# + extension - An Extension
# * extension Slicings
# 1) Extension: Used to provide required information about home health care services. (CR6)
# - min = 0
# - max = 1
#
# 2) Extension: A code specifying the level of service being requested (UM06)
# - min = 0
# - max = 1
#
# 3) Extension: Information about a hospital claim being requested.
# - min = 0
# - max = 1
#
# 4) Extension: Used to indicate condition codes for various requests for service.
# - min = 0
# - max = *
#
# + use - A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non-binding adjudication of the listed products and services which could be provided in the future.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - The base language in which the resource is written.
# + 'type - The category of claim, e.g. oral, pharmacy, vision, institutional, professional.
# + accident - Details of an accident which resulted in injuries which required the products and services listed in the claim.
# + payee - The party to be reimbursed for cost of the products and services according to the terms of the policy.
# + total - The total value of the all the items in the claim.
# + related - Other claims which are related to this claim such as prior submissions or claims for related services or for the same event.
# + supportingInfo - Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues.
# * supportingInfo Slicings
# 1) PASClaimSupportingInfoPatientEvent: Information about the dates of the event that are being requested.
# - min = 0
# - max = 1
#
# 2) PASClaimSupportingInfoDischargeDates: Information about the discharge dates of a hospital admission being requested.
# - min = 0
# - max = 1
#
# 3) PASClaimSupportingInfoAdditionalInformation: Send additional paperwork or supporting information for the request. This can be most commonly a DocumentReference profile although any type of information is allowed.
# - min = 0
# - max = *
#
# 4) PASClaimSupportingInfoAdmissionDates: Information about the admission dates of a hospital admission being requested.
# - min = 0
# - max = 1
#
# 5) PASClaimSupportingInfoMessageText: Send text messages to the UMO.
# - min = 0
# - max = *
#
# + fundsReserve - A code to indicate whether and for whom funds are to be reserved for future claims.
# + provider - The provider which is responsible for the claim, predetermination or preauthorization.
# + insurer - The Insurer who is target of the request.
# + patient - The party to whom the professional services and/or products have been supplied or are being considered and for whom actual or forecast reimbursement is sought.
# + enterer - Individual who created the claim, predetermination or preauthorization.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + careTeam - The members of the team who provided the products and services.
# * careTeam Slicings
# 1) PASClaimCareTeamOverallClaimMember: Care Team Providers that are applicable to all services being requested. NOTE: Only the first 14 can be sent in the X12 Request.
# - min = 0
# - max = *
#
# 2) PASClaimCareTeamItemClaimMember: Care Team Providers that are applicable to a specific item (as referenced by that item). NOTE: Only the first 10 can be sent in the X12 Request.
# - min = 0
# - max = *
#
# + identifier - An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.
# + item - A claim line. Either a simple product or service or a 'group' of details which can each be a simple items or groups of sub-details.
# + created - The date this resource was created.
# + diagnosis - Information about diagnoses relevant to the claim items.
# + originalPrescription - Original prescription which has been superseded by this prescription to support the dispensing of pharmacy services, medications or products.
# + procedure - Procedures performed on the patient relevant to the billing items with the claim.
# + priority - The provider-required urgency of processing the request. Typical values include: stat, routine deferred.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + referral - A reference to a referral resource.
# + prescription - Prescription to support the dispensing of pharmacy, device or vision products.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + billablePeriod - The period for which charges are being submitted.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + subType - A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.
# + facility - Facility where the services were provided.
# + status - The status of the resource instance.
@r4:ResourceDefinition {
    resourceType: "Claim",
    baseType: r4:DomainResource,
    profile: "http://hl7.org/fhir/us/davinci-pas/StructureDefinition/profile-claim",
    elements: {
        "insurance": {
            name: "insurance",
            dataType: PASClaimInsurance,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Claim.insurance"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Claim.extension"
        },
        "use": {
            name: "use",
            dataType: PASClaimUse,
            min: 1,
            max: 1,
            isArray: false,
            path: "Claim.use",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-use|4.0.1"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Claim.modifierExtension"
        },
        "language": {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "Claim.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            path: "Claim.type",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-type"
        },
        "accident": {
            name: "accident",
            dataType: PASClaimAccident,
            min: 0,
            max: 1,
            isArray: false,
            path: "Claim.accident"
        },
        "payee": {
            name: "payee",
            dataType: PASClaimPayee,
            min: 0,
            max: 1,
            isArray: false,
            path: "Claim.payee"
        },
        "total": {
            name: "total",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            path: "Claim.total"
        },
        "related": {
            name: "related",
            dataType: PASClaimRelated,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Claim.related"
        },
        "supportingInfo": {
            name: "supportingInfo",
            dataType: PASClaimSupportingInfo,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Claim.supportingInfo"
        },
        "fundsReserve": {
            name: "fundsReserve",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Claim.fundsReserve",
            valueSet: "http://hl7.org/fhir/ValueSet/fundsreserve"
        },
        "provider": {
            name: "provider",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "Claim.provider"
        },
        "insurer": {
            name: "insurer",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "Claim.insurer"
        },
        "patient": {
            name: "patient",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "Claim.patient"
        },
        "enterer": {
            name: "enterer",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Claim.enterer"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "Claim.id"
        },
        "text": {
            name: "text",
            dataType: r4:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "Claim.text"
        },
        "careTeam": {
            name: "careTeam",
            dataType: PASClaimCareTeam,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Claim.careTeam"
        },
        "identifier": {
            name: "identifier",
            dataType: ProfileIdentifier,
            min: 1,
            max: 2,
            isArray: true,
            path: "Claim.identifier"
        },
        "item": {
            name: "item",
            dataType: PASClaimItem,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Claim.item"
        },
        "created": {
            name: "created",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            path: "Claim.created"
        },
        "diagnosis": {
            name: "diagnosis",
            dataType: PASClaimDiagnosis,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Claim.diagnosis"
        },
        "originalPrescription": {
            name: "originalPrescription",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Claim.originalPrescription"
        },
        "procedure": {
            name: "procedure",
            dataType: PASClaimProcedure,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Claim.procedure"
        },
        "priority": {
            name: "priority",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            path: "Claim.priority",
            valueSet: "http://hl7.org/fhir/ValueSet/process-priority"
        },
        "contained": {
            name: "contained",
            dataType: r4:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "Claim.contained"
        },
        "referral": {
            name: "referral",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Claim.referral"
        },
        "prescription": {
            name: "prescription",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Claim.prescription"
        },
        "meta": {
            name: "meta",
            dataType: r4:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "Claim.meta"
        },
        "billablePeriod": {
            name: "billablePeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "Claim.billablePeriod"
        },
        "implicitRules": {
            name: "implicitRules",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "Claim.implicitRules"
        },
        "subType": {
            name: "subType",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "Claim.subType",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-subtype"
        },
        "facility": {
            name: "facility",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "Claim.facility"
        },
        "status": {
            name: "status",
            dataType: PASClaimStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "Claim.status",
            valueSet: "http://hl7.org/fhir/ValueSet/fm-status|4.0.1"
        }
    },
    serializers: {
        'xml: r4:fhirResourceXMLSerializer,
        'json: r4:fhirResourceJsonSerializer
    }
}
public type PASClaim record {|
    *r4:DomainResource;

    RESOURCE_NAME_PASCLAIM resourceType = RESOURCE_NAME_PASCLAIM;

    @constraint:Array {
        minLength: 1
    }
    PASClaimInsurance[] insurance;
    r4:Extension[] extension?;
    PASClaimUse use;
    r4:Extension[] modifierExtension?;
    r4:code language?;
    r4:CodeableConcept 'type;
    PASClaimAccident accident?;
    PASClaimPayee payee?;
    r4:Money total?;
    PASClaimRelated[] related?;
    PASClaimSupportingInfo[] supportingInfo?;
    r4:CodeableConcept fundsReserve?;
    r4:Reference provider;
    r4:Reference insurer;
    r4:Reference patient;
    r4:Reference enterer?;
    string id?;
    r4:Narrative text?;
    PASClaimCareTeam[] careTeam?;
    @constraint:Array {
        minLength: 1,
        maxLength: 2
    }
    ProfileIdentifier[] identifier;
    @constraint:Array {
        minLength: 1
    }
    PASClaimItem[] item;
    r4:dateTime created;
    PASClaimDiagnosis[] diagnosis?;
    r4:Reference originalPrescription?;
    PASClaimProcedure[] procedure?;
    r4:CodeableConcept priority;
    r4:Resource[] contained?;
    r4:Reference referral?;
    r4:Reference prescription?;
    r4:Meta meta?;
    r4:Period billablePeriod?;
    r4:uri implicitRules?;
    r4:CodeableConcept subType?;
    r4:Reference facility?;
    PASClaimStatus status;
    r4:Element...;
|};

# FHIR PASClaimSupportingInfoPatientEvent datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timingDate - The date when or period to which this information refers.
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
@r4:DataTypeDefinition {
    name: "PASClaimSupportingInfoPatientEvent",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 0,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "Claim.supportingInfo.reason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Claim.supportingInfo.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "Claim.supportingInfo.code"
        },
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 0,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "Claim.supportingInfo.timing[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.supportingInfo.modifierExtension"
        },
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "Claim.supportingInfo.timing[x]"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "Claim.supportingInfo.sequence"
        },
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 0,
            max: 0,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 0,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: PASClaimSupportingInfoCategory,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "Claim.supportingInfo.category"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 0,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimSupportingInfoPatientEvent record {|
    *PASClaimSupportingInfo;

    boolean valueBoolean?;
    r4:CodeableConcept reason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    r4:Reference valueReference?;
    r4:Period timingPeriod;
    r4:Extension[] modifierExtension?;
    r4:date timingDate;
    r4:positiveInt sequence;
    r4:Attachment valueAttachment?;
    string valueString?;
    string id?;
    PASClaimSupportingInfoCategory category;
    r4:Quantity valueQuantity?;
|};

# FHIR PASClaimCareTeamItemClaimMember datatype record.
#
# + qualification - The qualification of the practitioner which is applicable for this service.
# + sequence - A number to uniquely identify care team entries.
# + extension - An Extension
# + role - The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.
# + provider - Member of the team who provided the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + responsible - The party who is billing and/or responsible for the claimed products or services.
# + careTeamClaimScope - A flag that indicates whether the care team applies to the entire claim or a single item.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r4:DataTypeDefinition {
    name: "PASClaimCareTeamItemClaimMember",
    baseType: (),
    elements: {
        "qualification": {
            name: "qualification",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The qualification of the practitioner which is applicable for this service.",
            path: "Claim.careTeam.qualification"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify care team entries.",
            path: "Claim.careTeam.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An Extension",
            path: "Claim.careTeam.extension"
        },
        "role": {
            name: "role",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.",
            path: "Claim.careTeam.role"
        },
        "provider": {
            name: "provider",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Member of the team who provided the product or service.",
            path: "Claim.careTeam.provider"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.careTeam.modifierExtension"
        },
        "responsible": {
            name: "responsible",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "The party who is billing and/or responsible for the claimed products or services.",
            path: "Claim.careTeam.responsible"
        },
        "careTeamClaimScope": {
            name: "careTeamClaimScope",
            dataType: r4:Extension,
            min: 1,
            max: 1,
            isArray: true,
            description: "A flag that indicates whether the care team applies to the entire claim or a single item.",
            path: "Claim.careTeam.extension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.careTeam.id"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimCareTeamItemClaimMember record {|
    *PASClaimCareTeam;

    r4:CodeableConcept qualification?;
    r4:positiveInt sequence;
    @constraint:Array {
        minLength: 1
    }
    r4:Extension[] extension;
    r4:CodeableConcept role?;
    r4:Reference provider;
    r4:Extension[] modifierExtension?;
    boolean responsible?;
    @constraint:Array {
        minLength: 1,
        maxLength: 1
    }
    r4:Extension[] careTeamClaimScope;
    string id?;
|};

# FHIR PASClaimSupportingInfoCategoryCodingFour datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "PASClaimSupportingInfoCategoryCodingFour",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Claim.supportingInfo.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Claim.supportingInfo.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimSupportingInfoCategoryCodingFour record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/davinci-pas/CodeSystem/PASTempCodes";
    r4:code code = "freeFormMessage";
|};

# FHIR PASClaimSupportingInfoCategory datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "PASClaimSupportingInfoCategory",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: PASClaimSupportingInfoCategoryCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Claim.supportingInfo.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimSupportingInfoCategory record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: 1
    }
    PASClaimSupportingInfoCategoryCoding[] coding;
|};

# FHIR PASClaimCareTeam datatype record.
#
# + qualification - The qualification of the practitioner which is applicable for this service.
# + sequence - A number to uniquely identify care team entries.
# + extension - An Extension
# + role - The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.
# + provider - Member of the team who provided the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + responsible - The party who is billing and/or responsible for the claimed products or services.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r4:DataTypeDefinition {
    name: "PASClaimCareTeam",
    baseType: (),
    elements: {
        "qualification": {
            name: "qualification",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The qualification of the practitioner which is applicable for this service.",
            path: "Claim.careTeam.qualification"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify care team entries.",
            path: "Claim.careTeam.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An Extension",
            path: "Claim.careTeam.extension"
        },
        "role": {
            name: "role",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.",
            path: "Claim.careTeam.role"
        },
        "provider": {
            name: "provider",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Member of the team who provided the product or service.",
            path: "Claim.careTeam.provider"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.careTeam.modifierExtension"
        },
        "responsible": {
            name: "responsible",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "The party who is billing and/or responsible for the claimed products or services.",
            path: "Claim.careTeam.responsible"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.careTeam.id"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimCareTeam record {|
    *r4:BackboneElement;

    r4:CodeableConcept qualification?;
    r4:positiveInt sequence;
    @constraint:Array {
        minLength: 1
    }
    r4:Extension[] extension;
    r4:CodeableConcept role?;
    r4:Reference provider;
    r4:Extension[] modifierExtension?;
    boolean responsible?;
    string id?;
|};

# FHIR PASClaimSupportingInfo datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timingDate - The date when or period to which this information refers.
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
@r4:DataTypeDefinition {
    name: "PASClaimSupportingInfo",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "Claim.supportingInfo.reason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Claim.supportingInfo.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "Claim.supportingInfo.code"
        },
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "Claim.supportingInfo.timing[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.supportingInfo.modifierExtension"
        },
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "Claim.supportingInfo.timing[x]"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "Claim.supportingInfo.sequence"
        },
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "Claim.supportingInfo.category"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimSupportingInfo record {|
    *r4:BackboneElement;

    boolean valueBoolean?;
    r4:CodeableConcept reason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    r4:Reference valueReference?;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    r4:date timingDate?;
    r4:positiveInt sequence;
    r4:Attachment valueAttachment?;
    string valueString?;
    string id?;
    r4:CodeableConcept category;
    r4:Quantity valueQuantity?;
|};

# PASClaimUse enum
public enum PASClaimUse {
    CODE_USE_PREDETERMINATION = "predetermination",
    CODE_USE_PREAUTHORIZATION = "preauthorization",
    CODE_USE_CLAIM = "claim"
}

# FHIR PASClaimSupportingInfoCategoryTwo datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "PASClaimSupportingInfoCategoryTwo",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: PASClaimSupportingInfoCategoryCodingTwo,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Claim.supportingInfo.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimSupportingInfoCategoryTwo record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: 1
    }
    PASClaimSupportingInfoCategoryCodingTwo[] coding;
|};

# FHIR PASClaimItem datatype record.
#
# + extension - An Extension
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + servicedPeriod - The date or dates when the service or product was supplied, performed or completed.
# + informationSequence - Exceptions, special conditions and supporting information applicable for this service or product.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + locationCodeableConcept - Where the product or service was provided.
# + diagnosisSequence - Diagnosis applicable for this service or product.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + quantity - The number of repetitions of a service or product.
# + programCode - Identifies the program under which this may be recovered.
# + careTeamSequence - CareTeam members related to this service or product.
# + encounter - The Encounters during which this Claim was created or to which the creation of this record is tightly associated.
# + sequence - A number to uniquely identify item entries.
# + bodySite - Physical service site on the patient (limb, tooth, etc.).
# + subSite - A region or surface of the bodySite, e.g. limb region or tooth surface(s).
# + detail - A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.
# + servicedDate - The date or dates when the service or product was supplied, performed or completed.
# + udi - Unique Device Identifiers associated with this line item.
# + category - Code to identify the general type of benefits under which products and services are provided.
# + procedureSequence - Procedures applicable for this service or product.
@r4:DataTypeDefinition {
    name: "PASClaimItem",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An Extension",
            path: "Claim.item.extension"
        },
        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "Claim.item.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.item.modifierExtension"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "Claim.item.productOrService"
        },
        "servicedPeriod": {
            name: "servicedPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "Claim.item.serviced[x]"
        },
        "informationSequence": {
            name: "informationSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Exceptions, special conditions and supporting information applicable for this service or product.",
            path: "Claim.item.informationSequence"
        },
        "revenue": {
            name: "revenue",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "Claim.item.revenue"
        },
        "locationCodeableConcept": {
            name: "locationCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "Claim.item.location[x]"
        },
        "diagnosisSequence": {
            name: "diagnosisSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Diagnosis applicable for this service or product.",
            path: "Claim.item.diagnosisSequence"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.item.id"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "Claim.item.factor"
        },
        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "Claim.item.net"
        },
        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "Claim.item.unitPrice"
        },
        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "Claim.item.quantity"
        },
        "programCode": {
            name: "programCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "Claim.item.programCode"
        },
        "careTeamSequence": {
            name: "careTeamSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "CareTeam members related to this service or product.",
            path: "Claim.item.careTeamSequence"
        },
        "encounter": {
            name: "encounter",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The Encounters during which this Claim was created or to which the creation of this record is tightly associated.",
            path: "Claim.item.encounter"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify item entries.",
            path: "Claim.item.sequence"
        },
        "bodySite": {
            name: "bodySite",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Physical service site on the patient (limb, tooth, etc.).",
            path: "Claim.item.bodySite"
        },
        "subSite": {
            name: "subSite",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
            path: "Claim.item.subSite"
        },
        "detail": {
            name: "detail",
            dataType: PASClaimItemDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
            path: "Claim.item.detail"
        },
        "servicedDate": {
            name: "servicedDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "Claim.item.serviced[x]"
        },
        "udi": {
            name: "udi",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Unique Device Identifiers associated with this line item.",
            path: "Claim.item.udi"
        },
        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Code to identify the general type of benefits under which products and services are provided.",
            path: "Claim.item.category"
        },
        "procedureSequence": {
            name: "procedureSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Procedures applicable for this service or product.",
            path: "Claim.item.procedureSequence"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimItem record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept productOrService;
    r4:Period servicedPeriod?;
    r4:positiveInt[] informationSequence?;
    r4:CodeableConcept revenue?;
    r4:CodeableConcept locationCodeableConcept?;
    r4:positiveInt[] diagnosisSequence?;
    string id?;
    decimal factor?;
    r4:Money net?;
    r4:Money unitPrice?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] programCode?;
    r4:positiveInt[] careTeamSequence?;
    r4:Reference[] encounter?;
    r4:positiveInt sequence;
    r4:CodeableConcept bodySite?;
    r4:CodeableConcept[] subSite?;
    PASClaimItemDetail[] detail?;
    r4:date servicedDate?;
    r4:Reference[] udi?;
    r4:CodeableConcept category;
    r4:positiveInt[] procedureSequence?;
|};

# FHIR PASClaimSupportingInfoCategoryCodingTwo datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "PASClaimSupportingInfoCategoryCodingTwo",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Claim.supportingInfo.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Claim.supportingInfo.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimSupportingInfoCategoryCodingTwo record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/davinci-pas/CodeSystem/PASTempCodes";
    r4:code code = "additionalInformation";
|};

# FHIR PASClaimCareTeamOverallClaimMember datatype record.
#
# + qualification - The qualification of the practitioner which is applicable for this service.
# + sequence - A number to uniquely identify care team entries.
# + extension - An Extension
# + role - The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.
# + provider - Member of the team who provided the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + responsible - The party who is billing and/or responsible for the claimed products or services.
# + careTeamClaimScope - A flag that indicates whether the care team applies to the entire claim or a single item.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r4:DataTypeDefinition {
    name: "PASClaimCareTeamOverallClaimMember",
    baseType: (),
    elements: {
        "qualification": {
            name: "qualification",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The qualification of the practitioner which is applicable for this service.",
            path: "Claim.careTeam.qualification"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify care team entries.",
            path: "Claim.careTeam.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An Extension",
            path: "Claim.careTeam.extension"
        },
        "role": {
            name: "role",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.",
            path: "Claim.careTeam.role"
        },
        "provider": {
            name: "provider",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Member of the team who provided the product or service.",
            path: "Claim.careTeam.provider"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.careTeam.modifierExtension"
        },
        "responsible": {
            name: "responsible",
            dataType: boolean,
            min: 0,
            max: 1,
            isArray: false,
            description: "The party who is billing and/or responsible for the claimed products or services.",
            path: "Claim.careTeam.responsible"
        },
        "careTeamClaimScope": {
            name: "careTeamClaimScope",
            dataType: r4:Extension,
            min: 1,
            max: 1,
            isArray: true,
            description: "A flag that indicates whether the care team applies to the entire claim or a single item.",
            path: "Claim.careTeam.extension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.careTeam.id"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimCareTeamOverallClaimMember record {|
    *PASClaimCareTeam;

    r4:CodeableConcept qualification?;
    r4:positiveInt sequence;
    @constraint:Array {
        minLength: 1
    }
    r4:Extension[] extension;
    r4:CodeableConcept role?;
    r4:Reference provider;
    r4:Extension[] modifierExtension?;
    boolean responsible?;
    @constraint:Array {
        minLength: 1,
        maxLength: 1
    }
    r4:Extension[] careTeamClaimScope;
    string id?;
|};

# FHIR PASClaimRelated datatype record.
#
# + reference - An alternate organizational reference to the case or file to which this particular claim pertains.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + claim - Reference to a related claim.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + relationship - A code to convey how the claims are related.
@r4:DataTypeDefinition {
    name: "PASClaimRelated",
    baseType: (),
    elements: {
        "reference": {
            name: "reference",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "An alternate organizational reference to the case or file to which this particular claim pertains.",
            path: "Claim.related.reference"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Claim.related.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.related.modifierExtension"
        },
        "claim": {
            name: "claim",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reference to a related claim.",
            path: "Claim.related.claim"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.related.id"
        },
        "relationship": {
            name: "relationship",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code to convey how the claims are related.",
            path: "Claim.related.relationship"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimRelated record {|
    *r4:BackboneElement;

    r4:Identifier reference?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:Reference claim?;
    string id?;
    r4:CodeableConcept relationship?;
|};

# FHIR PASClaimInsurance datatype record.
#
# + coverage - Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.
# + identifier - The business identifier to be used when the claim is sent for adjudication against this insurance policy.
# + sequence - A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + businessArrangement - A business agreement number established between the provider and the insurer for special business processing purposes.
# + claimResponse - The result of the adjudication of the line items for the Coverage specified in this insurance.
# + focal - A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + preAuthRef - Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
@r4:DataTypeDefinition {
    name: "PASClaimInsurance",
    baseType: (),
    elements: {
        "coverage": {
            name: "coverage",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.",
            path: "Claim.insurance.coverage"
        },
        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "The business identifier to be used when the claim is sent for adjudication against this insurance policy.",
            path: "Claim.insurance.identifier"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order.",
            path: "Claim.insurance.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Claim.insurance.extension"
        },
        "businessArrangement": {
            name: "businessArrangement",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A business agreement number established between the provider and the insurer for special business processing purposes.",
            path: "Claim.insurance.businessArrangement"
        },
        "claimResponse": {
            name: "claimResponse",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The result of the adjudication of the line items for the Coverage specified in this insurance.",
            path: "Claim.insurance.claimResponse"
        },
        "focal": {
            name: "focal",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.",
            path: "Claim.insurance.focal"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.insurance.modifierExtension"
        },
        "preAuthRef": {
            name: "preAuthRef",
            dataType: string,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.",
            path: "Claim.insurance.preAuthRef"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.insurance.id"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimInsurance record {|
    *r4:BackboneElement;

    r4:Reference coverage;
    r4:Identifier identifier?;
    r4:positiveInt sequence;
    r4:Extension[] extension?;
    string businessArrangement?;
    r4:Reference claimResponse?;
    boolean focal;
    r4:Extension[] modifierExtension?;
    string[] preAuthRef?;
    string id?;
|};

# FHIR PASClaimSupportingInfoDischargeDates datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timingDate - The date when or period to which this information refers.
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
@r4:DataTypeDefinition {
    name: "PASClaimSupportingInfoDischargeDates",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 0,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "Claim.supportingInfo.reason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Claim.supportingInfo.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "Claim.supportingInfo.code"
        },
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 0,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "Claim.supportingInfo.timing[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.supportingInfo.modifierExtension"
        },
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "Claim.supportingInfo.timing[x]"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "Claim.supportingInfo.sequence"
        },
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 0,
            max: 0,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 0,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: PASClaimSupportingInfoCategoryOne,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "Claim.supportingInfo.category"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 0,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimSupportingInfoDischargeDates record {|
    *PASClaimSupportingInfo;

    boolean valueBoolean?;
    r4:CodeableConcept reason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    r4:Reference valueReference?;
    r4:Period timingPeriod;
    r4:Extension[] modifierExtension?;
    r4:date timingDate;
    r4:positiveInt sequence;
    r4:Attachment valueAttachment?;
    string valueString?;
    string id?;
    PASClaimSupportingInfoCategoryOne category;
    r4:Quantity valueQuantity?;
|};

# FHIR PASClaimSupportingInfoAdmissionDates datatype record.
#
# + valueBoolean - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + timingDate - The date when or period to which this information refers.
# + sequence - A number to uniquely identify supporting information entries.
# + valueAttachment - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
# + valueQuantity - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
@r4:DataTypeDefinition {
    name: "PASClaimSupportingInfoAdmissionDates",
    baseType: (),
    elements: {
        "valueBoolean": {
            name: "valueBoolean",
            dataType: boolean,
            min: 0,
            max: 0,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "Claim.supportingInfo.reason"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Claim.supportingInfo.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "Claim.supportingInfo.code"
        },
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 0,
            max: 0,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 1,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "Claim.supportingInfo.timing[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.supportingInfo.modifierExtension"
        },
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "Claim.supportingInfo.timing[x]"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "Claim.supportingInfo.sequence"
        },
        "valueAttachment": {
            name: "valueAttachment",
            dataType: r4:Attachment,
            min: 0,
            max: 0,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 0,
            max: 0,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: PASClaimSupportingInfoCategoryThree,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "Claim.supportingInfo.category"
        },
        "valueQuantity": {
            name: "valueQuantity",
            dataType: r4:Quantity,
            min: 0,
            max: 0,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimSupportingInfoAdmissionDates record {|
    *PASClaimSupportingInfo;

    boolean valueBoolean?;
    r4:CodeableConcept reason?;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    r4:Reference valueReference?;
    r4:Period timingPeriod;
    r4:Extension[] modifierExtension?;
    r4:date timingDate;
    r4:positiveInt sequence;
    r4:Attachment valueAttachment?;
    string valueString?;
    string id?;
    PASClaimSupportingInfoCategoryThree category;
    r4:Quantity valueQuantity?;
|};

# PASClaimStatus enum
public enum PASClaimStatus {
    CODE_STATUS_DRAFT = "draft",
    CODE_STATUS_ACTIVE = "active",
    CODE_STATUS_CANCELLED = "cancelled",
    CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error"
}

# FHIR PASClaimSupportingInfoAdditionalInformation datatype record.
#
# + timingDate - The date when or period to which this information refers.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + sequence - A number to uniquely identify supporting information entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueReference - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
@r4:DataTypeDefinition {
    name: "PASClaimSupportingInfoAdditionalInformation",
    baseType: (),
    elements: {
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 0,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "Claim.supportingInfo.timing[x]"
        },
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "Claim.supportingInfo.reason"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "Claim.supportingInfo.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Claim.supportingInfo.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "Claim.supportingInfo.code"
        },
        "valueReference": {
            name: "valueReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 0,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "Claim.supportingInfo.timing[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.supportingInfo.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: PASClaimSupportingInfoCategoryTwo,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "Claim.supportingInfo.category"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimSupportingInfoAdditionalInformation record {|
    *PASClaimSupportingInfo;

    r4:date timingDate?;
    r4:CodeableConcept reason?;
    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    r4:Reference valueReference;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    string id?;
    PASClaimSupportingInfoCategoryTwo category;
|};

# FHIR PASClaimSupportingInfoCategoryOne datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "PASClaimSupportingInfoCategoryOne",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: PASClaimSupportingInfoCategoryCodingOne,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Claim.supportingInfo.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimSupportingInfoCategoryOne record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: 1
    }
    PASClaimSupportingInfoCategoryCodingOne[] coding;
|};

# FHIR PASClaimPayee datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Type of Party to be reimbursed: subscriber, provider, other.
# + party - Reference to the individual or organization to whom any payment will be made.
@r4:DataTypeDefinition {
    name: "PASClaimPayee",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Claim.payee.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.payee.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.payee.id"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Type of Party to be reimbursed: subscriber, provider, other.",
            path: "Claim.payee.type"
        },
        "party": {
            name: "party",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reference to the individual or organization to whom any payment will be made.",
            path: "Claim.payee.party"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimPayee record {|
    *r4:BackboneElement;

    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept 'type;
    r4:Reference party?;
|};

# FHIR PASClaimSupportingInfoCategoryCodingThree datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "PASClaimSupportingInfoCategoryCodingThree",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Claim.supportingInfo.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Claim.supportingInfo.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimSupportingInfoCategoryCodingThree record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/davinci-pas/CodeSystem/PASTempCodes";
    r4:code code = "admissionDates";
|};

# FHIR PASClaimSupportingInfoMessageText datatype record.
#
# + timingDate - The date when or period to which this information refers.
# + reason - Provides the reason in the situation where a reason code is required in addition to the content.
# + sequence - A number to uniquely identify supporting information entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + code - System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.
# + valueString - Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
# + timingPeriod - The date when or period to which this information refers.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - The general class of the information supplied: information; exception; accident, employment; onset, etc.
@r4:DataTypeDefinition {
    name: "PASClaimSupportingInfoMessageText",
    baseType: (),
    elements: {
        "timingDate": {
            name: "timingDate",
            dataType: r4:date,
            min: 0,
            max: 0,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "Claim.supportingInfo.timing[x]"
        },
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Provides the reason in the situation where a reason code is required in addition to the content.",
            path: "Claim.supportingInfo.reason"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify supporting information entries.",
            path: "Claim.supportingInfo.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Claim.supportingInfo.extension"
        },
        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient for which care is sought.",
            path: "Claim.supportingInfo.code"
        },
        "valueString": {
            name: "valueString",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            path: "Claim.supportingInfo.value[x]"
        },
        "timingPeriod": {
            name: "timingPeriod",
            dataType: r4:Period,
            min: 0,
            max: 0,
            isArray: false,
            description: "The date when or period to which this information refers.",
            path: "Claim.supportingInfo.timing[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.supportingInfo.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.supportingInfo.id"
        },
        "category": {
            name: "category",
            dataType: PASClaimSupportingInfoCategoryFour,
            min: 1,
            max: 1,
            isArray: false,
            description: "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
            path: "Claim.supportingInfo.category"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimSupportingInfoMessageText record {|
    *PASClaimSupportingInfo;

    r4:date timingDate?;
    r4:CodeableConcept reason?;
    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept code?;
    string valueString;
    r4:Period timingPeriod?;
    r4:Extension[] modifierExtension?;
    string id?;
    PASClaimSupportingInfoCategoryFour category;
|};

# FHIR PASClaimDiagnosis datatype record.
#
# + sequence - A number to uniquely identify diagnosis entries.
# + extension - An Extension
# + onAdmission - Indication of whether the diagnosis was present on admission to a facility.
# + packageCode - A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - When the condition was observed or the relative ranking.
# + diagnosisCodeableConcept - The nature of illness or problem in a coded form or as a reference to an external defined Condition.
@r4:DataTypeDefinition {
    name: "PASClaimDiagnosis",
    baseType: (),
    elements: {
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify diagnosis entries.",
            path: "Claim.diagnosis.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An Extension",
            path: "Claim.diagnosis.extension"
        },
        "onAdmission": {
            name: "onAdmission",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Indication of whether the diagnosis was present on admission to a facility.",
            path: "Claim.diagnosis.onAdmission"
        },
        "packageCode": {
            name: "packageCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system.",
            path: "Claim.diagnosis.packageCode"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.diagnosis.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.diagnosis.id"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "When the condition was observed or the relative ranking.",
            path: "Claim.diagnosis.type"
        },
        "diagnosisCodeableConcept": {
            name: "diagnosisCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The nature of illness or problem in a coded form or as a reference to an external defined Condition.",
            path: "Claim.diagnosis.diagnosis[x]"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimDiagnosis record {|
    *r4:BackboneElement;

    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept onAdmission?;
    r4:CodeableConcept packageCode?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept 'type?;
    r4:CodeableConcept diagnosisCodeableConcept;
|};

# FHIR PASClaimProcedure datatype record.
#
# + date - Date and optionally time the procedure was performed.
# + sequence - A number to uniquely identify procedure entries.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + procedureCodeableConcept - The code or reference to a Procedure resource which identifies the clinical intervention performed.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + procedureReference - The code or reference to a Procedure resource which identifies the clinical intervention performed.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + udi - Unique Device Identifiers associated with this line item.
# + 'type - When the condition was observed or the relative ranking.
@r4:DataTypeDefinition {
    name: "PASClaimProcedure",
    baseType: (),
    elements: {
        "date": {
            name: "date",
            dataType: r4:dateTime,
            min: 0,
            max: 1,
            isArray: false,
            description: "Date and optionally time the procedure was performed.",
            path: "Claim.procedure.date"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify procedure entries.",
            path: "Claim.procedure.sequence"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Claim.procedure.extension"
        },
        "procedureCodeableConcept": {
            name: "procedureCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "The code or reference to a Procedure resource which identifies the clinical intervention performed.",
            path: "Claim.procedure.procedure[x]"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.procedure.modifierExtension"
        },
        "procedureReference": {
            name: "procedureReference",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "The code or reference to a Procedure resource which identifies the clinical intervention performed.",
            path: "Claim.procedure.procedure[x]"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.procedure.id"
        },
        "udi": {
            name: "udi",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Unique Device Identifiers associated with this line item.",
            path: "Claim.procedure.udi"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "When the condition was observed or the relative ranking.",
            path: "Claim.procedure.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimProcedure record {|
    *r4:BackboneElement;

    r4:dateTime date?;
    r4:positiveInt sequence;
    r4:Extension[] extension?;
    r4:CodeableConcept procedureCodeableConcept;
    r4:Extension[] modifierExtension?;
    r4:Reference procedureReference;
    string id?;
    r4:Reference[] udi?;
    r4:CodeableConcept[] 'type?;
|};

# FHIR PASClaimSupportingInfoCategoryThree datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "PASClaimSupportingInfoCategoryThree",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: PASClaimSupportingInfoCategoryCodingThree,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Claim.supportingInfo.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimSupportingInfoCategoryThree record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: 1
    }
    PASClaimSupportingInfoCategoryCodingThree[] coding;
|};

# FHIR PASClaimSupportingInfoCategoryCodingOne datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "PASClaimSupportingInfoCategoryCodingOne",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Claim.supportingInfo.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Claim.supportingInfo.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimSupportingInfoCategoryCodingOne record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/davinci-pas/CodeSystem/PASTempCodes";
    r4:code code = "dischargeDates";
|};

# FHIR PASClaimItemDetailSubDetail datatype record.
#
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of repetitions of a service or product.
# + programCode - Identifies the program under which this may be recovered.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + sequence - A number to uniquely identify item entries.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + udi - Unique Device Identifiers associated with this line item.
# + category - Code to identify the general type of benefits under which products and services are provided.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.
@r4:DataTypeDefinition {
    name: "PASClaimItemDetailSubDetail",
    baseType: (),
    elements: {
        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "Claim.item.detail.subDetail.unitPrice"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Claim.item.detail.subDetail.extension"
        },
        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "Claim.item.detail.subDetail.quantity"
        },
        "programCode": {
            name: "programCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "Claim.item.detail.subDetail.programCode"
        },
        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "Claim.item.detail.subDetail.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.item.detail.subDetail.modifierExtension"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "Claim.item.detail.subDetail.productOrService"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify item entries.",
            path: "Claim.item.detail.subDetail.sequence"
        },
        "revenue": {
            name: "revenue",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "Claim.item.detail.subDetail.revenue"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.item.detail.subDetail.id"
        },
        "udi": {
            name: "udi",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Unique Device Identifiers associated with this line item.",
            path: "Claim.item.detail.subDetail.udi"
        },
        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Code to identify the general type of benefits under which products and services are provided.",
            path: "Claim.item.detail.subDetail.category"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "Claim.item.detail.subDetail.factor"
        },
        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "Claim.item.detail.subDetail.net"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimItemDetailSubDetail record {|
    *r4:BackboneElement;

    r4:Money unitPrice?;
    r4:Extension[] extension?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] programCode?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept productOrService;
    r4:positiveInt sequence;
    r4:CodeableConcept revenue?;
    string id?;
    r4:Reference[] udi?;
    r4:CodeableConcept category?;
    decimal factor?;
    r4:Money net?;
|};

# FHIR PASClaimItemDetail datatype record.
#
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of repetitions of a service or product.
# + programCode - Identifies the program under which this may be recovered.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + subDetail - A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + sequence - A number to uniquely identify item entries.
# + revenue - The type of revenue or cost center providing the product and/or service.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + udi - Unique Device Identifiers associated with this line item.
# + category - Code to identify the general type of benefits under which products and services are provided.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.
@r4:DataTypeDefinition {
    name: "PASClaimItemDetail",
    baseType: (),
    elements: {
        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "Claim.item.detail.unitPrice"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Claim.item.detail.extension"
        },
        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "Claim.item.detail.quantity"
        },
        "programCode": {
            name: "programCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "Claim.item.detail.programCode"
        },
        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "Claim.item.detail.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.item.detail.modifierExtension"
        },
        "subDetail": {
            name: "subDetail",
            dataType: PASClaimItemDetailSubDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
            path: "Claim.item.detail.subDetail"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "Claim.item.detail.productOrService"
        },
        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify item entries.",
            path: "Claim.item.detail.sequence"
        },
        "revenue": {
            name: "revenue",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type of revenue or cost center providing the product and/or service.",
            path: "Claim.item.detail.revenue"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.item.detail.id"
        },
        "udi": {
            name: "udi",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Unique Device Identifiers associated with this line item.",
            path: "Claim.item.detail.udi"
        },
        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Code to identify the general type of benefits under which products and services are provided.",
            path: "Claim.item.detail.category"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "Claim.item.detail.factor"
        },
        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "Claim.item.detail.net"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimItemDetail record {|
    *r4:BackboneElement;

    r4:Money unitPrice?;
    r4:Extension[] extension?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] programCode?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    PASClaimItemDetailSubDetail[] subDetail?;
    r4:CodeableConcept productOrService;
    r4:positiveInt sequence;
    r4:CodeableConcept revenue?;
    string id?;
    r4:Reference[] udi?;
    r4:CodeableConcept category?;
    decimal factor?;
    r4:Money net?;
|};

# FHIR PASClaimSupportingInfoCategoryCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
@r4:DataTypeDefinition {
    name: "PASClaimSupportingInfoCategoryCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "Claim.supportingInfo.category.coding.system"
        },
        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "Claim.supportingInfo.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimSupportingInfoCategoryCoding record {|
    *r4:Coding;

    r4:uri system = "http://hl7.org/fhir/us/davinci-pas/CodeSystem/PASTempCodes";
    r4:code code = "patientEvent";
|};

# FHIR PASClaimAccident datatype record.
#
# + date - Date of an accident event related to the products and services contained in the claim.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + locationAddress - The physical location of the accident event.
# + 'type - The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers.
@r4:DataTypeDefinition {
    name: "PASClaimAccident",
    baseType: (),
    elements: {
        "date": {
            name: "date",
            dataType: r4:date,
            min: 1,
            max: 1,
            isArray: false,
            description: "Date of an accident event related to the products and services contained in the claim.",
            path: "Claim.accident.date"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "Claim.accident.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "Claim.accident.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "Claim.accident.id"
        },
        "locationAddress": {
            name: "locationAddress",
            dataType: r4:Address,
            min: 0,
            max: 1,
            isArray: false,
            description: "The physical location of the accident event.",
            path: "Claim.accident.location[x]"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers.",
            path: "Claim.accident.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimAccident record {|
    *r4:BackboneElement;

    r4:date date;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:Address locationAddress?;
    r4:CodeableConcept 'type?;
|};

# FHIR PASClaimSupportingInfoCategoryFour datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "PASClaimSupportingInfoCategoryFour",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: PASClaimSupportingInfoCategoryCodingFour,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "Claim.supportingInfo.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimSupportingInfoCategoryFour record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: 1
    }
    PASClaimSupportingInfoCategoryCodingFour[] coding;
|};

