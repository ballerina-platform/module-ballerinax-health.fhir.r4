// Copyright (c) 2025, WSO2 LLC. (http://www.wso2.com).

// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//
// AUTO-GENERATED FILE.
// This file is auto-generated by Ballerina.

import ballerina/constraint;
import ballerinax/health.fhir.r4;
import ballerinax/health.fhir.r4.international401;

public const string PROFILE_BASE_PASCLAIMRESPONSEBASE = "http://hl7.org/fhir/us/davinci-pas/StructureDefinition/profile-claimresponse-base";
public const RESOURCE_NAME_PASCLAIMRESPONSEBASE = "ClaimResponse";

public type PASClaimResponseBaseExtensions (r4:Extension | ExtensionEpsdtIndicator | ExtensionNursingHomeLevelOfCare | ExtensionProductOrServiceCodeEnd | ExtensionRevenueUnitRateLimit );

# FHIR PASClaimResponseBase resource record.
#
# + resourceType - The type of the resource describes
# + insurance - Financial instruments for reimbursement for the health care products and services specified on the claim.
# + request - Original request resource reference.
# + extension - May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + use - A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non-binding adjudication of the listed products and services which could be provided in the future.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + payeeType - Type of Party to be reimbursed: subscriber, provider, other.
# + preAuthRef - Reference from the Insurer which is used in later communications which refers to this adjudication.
# + language - The base language in which the resource is written.
# + 'error - Errors encountered during the processing of the adjudication.
# + 'type - A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.
# + processNote - A note that describes or explains adjudication results in a human readable form.
# + adjudication - The adjudication results which are presented at the header level rather than at the line-item or add-item levels.
# + addItem - The first-tier service adjudications for payor added product or service lines.
# + total - Categorized monetary totals for the adjudication.
# + fundsReserve - A code, used only on a response to a preauthorization, to indicate whether the benefits payable have been reserved and for whom.
# + insurer - The party responsible for authorization, adjudication and reimbursement.
# + patient - The party to whom the professional services and/or products have been supplied or are being considered and for whom actual for facast reimbursement is sought.
# + communicationRequest - Request for additional supporting or authorizing information.
# + payment - Payment details for the adjudication of the claim.
# + id - The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
# + text - A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it 'clinically safe' for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
# + outcome - The outcome of the claim, predetermination, or preauthorization processing.
# + identifier - An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.
# + item - A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details.
# + preAuthPeriod - The time frame during which this authorization is effective.
# + formCode - A code for the form to be used for printing the content.
# + created - The date this resource was created.
# + requestor - The provider which is responsible for the claim, predetermination or preauthorization.
# + contained - These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
# + disposition - A human readable description of the status of the adjudication.
# + form - The actual form, by reference or inclusion, for printing the content or an EOB.
# + meta - The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
# + implicitRules - A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
# + subType - A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.
# + status - The status of the resource instance.
@r4:ResourceDefinition {
    resourceType: "ClaimResponse",
    baseType: r4:DomainResource,
    profile: "http://hl7.org/fhir/us/davinci-pas/StructureDefinition/profile-claimresponse-base",
    elements: {
        "insurance" : {
            name: "insurance",
            dataType: PASClaimResponseBaseInsurance,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.insurance"
        },
        "request" : {
            name: "request",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "ClaimResponse.request"
        },
        "extension" : {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.extension"
        },
        "use" : {
            name: "use",
            dataType: PASClaimResponseBaseUse,
            min: 1,
            max: 1,
            isArray: false,
            path: "ClaimResponse.use",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-use|4.0.1"
        },
        "modifierExtension" : {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.modifierExtension"
        },
        "payeeType" : {
            name: "payeeType",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.payeeType",
            valueSet: "http://hl7.org/fhir/ValueSet/payeetype"
        },
        "preAuthRef" : {
            name: "preAuthRef",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.preAuthRef"
        },
        "language" : {
            name: "language",
            dataType: r4:code,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.language",
            valueSet: "http://hl7.org/fhir/ValueSet/languages"
        },
        "error" : {
            name: "error",
            dataType: PASClaimResponseBaseError,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.error"
        },
        "type" : {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            path: "ClaimResponse.type",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-type"
        },
        "processNote" : {
            name: "processNote",
            dataType: PASClaimResponseBaseProcessNote,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.processNote"
        },

        "adjudication" : {
            name: "adjudication",
            dataType: PASClaimResponseBaseAdjudication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.adjudication"
        },

        "addItem" : {
            name: "addItem",
            dataType: PASClaimResponseBaseAddItem,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.addItem"
        },
        "total" : {
            name: "total",
            dataType: PASClaimResponseBaseTotal,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.total"
        },
        "fundsReserve" : {
            name: "fundsReserve",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.fundsReserve",
            valueSet: "http://hl7.org/fhir/ValueSet/fundsreserve"
        },
        "insurer" : {
            name: "insurer",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "ClaimResponse.insurer"
        },
        "patient" : {
            name: "patient",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            path: "ClaimResponse.patient"
        },
        "communicationRequest" : {
            name: "communicationRequest",
            dataType: r4:Reference,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.communicationRequest"
        },
        "payment" : {
            name: "payment",
            dataType: PASClaimResponseBasePayment,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.payment"
        },
        "id" : {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.id"
        },
        "text" : {
            name: "text",
            dataType: r4:Narrative,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.text"
        },
        "outcome" : {
            name: "outcome",
            dataType: PASClaimResponseBaseOutcome,
            min: 1,
            max: 1,
            isArray: false,
            path: "ClaimResponse.outcome",
            valueSet: "http://hl7.org/fhir/ValueSet/remittance-outcome|4.0.1"
        },
        "identifier" : {
            name: "identifier",
            dataType: PASClaimResponseBaseIdentifier,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.identifier"
        },
        "item" : {
            name: "item",
            dataType: PASClaimResponseBaseItem,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.item"
        },
        "preAuthPeriod" : {
            name: "preAuthPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.preAuthPeriod"
        },
        "formCode" : {
            name: "formCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.formCode",
            valueSet: "http://hl7.org/fhir/ValueSet/forms"
        },
        "created" : {
            name: "created",
            dataType: r4:dateTime,
            min: 1,
            max: 1,
            isArray: false,
            path: "ClaimResponse.created"
        },
        "requestor" : {
            name: "requestor",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.requestor"
        },
        "contained" : {
            name: "contained",
            dataType: r4:Resource,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            path: "ClaimResponse.contained"
        },
        "disposition" : {
            name: "disposition",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.disposition"
        },
        "form" : {
            name: "form",
            dataType: r4:Attachment,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.form"
        },
        "meta" : {
            name: "meta",
            dataType: r4:Meta,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.meta"
        },
        "implicitRules" : {
            name: "implicitRules",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.implicitRules"
        },
        "subType" : {
            name: "subType",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            path: "ClaimResponse.subType",
            valueSet: "http://hl7.org/fhir/ValueSet/claim-subtype"
        },
        "status" : {
            name: "status",
            dataType: PASClaimResponseBaseStatus,
            min: 1,
            max: 1,
            isArray: false,
            path: "ClaimResponse.status",
            valueSet: "http://hl7.org/fhir/ValueSet/fm-status|4.0.1"
        }
    },
    serializers: {
        'xml: r4:fhirResourceXMLSerializer,
        'json: r4:fhirResourceJsonSerializer
    }
}
public type PASClaimResponseBase record {|
    *r4:DomainResource;

    RESOURCE_NAME_PASCLAIMRESPONSEBASE resourceType = RESOURCE_NAME_PASCLAIMRESPONSEBASE;

    PASClaimResponseBaseInsurance[] insurance?;
    r4:Reference request;
    r4:Extension[] extension?;
    PASClaimResponseBaseUse use;
    r4:Extension[] modifierExtension?;
    r4:CodeableConcept payeeType?;
    string preAuthRef?;
    r4:code language?;
    PASClaimResponseBaseError[] 'error?;
    r4:CodeableConcept 'type;
    PASClaimResponseBaseProcessNote[] processNote?;
    PASClaimResponseBaseAdjudication [] adjudication?;
    PASClaimResponseBaseAddItem[] addItem?;
    PASClaimResponseBaseTotal[] total?;
    r4:CodeableConcept fundsReserve?;
    r4:Reference insurer;
    r4:Reference patient;
    r4:Reference[] communicationRequest?;
    PASClaimResponseBasePayment payment?;
    string id?;
    r4:Narrative text?;
    PASClaimResponseBaseOutcome outcome;
    ProfileIdentifier[] identifier?;
    PASClaimResponseBaseItem[] item?;
    r4:Period preAuthPeriod?;
    r4:CodeableConcept formCode?;
    r4:dateTime created;
    r4:Reference requestor?;
    r4:Resource[] contained?;
    string disposition?;
    r4:Attachment form?;
    r4:Meta meta?;
    r4:uri implicitRules?;
    r4:CodeableConcept subType?;
    PASClaimResponseBaseStatus status;
    r4:Element ...;
|};

# FHIR PASClaimResponseBaseAdjudicationCategory datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseAdjudicationCategory",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: PASClaimResponseBaseAdjudicationCategoryCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ClaimResponse.adjudication.category.coding"
        }
        },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseAdjudicationCategory record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.adjudication.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.adjudication.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    PASClaimResponseBaseAdjudicationCategoryCoding [] coding;
|};


# PASClaimResponseBaseIdentifierUse enum
public enum PASClaimResponseBaseIdentifierUse {
    CODE_USE_SECONDARY = "secondary",
    CODE_USE_TEMP = "temp",
    CODE_USE_USUAL = "usual",
    CODE_USE_OLD = "old",
    CODE_USE_OFFICIAL = "official"
}

# FHIR PASClaimResponseBaseAddItemAdjudicationCategoryCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseAddItemAdjudicationCategoryCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ClaimResponse.addItem.adjudication.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ClaimResponse.addItem.adjudication.category.coding.code"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseAddItemAdjudicationCategoryCoding record {|
    *r4:Coding;

    r4:uri system = "http://terminology.hl7.org/CodeSystem/adjudication";
    r4:code code = "submitted";
|};


# FHIR PASClaimResponseBaseAddItemAdjudication datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - An Extension
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include the value submitted, maximum values or percentages allowed or payable under the plan, amounts that: the patient is responsible for in aggregate or pertaining to this item; amounts paid by other coverages; and, the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.
@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseAddItemAdjudication",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ClaimResponse.addItem.adjudication.reason"
        },

        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ClaimResponse.addItem.adjudication.amount"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An Extension",
            path: "ClaimResponse.addItem.adjudication.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.addItem.adjudication.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.addItem.adjudication.id"
        },

        "category": {
            name: "category",
            dataType: PASClaimResponseBaseAddItemAdjudicationCategory,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include the value submitted, maximum values or percentages allowed or payable under the plan, amounts that: the patient is responsible for in aggregate or pertaining to this item; amounts paid by other coverages; and, the benefit payable for this item.",
            path: "ClaimResponse.addItem.adjudication.category"
        },

        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ClaimResponse.addItem.adjudication.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseAddItemAdjudication record {|
    *r4:BackboneElement;

    r4:CodeableConcept reason?;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    PASClaimResponseBaseAddItemAdjudicationCategory category;
    decimal value?;
|};


# FHIR PASClaimResponseBaseAddItemProvider datatype record.
#
# + reference - A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.
# + identifier - An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + display - Plain text narrative that identifies the resource in addition to the resource reference.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent. The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. 'Patient' is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).

@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseAddItemProvider",
    baseType: (),
    elements: {
        "reference": {
            name: "reference",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
            path: "ClaimResponse.addItem.provider.reference"
        },

        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
            path: "ClaimResponse.addItem.provider.identifier"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.addItem.provider.extension"
        },

        "display": {
            name: "display",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Plain text narrative that identifies the resource in addition to the resource reference.",
            path: "ClaimResponse.addItem.provider.display"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.addItem.provider.id"
    },

        "type": {
            name: "type",
            dataType: r4:uri,
            min: 0,
            max: 1,
            isArray: false,
            description: "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent. The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. 'Patient' is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
            path: "ClaimResponse.addItem.provider.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseAddItemProvider record {|
    *r4:Reference;

    string reference?;
    r4:Identifier identifier?;
    r4:Extension[] extension?;
    string display?;
    string id?;
    r4:uri 'type?;
|};


# FHIR PASClaimResponseBaseIdentifier datatype record.
#
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + period - Time period during which identifier is/was valid for use.
# + system - Establishes the namespace for the value - that is, a URL that describes a set values that are unique.
# + use - The purpose of this identifier.
# + assigner - Organization that issued/manages the identifier.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.
# + value - The portion of the identifier typically relevant to the user and which is unique within the context of the system.

@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseIdentifier",
    baseType: (),
    elements: {
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.identifier.extension"
        },

        "period": {
            name: "period",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "Time period during which identifier is/was valid for use.",
            path: "ClaimResponse.identifier.period"
        },

        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            path: "ClaimResponse.identifier.system"
        },

        "use": {
            name: "use",
            dataType: PASClaimResponseBaseIdentifierUse,
            min: 0,
            max: 1,
            isArray: false,
            description: "The purpose of this identifier.",
            path: "ClaimResponse.identifier.use"
        },

        "assigner": {
            name: "assigner",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Organization that issued/manages the identifier.",
            path: "ClaimResponse.identifier.assigner"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.identifier.id"
        },

        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            path: "ClaimResponse.identifier.type"
        },

        "value": {
            name: "value",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            path: "ClaimResponse.identifier.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseIdentifier record {|
    *r4:Identifier;

    r4:Extension[] extension?;
    r4:Period period?;
    r4:uri system;
    PASClaimResponseBaseIdentifierUse use?;
    r4:Reference assigner?;
    string id?;
    r4:CodeableConcept 'type?;
    string value;
|};


# FHIR PASClaimResponseBaseAddItemAdjudicationCategory datatype record.
#
# + coding - A reference to a code defined by a terminology system.

@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseAddItemAdjudicationCategory",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: PASClaimResponseBaseAddItemAdjudicationCategoryCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ClaimResponse.addItem.adjudication.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseAddItemAdjudicationCategory record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.addItem.adjudication.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.addItem.adjudication.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    PASClaimResponseBaseAddItemAdjudicationCategoryCoding [] coding;
|};


# FHIR PASClaimResponseBaseAdjudication datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - An Extension
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include the value submitted, maximum values or percentages allowed or payable under the plan, amounts that: the patient is responsible for in aggregate or pertaining to this item; amounts paid by other coverages; and, the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.

@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseAdjudication",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ClaimResponse.adjudication.reason"
        },

        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ClaimResponse.adjudication.amount"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An Extension",
            path: "ClaimResponse.adjudication.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.adjudication.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.adjudication.id"
        },

        "category": {
            name: "category",
            dataType: PASClaimResponseBaseAdjudicationCategory,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include the value submitted, maximum values or percentages allowed or payable under the plan, amounts that: the patient is responsible for in aggregate or pertaining to this item; amounts paid by other coverages; and, the benefit payable for this item.",
            path: "ClaimResponse.adjudication.category"
        },

        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ClaimResponse.adjudication.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseAdjudication record {|
    *r4:BackboneElement;

    r4:CodeableConcept reason?;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    PASClaimResponseBaseAdjudicationCategory category;
    decimal value?;
|};

# FHIR PASClaimResponseBasePayment datatype record.
#
# + date - Estimated date the payment will be issued or the actual issue date of payment.
# + identifier - Issuer's unique identifier for the payment instrument.
# + adjustmentReason - Reason for the payment adjustment.
# + amount - Benefits payable less any payment adjustment.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + adjustment - Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + 'type - Whether this represents partial or complete payment of the benefits payable.
@r4:DataTypeDefinition {
    name: "PASClaimResponseBasePayment",
    baseType: (),
    elements: {
        "date": {
            name: "date",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "Estimated date the payment will be issued or the actual issue date of payment.",
            path: "ClaimResponse.payment.date"
        },
        "identifier": {
            name: "identifier",
            dataType: r4:Identifier,
            min: 0,
            max: 1,
            isArray: false,
            description: "Issuer's unique identifier for the payment instrument.",
            path: "ClaimResponse.payment.identifier"
        },
        "adjustmentReason": {
            name: "adjustmentReason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Reason for the payment adjustment.",
            path: "ClaimResponse.payment.adjustmentReason"
        },
        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 1,
            max: 1,
            isArray: false,
            description: "Benefits payable less any payment adjustment.",
            path: "ClaimResponse.payment.amount"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.payment.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.payment.modifierExtension"
        },
        "adjustment": {
            name: "adjustment",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication.",
            path: "ClaimResponse.payment.adjustment"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.payment.id"
        },
        "type": {
            name: "type",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "Whether this represents partial or complete payment of the benefits payable.",
            path: "ClaimResponse.payment.type"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimResponseBasePayment record {|
    *r4:BackboneElement;

    r4:date date?;
    r4:Identifier identifier?;
    r4:CodeableConcept adjustmentReason?;
    r4:Money amount;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    r4:Money adjustment?;
    string id?;
    r4:CodeableConcept 'type;
|};

# PASClaimResponseBaseProcessNoteType enum
public enum PASClaimResponseBaseProcessNoteType {
   CODE_TYPE_PRINT = "print",
   CODE_TYPE_DISPLAY = "display",
   CODE_TYPE_PRINTOPER = "printoper"
}

# FHIR PASClaimResponseBaseAddItemDetailSubDetail datatype record.
#
# + adjudication - The adjudication results.
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of repetitions of a service or product.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseAddItemDetailSubDetail",
    baseType: (),
    elements: {
        "adjudication": {
            name: "adjudication",
            dataType: international401:ClaimResponseItemAdjudication,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The adjudication results.",
            path: "ClaimResponse.addItem.detail.subDetail.adjudication"
        },

        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ClaimResponse.addItem.detail.subDetail.unitPrice"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.addItem.detail.subDetail.extension"
        },
        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ClaimResponse.addItem.detail.subDetail.quantity"
        },
        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ClaimResponse.addItem.detail.subDetail.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.addItem.detail.subDetail.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.addItem.detail.subDetail.id"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "ClaimResponse.addItem.detail.subDetail.productOrService"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ClaimResponse.addItem.detail.subDetail.factor"
        },
        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "ClaimResponse.addItem.detail.subDetail.net"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ClaimResponse.addItem.detail.subDetail.noteNumber"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimResponseBaseAddItemDetailSubDetail record {|
    *r4:BackboneElement;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.addItem.detail.subDetail.adjudication constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.addItem.detail.subDetail.adjudication constraint. This field must be an array containing at most one item."
        }
    }
    international401:ClaimResponseItemAdjudication [] adjudication;
    r4:Money unitPrice?;
    r4:Extension[] extension?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    string id?;
    r4:CodeableConcept productOrService;
    decimal factor?;
    r4:Money net?;
    r4:positiveInt[] noteNumber?;
|};

# FHIR PASClaimResponseBaseItemAdjudication datatype record.
#
# + reason - A code supporting the understanding of the adjudication result and explaining variance from expected amount.
# + amount - Monetary amount associated with the category.
# + extension - An Extension
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include the value submitted, maximum values or percentages allowed or payable under the plan, amounts that: the patient is responsible for in aggregate or pertaining to this item; amounts paid by other coverages; and, the benefit payable for this item.
# + value - A non-monetary value associated with the category. Mutually exclusive to the amount element above.
@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseItemAdjudication",
    baseType: (),
    elements: {
        "reason": {
            name: "reason",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
            path: "ClaimResponse.item.adjudication.reason"
        },
        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "Monetary amount associated with the category.",
            path: "ClaimResponse.item.adjudication.amount"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An Extension",
            path: "ClaimResponse.item.adjudication.extension"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.item.adjudication.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.item.adjudication.id"
        },
        "category": {
            name: "category",
            dataType: PASClaimResponseBaseItemAdjudicationCategory,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include the value submitted, maximum values or percentages allowed or payable under the plan, amounts that: the patient is responsible for in aggregate or pertaining to this item; amounts paid by other coverages; and, the benefit payable for this item.",
            path: "ClaimResponse.item.adjudication.category"
        },

        "value": {
            name: "value",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
            path: "ClaimResponse.item.adjudication.value"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimResponseBaseItemAdjudication record {|
    *r4:BackboneElement;

    r4:CodeableConcept reason?;
    r4:Money amount?;
    r4:Extension[] extension?;
    r4:Extension[] modifierExtension?;
    string id?;
    PASClaimResponseBaseItemAdjudicationCategory category;
    decimal value?;
|};

# FHIR PASClaimResponseBaseAddItem datatype record.
#
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - An Extension
# + quantity - The comparator is not used on a SimpleQuantity
# + programCode - Identifies the program under which this may be recovered.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + subdetailSequence - The sequence number of the sub-details within the details within the claim item which this line is intended to replace.
# + locationAddress - Where the product or service was provided.
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
# + servicedPeriod - The date or dates when the service or product was supplied, performed or completed.
# + adjudication - The adjudication results.
# + itemSequence - Claim items which this service line is intended to replace.
# + bodySite - Physical service site on the patient (limb, tooth, etc.).
# + locationCodeableConcept - Where the product or service was provided.
# + provider - The providers who are authorized for the services rendered to the patient.
# + detailSequence - The sequence number of the details within the claim item which this line is intended to replace.
# + subSite - A region or surface of the bodySite, e.g. limb region or tooth surface(s).
# + detail - The second-tier service adjudications for payor added services.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + locationReference - Where the product or service was provided.
# + servicedDate - The date or dates when the service or product was supplied, performed or completed.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.
@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseAddItem",
    baseType: (),
    elements: {
        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ClaimResponse.addItem.unitPrice"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An Extension",
            path: "ClaimResponse.addItem.extension"
        },
        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The comparator is not used on a SimpleQuantity",
            path: "ClaimResponse.addItem.quantity"
        },
        "programCode": {
            name: "programCode",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Identifies the program under which this may be recovered.",
            path: "ClaimResponse.addItem.programCode"
        },
        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ClaimResponse.addItem.modifier"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.addItem.modifierExtension"
        },
        "subdetailSequence": {
            name: "subdetailSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The sequence number of the sub-details within the details within the claim item which this line is intended to replace.",
            path: "ClaimResponse.addItem.subdetailSequence"
        },
        "locationAddress": {
            name: "locationAddress",
            dataType: r4:Address,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ClaimResponse.addItem.location[x]"
        },
        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "ClaimResponse.addItem.productOrService"
        },
        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ClaimResponse.addItem.noteNumber"
        },
        "servicedPeriod": {
            name: "servicedPeriod",
            dataType: r4:Period,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "ClaimResponse.addItem.serviced[x]"
        },

        "adjudication": {
            name: "adjudication",
            dataType: PASClaimResponseBaseAddItemAdjudication,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The adjudication results.",
            path: "ClaimResponse.addItem.adjudication"
        },

        "itemSequence": {
            name: "itemSequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: true,
            description: "Claim items which this service line is intended to replace.",
            path: "ClaimResponse.addItem.itemSequence"
        },
        "bodySite": {
            name: "bodySite",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Physical service site on the patient (limb, tooth, etc.).",
            path: "ClaimResponse.addItem.bodySite"
        },
        "locationCodeableConcept": {
            name: "locationCodeableConcept",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ClaimResponse.addItem.location[x]"
        },
        "provider": {
            name: "provider",
            dataType: PASClaimResponseBaseAddItemProvider,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The providers who are authorized for the services rendered to the patient.",
            path: "ClaimResponse.addItem.provider"
        },
        "detailSequence": {
            name: "detailSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The sequence number of the details within the claim item which this line is intended to replace.",
            path: "ClaimResponse.addItem.detailSequence"
        },
        "subSite": {
            name: "subSite",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
            path: "ClaimResponse.addItem.subSite"
        },
        "detail": {
            name: "detail",
            dataType: PASClaimResponseBaseAddItemDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The second-tier service adjudications for payor added services.",
            path: "ClaimResponse.addItem.detail"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.addItem.id"
        },
        "locationReference": {
            name: "locationReference",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "Where the product or service was provided.",
            path: "ClaimResponse.addItem.location[x]"
        },
        "servicedDate": {
            name: "servicedDate",
            dataType: r4:date,
            min: 0,
            max: 1,
            isArray: false,
            description: "The date or dates when the service or product was supplied, performed or completed.",
            path: "ClaimResponse.addItem.serviced[x]"
        },
        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ClaimResponse.addItem.factor"
        },
        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "ClaimResponse.addItem.net"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimResponseBaseAddItem record {|
    *r4:BackboneElement;

    r4:Money unitPrice?;
    r4:Extension[] extension?;
    r4:Quantity quantity?;
    r4:CodeableConcept[] programCode?;
    r4:CodeableConcept[] modifier?;
    r4:Extension[] modifierExtension?;
    r4:positiveInt[] subdetailSequence?;
    r4:Address locationAddress?;
    r4:CodeableConcept productOrService;
    r4:positiveInt[] noteNumber?;
    r4:Period servicedPeriod?;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.addItem.adjudication constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.addItem.adjudication constraint. This field must be an array containing at most one item."
        }
    }
    PASClaimResponseBaseAddItemAdjudication [] adjudication;
    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.addItem.itemSequence constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.addItem.itemSequence constraint. This field must be an array containing at most one item."
        }
    }
    r4:positiveInt [] itemSequence;
    r4:CodeableConcept bodySite?;
    r4:CodeableConcept locationCodeableConcept?;
    PASClaimResponseBaseAddItemProvider [] provider?;
    r4:positiveInt[] detailSequence?;
    r4:CodeableConcept[] subSite?;
    PASClaimResponseBaseAddItemDetail[] detail?;
    string id?;
    r4:Reference locationReference?;
    r4:date servicedDate?;
    decimal factor?;
    r4:Money net?;
|};

# FHIR PASClaimResponseBaseItemAdjudicationCategory datatype record.
#
# + coding - A reference to a code defined by a terminology system.
@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseItemAdjudicationCategory",
    baseType: (),
    elements: {
        "coding": {
            name: "coding",
            dataType: PASClaimResponseBaseItemAdjudicationCategoryCoding,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A reference to a code defined by a terminology system.",
            path: "ClaimResponse.item.adjudication.category.coding"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}
public type PASClaimResponseBaseItemAdjudicationCategory record {|
    *r4:CodeableConcept;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.item.adjudication.category.coding constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.item.adjudication.category.coding constraint. This field must be an array containing at most one item."
        }
    }
    PASClaimResponseBaseItemAdjudicationCategoryCoding[] coding;
|};


# FHIR PASClaimResponseBaseTotal datatype record.
#
# + amount - Monetary total amount associated with the category.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + category - A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.

@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseTotal",
    baseType: (),
    elements: {
        "amount": {
            name: "amount",
            dataType: r4:Money,
            min: 1,
            max: 1,
            isArray: false,
            description: "Monetary total amount associated with the category.",
            path: "ClaimResponse.total.amount"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.total.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.total.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.total.id"
        },

        "category": {
            name: "category",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
            path: "ClaimResponse.total.category"
}
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseTotal record {|
    *r4:BackboneElement;

    r4:Money amount;
    r4:Extension [] extension?;
    r4:Extension [] modifierExtension?;
    string id?;
    r4:CodeableConcept category;
|};


# PASClaimResponseBaseUse enum
public enum PASClaimResponseBaseUse {
    CODE_USE_PREDETERMINATION = "predetermination",
    CODE_USE_PREAUTHORIZATION = "preauthorization",
    CODE_USE_CLAIM = "claim"
}

# PASClaimResponseBaseOutcome enum
public enum PASClaimResponseBaseOutcome {
    CODE_OUTCOME_QUEUED = "queued",
    CODE_OUTCOME_COMPLETE = "complete",
    CODE_OUTCOME_ERROR = "error",
    CODE_OUTCOME_PARTIAL = "partial"
}

# FHIR PASClaimResponseBaseAdjudicationCategoryCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseAdjudicationCategoryCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ClaimResponse.adjudication.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ClaimResponse.adjudication.category.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseAdjudicationCategoryCoding record {|
    *r4:Coding;

    r4:uri system = "http://terminology.hl7.org/CodeSystem/adjudication";
    r4:code code = "submitted";
|};


# FHIR PASClaimResponseBaseAddItemDetail datatype record.
#
# + adjudication - The adjudication results.
# + unitPrice - If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + quantity - The number of repetitions of a service or product.
# + modifier - Item typification or modifiers codes to convey additional context for the product or service.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + subDetail - The third-tier service adjudications for payor added services.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + productOrService - When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.
# + factor - A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
# + net - The quantity times the unit price for an additional service or product or charge.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.
@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseAddItemDetail",
    baseType: (),
    elements: {
        "adjudication": {
            name: "adjudication",
            dataType: international401:ClaimResponseItemAdjudication,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The adjudication results.",
            path: "ClaimResponse.addItem.detail.adjudication"
        },

        "unitPrice": {
            name: "unitPrice",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
            path: "ClaimResponse.addItem.detail.unitPrice"
        },
        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.addItem.detail.extension"
        },

        "quantity": {
            name: "quantity",
            dataType: r4:Quantity,
            min: 0,
            max: 1,
            isArray: false,
            description: "The number of repetitions of a service or product.",
            path: "ClaimResponse.addItem.detail.quantity"
        },

        "modifier": {
            name: "modifier",
            dataType: r4:CodeableConcept,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "Item typification or modifiers codes to convey additional context for the product or service.",
            path: "ClaimResponse.addItem.detail.modifier"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.addItem.detail.modifierExtension"
        },

        "subDetail": {
            name: "subDetail",
            dataType: PASClaimResponseBaseAddItemDetailSubDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The third-tier service adjudications for payor added services.",
            path: "ClaimResponse.addItem.detail.subDetail"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.addItem.detail.id"
        },

        "productOrService": {
            name: "productOrService",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
            path: "ClaimResponse.addItem.detail.productOrService"
        },

        "factor": {
            name: "factor",
            dataType: decimal,
            min: 0,
            max: 1,
            isArray: false,
            description: "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
            path: "ClaimResponse.addItem.detail.factor"
        },

        "net": {
            name: "net",
            dataType: r4:Money,
            min: 0,
            max: 1,
            isArray: false,
            description: "The quantity times the unit price for an additional service or product or charge.",
            path: "ClaimResponse.addItem.detail.net"
        },

        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ClaimResponse.addItem.detail.noteNumber"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseAddItemDetail record {|
    *r4:BackboneElement;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.addItem.detail.adjudication constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.addItem.detail.adjudication constraint. This field must be an array containing at most one item."
        }
    }
    international401:ClaimResponseItemAdjudication [] adjudication;
    r4:Money unitPrice?;
    r4:Extension[] extension?;
    r4:Quantity quantity?;
    r4:CodeableConcept [] modifier?;
    r4:Extension[] modifierExtension?;
    PASClaimResponseBaseAddItemDetailSubDetail [] subDetail?;
    string id?;
    r4:CodeableConcept productOrService;
    decimal factor?;
    r4:Money net?;
    r4:positiveInt[] noteNumber?;
|};


# FHIR PASClaimResponseBaseProcessNote datatype record.
#
# + number - A number to uniquely identify a note entry.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + language - A code to define the language used in the text of the note.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + text - The explanation or description associated with the processing.
# + 'type - The business purpose of the note text.

@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseProcessNote",
    baseType: (),
    elements: {
        "number": {
            name: "number",
            dataType: r4:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify a note entry.",
            path: "ClaimResponse.processNote.number"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.processNote.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.processNote.modifierExtension"
        },

        "language": {
            name: "language",
            dataType: r4:CodeableConcept,
            min: 0,
            max: 1,
            isArray: false,
            description: "A code to define the language used in the text of the note.",
            path: "ClaimResponse.processNote.language"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.processNote.id"
        },

        "text": {
            name: "text",
            dataType: string,
            min: 1,
            max: 1,
            isArray: false,
            description: "The explanation or description associated with the processing.",
            path: "ClaimResponse.processNote.text"
        },

        "type": {
            name: "type",
            dataType: PASClaimResponseBaseProcessNoteType,
            min: 0,
            max: 1,
            isArray: false,
            description: "The business purpose of the note text.",
            path: "ClaimResponse.processNote.type"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseProcessNote record {|
    *r4:BackboneElement;

    r4:positiveInt number?;
    r4:Extension [] extension?;
    r4:Extension [] modifierExtension?;
    r4:CodeableConcept language?;
    string id?;
    string text;
    PASClaimResponseBaseProcessNoteType 'type?;
|};


# FHIR PASClaimResponseBaseInsurance datatype record.
#
# + coverage - Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.
# + sequence - A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + businessArrangement - A business agreement number established between the provider and the insurer for special business processing purposes.
# + claimResponse - The result of the adjudication of the line items for the Coverage specified in this insurance.
# + focal - A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.

@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseInsurance",
    baseType: (),
    elements: {
        "coverage": {
            name: "coverage",
            dataType: r4:Reference,
            min: 1,
            max: 1,
            isArray: false,
            description: "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.",
            path: "ClaimResponse.insurance.coverage"
        },

        "sequence": {
            name: "sequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order.",
            path: "ClaimResponse.insurance.sequence"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.insurance.extension"
        },

        "businessArrangement": {
            name: "businessArrangement",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "A business agreement number established between the provider and the insurer for special business processing purposes.",
            path: "ClaimResponse.insurance.businessArrangement"
        },

        "claimResponse": {
            name: "claimResponse",
            dataType: r4:Reference,
            min: 0,
            max: 1,
            isArray: false,
            description: "The result of the adjudication of the line items for the Coverage specified in this insurance.",
            path: "ClaimResponse.insurance.claimResponse"
        },

        "focal": {
            name: "focal",
            dataType: boolean,
            min: 1,
            max: 1,
            isArray: false,
            description: "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.",
            path: "ClaimResponse.insurance.focal"
        },
        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.insurance.modifierExtension"
        },
        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.insurance.id"
        }
        },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseInsurance record {|
    *r4:BackboneElement;

    r4:Reference coverage;
    r4:positiveInt sequence;
    r4:Extension [] extension?;
    string businessArrangement?;
    r4:Reference claimResponse?;
    boolean focal;
    r4:Extension [] modifierExtension?;
    string id?;
|};


# FHIR PASClaimResponseBaseItem datatype record.
#
# + adjudication - If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.
# + itemSequence - A number to uniquely reference the claim item entries.
# + extension - An Extension
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + detail - A claim detail. Either a simple (a product or service) or a 'group' of sub-details which are simple items.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.

@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseItem",
    baseType: (),
    elements: {
        "adjudication": {
            name: "adjudication",
            dataType: PASClaimResponseBaseItemAdjudication,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.",
            path: "ClaimResponse.item.adjudication"
        },

        "itemSequence": {
            name: "itemSequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely reference the claim item entries.",
            path: "ClaimResponse.item.itemSequence"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An Extension",
            path: "ClaimResponse.item.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.item.modifierExtension"
        },

        "detail": {
            name: "detail",
            dataType: PASClaimResponseBaseItemDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A claim detail. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
            path: "ClaimResponse.item.detail"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.item.id"
        },

        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ClaimResponse.item.noteNumber"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseItem record {|
    *r4:BackboneElement;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.item.adjudication constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.item.adjudication constraint. This field must be an array containing at most one item."
        }
    }
    PASClaimResponseBaseItemAdjudication [] adjudication;
    r4:positiveInt itemSequence;
    r4:Extension [] extension?;
    r4:Extension [] modifierExtension?;
    PASClaimResponseBaseItemDetail [] detail?;
    string id?;
    r4:positiveInt [] noteNumber?;
|};


# FHIR PASClaimResponseBaseItemDetail datatype record.
#
# + adjudication - The adjudication results.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + detailSequence - A number to uniquely reference the claim detail entry.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + subDetail - A sub-detail adjudication of a simple product or service.
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.

@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseItemDetail",
    baseType: (),
    elements: {
        "adjudication": {
            name: "adjudication",
            dataType: international401:ClaimResponseItemAdjudication,
            min: 1,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The adjudication results.",
            path: "ClaimResponse.item.detail.adjudication"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.item.detail.extension"
        },

        "detailSequence": {
            name: "detailSequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely reference the claim detail entry.",
            path: "ClaimResponse.item.detail.detailSequence"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.item.detail.modifierExtension"
        },

        "subDetail": {
            name: "subDetail",
            dataType: PASClaimResponseBaseItemDetailSubDetail,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "A sub-detail adjudication of a simple product or service.",
            path: "ClaimResponse.item.detail.subDetail"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.item.detail.id"
        },

        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ClaimResponse.item.detail.noteNumber"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseItemDetail record {|
    *r4:BackboneElement;

    @constraint:Array {
        minLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.item.detail.adjudication constraint. This field must be an array containing at least one item."
        },
        maxLength: {
            value: 1,
            message: "Validation failed for $.ClaimResponse.item.detail.adjudication constraint. This field must be an array containing at most one item."
        }
    }
    international401:ClaimResponseItemAdjudication [] adjudication;
    r4:Extension [] extension?;
    r4:positiveInt detailSequence;
    r4:Extension [] modifierExtension?;
    PASClaimResponseBaseItemDetailSubDetail [] subDetail?;
    string id?;
    r4:positiveInt [] noteNumber?;
|};


# FHIR PASClaimResponseBaseItemAdjudicationCategoryCoding datatype record.
#
# + system - The identification of the code system that defines the meaning of the symbol in the code.
# + code - A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).

@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseItemAdjudicationCategoryCoding",
    baseType: (),
    elements: {
        "system": {
            name: "system",
            dataType: r4:uri,
            min: 1,
            max: 1,
            isArray: false,
            description: "The identification of the code system that defines the meaning of the symbol in the code.",
            path: "ClaimResponse.item.adjudication.category.coding.system"
        },

        "code": {
            name: "code",
            dataType: r4:code,
            min: 1,
            max: 1,
            isArray: false,
            description: "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            path: "ClaimResponse.item.adjudication.category.coding.code"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseItemAdjudicationCategoryCoding record {|
    *r4:Coding;

    r4:uri system = "http://terminology.hl7.org/CodeSystem/adjudication";
    r4:code code = "submitted";
|};


# FHIR PASClaimResponseBaseError datatype record.
#
# + subDetailSequence - The sequence number of the sub-detail within the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.
# + itemSequence - The sequence number of the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.
# + extension - An Extension
# + code - An error code, from a specified code system, which details why the claim could not be adjudicated.
# + detailSequence - The sequence number of the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.

@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseError",
    baseType: (),
    elements: {
        "subDetailSequence": {
            name: "subDetailSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The sequence number of the sub-detail within the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.",
            path: "ClaimResponse.error.subDetailSequence"
        },

        "itemSequence": {
            name: "itemSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The sequence number of the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.",
            path: "ClaimResponse.error.itemSequence"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "An Extension",
            path: "ClaimResponse.error.extension"
        },

        "code": {
            name: "code",
            dataType: r4:CodeableConcept,
            min: 1,
            max: 1,
            isArray: false,
            description: "An error code, from a specified code system, which details why the claim could not be adjudicated.",
            path: "ClaimResponse.error.code"
        },

        "detailSequence": {
            name: "detailSequence",
            dataType: r4:positiveInt,
            min: 0,
            max: 1,
            isArray: false,
            description: "The sequence number of the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.",
            path: "ClaimResponse.error.detailSequence"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.error.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.error.id"
        }
    },
    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseError record {|
    *r4:BackboneElement;

    r4:positiveInt subDetailSequence?;
    r4:positiveInt itemSequence?;
    r4:Extension[] extension?;
    r4:CodeableConcept code;
    r4:positiveInt detailSequence?;
    r4:Extension[] modifierExtension?;
    string id?;
|};


# PASClaimResponseBaseStatus enum
public enum PASClaimResponseBaseStatus {
    CODE_STATUS_DRAFT = "draft",
    CODE_STATUS_ACTIVE = "active",
    CODE_STATUS_CANCELLED = "cancelled",
    CODE_STATUS_ENTERED_IN_ERROR = "entered-in-error"
}

# FHIR PASClaimResponseBaseItemDetailSubDetail datatype record.
#
# + adjudication - The adjudication results.
# + subDetailSequence - A number to uniquely reference the claim sub-detail entry.
# + extension - May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
# + modifierExtension - May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).
# + id - Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
# + noteNumber - The numbers associated with notes below which apply to the adjudication of this item.

@r4:DataTypeDefinition {
    name: "PASClaimResponseBaseItemDetailSubDetail",
    baseType: (),
    elements: {
        "adjudication": {
            name: "adjudication",
            dataType: international401:ClaimResponseItemAdjudication,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The adjudication results.",
            path: "ClaimResponse.item.detail.subDetail.adjudication"
        },

        "subDetailSequence": {
            name: "subDetailSequence",
            dataType: r4:positiveInt,
            min: 1,
            max: 1,
            isArray: false,
            description: "A number to uniquely reference the claim sub-detail entry.",
            path: "ClaimResponse.item.detail.subDetail.subDetailSequence"
        },

        "extension": {
            name: "extension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            path: "ClaimResponse.item.detail.subDetail.extension"
        },

        "modifierExtension": {
            name: "modifierExtension",
            dataType: r4:Extension,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions. Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            path: "ClaimResponse.item.detail.subDetail.modifierExtension"
        },

        "id": {
            name: "id",
            dataType: string,
            min: 0,
            max: 1,
            isArray: false,
            description: "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            path: "ClaimResponse.item.detail.subDetail.id"
        },

        "noteNumber": {
            name: "noteNumber",
            dataType: r4:positiveInt,
            min: 0,
            max: int:MAX_VALUE,
            isArray: true,
            description: "The numbers associated with notes below which apply to the adjudication of this item.",
            path: "ClaimResponse.item.detail.subDetail.noteNumber"
        }
    },

    serializers: {
        'xml: r4:complexDataTypeXMLSerializer,
        'json: r4:complexDataTypeJsonSerializer
    }
}

public type PASClaimResponseBaseItemDetailSubDetail record {|
    *r4:BackboneElement;

    international401:ClaimResponseItemAdjudication [] adjudication?;
    r4:positiveInt subDetailSequence;
    r4:Extension [] extension?;
    r4:Extension [] modifierExtension?;
    string id?;
    r4:positiveInt [] noteNumber?;
|};


